

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Mon Oct 07 23:43:30 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13     0000                     
    14                           ; Generated 12/10/2023 GMT
    15                           ; 
    16                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48     0000                     	;# 
    49     0001                     	;# 
    50     0002                     	;# 
    51     0003                     	;# 
    52     0004                     	;# 
    53     0005                     	;# 
    54     0006                     	;# 
    55     0007                     	;# 
    56     0008                     	;# 
    57     0009                     	;# 
    58     000A                     	;# 
    59     000B                     	;# 
    60     000C                     	;# 
    61     000D                     	;# 
    62     000E                     	;# 
    63     000E                     	;# 
    64     000F                     	;# 
    65     0010                     	;# 
    66     0011                     	;# 
    67     0012                     	;# 
    68     0013                     	;# 
    69     0014                     	;# 
    70     0015                     	;# 
    71     0015                     	;# 
    72     0016                     	;# 
    73     0017                     	;# 
    74     0018                     	;# 
    75     0019                     	;# 
    76     001A                     	;# 
    77     001B                     	;# 
    78     001B                     	;# 
    79     001C                     	;# 
    80     001D                     	;# 
    81     001E                     	;# 
    82     001F                     	;# 
    83     0081                     	;# 
    84     0085                     	;# 
    85     0086                     	;# 
    86     0087                     	;# 
    87     0088                     	;# 
    88     0089                     	;# 
    89     008C                     	;# 
    90     008D                     	;# 
    91     008E                     	;# 
    92     0091                     	;# 
    93     0092                     	;# 
    94     0093                     	;# 
    95     0094                     	;# 
    96     0098                     	;# 
    97     0099                     	;# 
    98     009C                     	;# 
    99     009D                     	;# 
   100     009E                     	;# 
   101     009F                     	;# 
   102     010C                     	;# 
   103     010D                     	;# 
   104     010E                     	;# 
   105     010F                     	;# 
   106     018C                     	;# 
   107     018D                     	;# 
   108     0000                     	;# 
   109     0001                     	;# 
   110     0002                     	;# 
   111     0003                     	;# 
   112     0004                     	;# 
   113     0005                     	;# 
   114     0006                     	;# 
   115     0007                     	;# 
   116     0008                     	;# 
   117     0009                     	;# 
   118     000A                     	;# 
   119     000B                     	;# 
   120     000C                     	;# 
   121     000D                     	;# 
   122     000E                     	;# 
   123     000E                     	;# 
   124     000F                     	;# 
   125     0010                     	;# 
   126     0011                     	;# 
   127     0012                     	;# 
   128     0013                     	;# 
   129     0014                     	;# 
   130     0015                     	;# 
   131     0015                     	;# 
   132     0016                     	;# 
   133     0017                     	;# 
   134     0018                     	;# 
   135     0019                     	;# 
   136     001A                     	;# 
   137     001B                     	;# 
   138     001B                     	;# 
   139     001C                     	;# 
   140     001D                     	;# 
   141     001E                     	;# 
   142     001F                     	;# 
   143     0081                     	;# 
   144     0085                     	;# 
   145     0086                     	;# 
   146     0087                     	;# 
   147     0088                     	;# 
   148     0089                     	;# 
   149     008C                     	;# 
   150     008D                     	;# 
   151     008E                     	;# 
   152     0091                     	;# 
   153     0092                     	;# 
   154     0093                     	;# 
   155     0094                     	;# 
   156     0098                     	;# 
   157     0099                     	;# 
   158     009C                     	;# 
   159     009D                     	;# 
   160     009E                     	;# 
   161     009F                     	;# 
   162     010C                     	;# 
   163     010D                     	;# 
   164     010E                     	;# 
   165     010F                     	;# 
   166     018C                     	;# 
   167     018D                     	;# 
   168     000B                     _INTCON	set	11
   169     0007                     _PORTC	set	7
   170     0008                     _PORTD	set	8
   171     0006                     _PORTB	set	6
   172     0087                     _TRISC	set	135
   173     0088                     _TRISD	set	136
   174     0086                     _TRISB	set	134
   175                           
   176                           	psect	cinit
   177     0011                     start_initialization:	
   178                           ; #config settings
   179                           
   180     0011                     __initialization:
   181                           
   182                           ; Clear objects allocated to COMMON
   183     0011  01F6               	clrf	__pbssCOMMON& (0+127)
   184     0012                     end_of_initialization:	
   185                           ;End of C runtime variable initialization code
   186                           
   187     0012                     __end_of__initialization:
   188     0012  0183               	clrf	3
   189     0013  120A  118A  2816   	ljmp	_main	;jump to C main() function
   190                           
   191                           	psect	bssCOMMON
   192     0076                     __pbssCOMMON:
   193     0076                     _value:
   194     0076                     	ds	1
   195                           
   196                           	psect	cstackCOMMON
   197     0070                     __pcstackCOMMON:
   198     0070                     ?_main:
   199     0070                     ?_ISR:	
   200                           ; 1 bytes @ 0x0
   201                           
   202     0070                     ??_ISR:	
   203                           ; 1 bytes @ 0x0
   204                           
   205                           
   206                           ; 1 bytes @ 0x0
   207     0070                     	ds	6
   208                           
   209                           	psect	cstackBANK0
   210     0020                     __pcstackBANK0:
   211     0020                     ??_main:
   212                           
   213                           ; 1 bytes @ 0x0
   214     0020                     	ds	3
   215                           
   216                           	psect	maintext
   217     0016                     __pmaintext:	
   218 ;;
   219 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   220 ;;
   221 ;; *************** function _main *****************
   222 ;; Defined at:
   223 ;;		line 17 in file "Task_interrupt_class10.c"
   224 ;; Parameters:    Size  Location     Type
   225 ;;		None
   226 ;; Auto vars:     Size  Location     Type
   227 ;;		None
   228 ;; Return value:  Size  Location     Type
   229 ;;                  1    wreg      void 
   230 ;; Registers used:
   231 ;;		wreg, status,2
   232 ;; Tracked objects:
   233 ;;		On entry : B00/0
   234 ;;		On exit  : 0/0
   235 ;;		Unchanged: 0/0
   236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   237 ;;      Params:         0       0       0       0       0
   238 ;;      Locals:         0       0       0       0       0
   239 ;;      Temps:          0       3       0       0       0
   240 ;;      Totals:         0       3       0       0       0
   241 ;;Total ram usage:        3 bytes
   242 ;; Hardware stack levels required when called: 1
   243 ;; This function calls:
   244 ;;		Nothing
   245 ;; This function is called by:
   246 ;;		Startup code after reset
   247 ;; This function uses a non-reentrant model
   248 ;;
   249                           
   250     0016                     _main:	
   251                           ;psect for function _main
   252                           
   253     0016                     l604:	
   254                           ;incstack = 0
   255                           ; Regs used in _main: [wreg+status,2]
   256                           
   257                           
   258                           ;Task_interrupt_class10.c: 19:     TRISB = 0x01;
   259     0016  3001               	movlw	1
   260     0017  1683               	bsf	3,5	;RP0=1, select bank1
   261     0018  1303               	bcf	3,6	;RP1=0, select bank1
   262     0019  0086               	movwf	6	;volatile
   263     001A                     l606:
   264                           
   265                           ;Task_interrupt_class10.c: 20:     PORTB = 0x00;
   266     001A  1283               	bcf	3,5	;RP0=0, select bank0
   267     001B  1303               	bcf	3,6	;RP1=0, select bank0
   268     001C  0186               	clrf	6	;volatile
   269     001D                     l608:
   270                           
   271                           ;Task_interrupt_class10.c: 23:     TRISD = 0x00;
   272     001D  1683               	bsf	3,5	;RP0=1, select bank1
   273     001E  1303               	bcf	3,6	;RP1=0, select bank1
   274     001F  0188               	clrf	8	;volatile
   275     0020                     l610:
   276                           
   277                           ;Task_interrupt_class10.c: 24:     PORTD = 0x00;
   278     0020  1283               	bcf	3,5	;RP0=0, select bank0
   279     0021  1303               	bcf	3,6	;RP1=0, select bank0
   280     0022  0188               	clrf	8	;volatile
   281     0023                     l612:
   282                           
   283                           ;Task_interrupt_class10.c: 27:     TRISC = 0x00;
   284     0023  1683               	bsf	3,5	;RP0=1, select bank1
   285     0024  1303               	bcf	3,6	;RP1=0, select bank1
   286     0025  0187               	clrf	7	;volatile
   287     0026                     l614:
   288                           
   289                           ;Task_interrupt_class10.c: 28:     PORTC = 0x00;
   290     0026  1283               	bcf	3,5	;RP0=0, select bank0
   291     0027  1303               	bcf	3,6	;RP1=0, select bank0
   292     0028  0187               	clrf	7	;volatile
   293     0029                     l616:
   294                           
   295                           ;Task_interrupt_class10.c: 31:     INTCON = 0x90;
   296     0029  3090               	movlw	144
   297     002A  008B               	movwf	11	;volatile
   298     002B                     l618:
   299                           
   300                           ;Task_interrupt_class10.c: 39:         PORTC = ~PORTC;
   301     002B  1283               	bcf	3,5	;RP0=0, select bank0
   302     002C  1303               	bcf	3,6	;RP1=0, select bank0
   303     002D  0987               	comf	7,f	;volatile
   304     002E                     l620:
   305                           
   306                           ;Task_interrupt_class10.c: 40:         _delay((unsigned long)((500)*(6000000/4000.0)));
   307     002E  3004               	movlw	4
   308     002F  1283               	bcf	3,5	;RP0=0, select bank0
   309     0030  1303               	bcf	3,6	;RP1=0, select bank0
   310     0031  00A2               	movwf	??_main+2
   311     0032  30CF               	movlw	207
   312     0033  00A1               	movwf	??_main+1
   313     0034  3001               	movlw	1
   314     0035  00A0               	movwf	??_main
   315     0036                     u27:
   316     0036  0BA0               	decfsz	??_main,f
   317     0037  2836               	goto	u27
   318     0038  0BA1               	decfsz	??_main+1,f
   319     0039  2836               	goto	u27
   320     003A  0BA2               	decfsz	??_main+2,f
   321     003B  2836               	goto	u27
   322     003C  282B               	goto	l618
   323     003D  120A  118A  280E   	ljmp	start
   324     0040                     __end_of_main:
   325                           
   326                           	psect	text1
   327     0040                     __ptext1:	
   328 ;; *************** function _ISR *****************
   329 ;; Defined at:
   330 ;;		line 47 in file "Task_interrupt_class10.c"
   331 ;; Parameters:    Size  Location     Type
   332 ;;		None
   333 ;; Auto vars:     Size  Location     Type
   334 ;;		None
   335 ;; Return value:  Size  Location     Type
   336 ;;                  1    wreg      void 
   337 ;; Registers used:
   338 ;;		wreg, status,2, status,0, btemp+1
   339 ;; Tracked objects:
   340 ;;		On entry : 0/0
   341 ;;		On exit  : 0/0
   342 ;;		Unchanged: 0/0
   343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   344 ;;      Params:         0       0       0       0       0
   345 ;;      Locals:         0       0       0       0       0
   346 ;;      Temps:          6       0       0       0       0
   347 ;;      Totals:         6       0       0       0       0
   348 ;;Total ram usage:        6 bytes
   349 ;; Hardware stack levels used: 1
   350 ;; This function calls:
   351 ;;		Nothing
   352 ;; This function is called by:
   353 ;;		Interrupt level 1
   354 ;; This function uses a non-reentrant model
   355 ;;
   356                           
   357     0040                     _ISR:	
   358                           ;psect for function _ISR
   359                           
   360     0040                     i1l594:
   361                           
   362                           ;Task_interrupt_class10.c: 49:     if (INTCON & 0x02) {
   363     0040  1C8B               	btfss	11,1	;volatile
   364     0041  2843               	goto	u1_21
   365     0042  2844               	goto	u1_20
   366     0043                     u1_21:
   367     0043  2859               	goto	i1l32
   368     0044                     u1_20:
   369     0044                     i1l596:
   370                           
   371                           ;Task_interrupt_class10.c: 51:         PORTD = ~PORTD;
   372     0044  1283               	bcf	3,5	;RP0=0, select bank0
   373     0045  1303               	bcf	3,6	;RP1=0, select bank0
   374     0046  0988               	comf	8,f	;volatile
   375     0047                     i1l598:
   376                           
   377                           ;Task_interrupt_class10.c: 54:         PORTC = 0x00;
   378     0047  0187               	clrf	7	;volatile
   379     0048                     i1l600:
   380                           
   381                           ;Task_interrupt_class10.c: 57:         INTCON &= ~(0x02);
   382     0048  30FD               	movlw	253
   383     0049  00FF               	movwf	btemp+1
   384     004A  087F               	movf	btemp+1,w
   385     004B  058B               	andwf	11,f	;volatile
   386     004C                     i1l602:
   387                           
   388                           ;Task_interrupt_class10.c: 60:         _delay((unsigned long)((5000)*(6000000/4000.0)));
   389     004C  3027               	movlw	39
   390     004D  00F2               	movwf	??_ISR+2
   391     004E  300D               	movlw	13
   392     004F  00F1               	movwf	??_ISR+1
   393     0050  3026               	movlw	38
   394     0051  00F0               	movwf	??_ISR
   395     0052                     u3_27:
   396     0052  0BF0               	decfsz	??_ISR,f
   397     0053  2852               	goto	u3_27
   398     0054  0BF1               	decfsz	??_ISR+1,f
   399     0055  2852               	goto	u3_27
   400     0056  0BF2               	decfsz	??_ISR+2,f
   401     0057  2852               	goto	u3_27
   402     0058  0000               	nop
   403     0059                     i1l32:
   404     0059  0875               	movf	??_ISR+5,w
   405     005A  00FF               	movwf	btemp+1
   406     005B  0874               	movf	??_ISR+4,w
   407     005C  008A               	movwf	10
   408     005D  0E73               	swapf	??_ISR+3,w
   409     005E  0083               	movwf	3
   410     005F  0EFE               	swapf	btemp,f
   411     0060  0E7E               	swapf	btemp,w
   412     0061  0009               	retfie
   413     0062                     __end_of_ISR:
   414     007E                     btemp	set	126	;btemp
   415     007E                     wtemp0	set	126
   416                           
   417                           	psect	intentry
   418     0004                     __pintentry:	
   419                           ;incstack = 0
   420                           ; Regs used in _ISR: [wreg+status,2+status,0+btemp+1]
   421                           
   422     0004                     interrupt_function:
   423     007E                     saved_w	set	btemp
   424     0004  00FE               	movwf	btemp
   425     0005  0E03               	swapf	3,w
   426     0006  00F3               	movwf	??_ISR+3
   427     0007  080A               	movf	10,w
   428     0008  00F4               	movwf	??_ISR+4
   429     0009  087F               	movf	btemp+1,w
   430     000A  00F5               	movwf	??_ISR+5
   431     000B  120A  118A  2840   	ljmp	_ISR
   432                           
   433                           	psect	config
   434                           
   435                           ;Config register CONFIG @ 0x2007
   436                           ;	Oscillator Selection bits
   437                           ;	FOSC = HS, HS oscillator
   438                           ;	Watchdog Timer Enable bit
   439                           ;	WDTE = OFF, WDT disabled
   440                           ;	Power-up Timer Enable bit
   441                           ;	PWRTE = OFF, PWRT disabled
   442                           ;	Brown-out Reset Enable bit
   443                           ;	BOREN = OFF, BOR disabled
   444                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   445                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   446                           ;	Data EEPROM Memory Code Protection bit
   447                           ;	CPD = OFF, Data EEPROM code protection off
   448                           ;	Flash Program Memory Write Enable bits
   449                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   450                           ;	In-Circuit Debugger Mode bit
   451                           ;	DEBUG = 0x1, unprogrammed default
   452                           ;	Flash Program Memory Code Protection bit
   453                           ;	CP = OFF, Code protection off
   454     2007                     	org	8199
   455     2007  3F3A               	dw	16186

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       7
    BANK0            80      3       3
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _ISR                                                  6     6      0       0
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      3       3       5        3.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       A      12        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Mon Oct 07 23:43:30 2024

                     u27 0036                      l610 0020                      l620 002E  
                    l612 0023                      l604 0016                      l614 0026  
                    l606 001A                      l616 0029                      l608 001D  
                    l618 002B                      _ISR 0040                     ?_ISR 0070  
                   i1l32 0059                     u1_20 0044                     u1_21 0043  
                   u3_27 0052                     _main 0016                     btemp 007E  
                   start 000E                    ??_ISR 0070                    ?_main 0070  
                  i1l600 0048                    i1l602 004C                    i1l594 0040  
                  i1l596 0044                    i1l598 0047                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _value 0076  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 0011             __end_of_main 0040                   ??_main 0020  
                 _INTCON 000B                   saved_w 007E  __end_of__initialization 0012  
         __pcstackCOMMON 0070               __pmaintext 0016               __pintentry 0004  
                __ptext1 0040     end_of_initialization 0012      start_initialization 0011  
            __end_of_ISR 0062              __pbssCOMMON 0076                ___latbits 0002  
          __pcstackBANK0 0020        interrupt_function 0004                 intlevel1 0000  
