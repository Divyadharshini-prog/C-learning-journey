

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Mon Oct 21 23:47:56 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	intentry,global,class=CODE,delta=2
     9                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    10                           	dabs	1,0x7E,2
    11     0000                     
    12                           ; Generated 12/10/2023 GMT
    13                           ; 
    14                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    15                           ; All rights reserved.
    16                           ; 
    17                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    18                           ; 
    19                           ; Redistribution and use in source and binary forms, with or without modification, are
    20                           ; permitted provided that the following conditions are met:
    21                           ; 
    22                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    23                           ;        conditions and the following disclaimer.
    24                           ; 
    25                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    26                           ;        of conditions and the following disclaimer in the documentation and/or other
    27                           ;        materials provided with the distribution. Publication is not required when
    28                           ;        this file is used in an embedded application.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F877A Definitions
    44                           ; 
    45                           ; SFR Addresses
    46     0000                     	;# 
    47     0001                     	;# 
    48     0002                     	;# 
    49     0003                     	;# 
    50     0004                     	;# 
    51     0005                     	;# 
    52     0006                     	;# 
    53     0007                     	;# 
    54     0008                     	;# 
    55     0009                     	;# 
    56     000A                     	;# 
    57     000B                     	;# 
    58     000C                     	;# 
    59     000D                     	;# 
    60     000E                     	;# 
    61     000E                     	;# 
    62     000F                     	;# 
    63     0010                     	;# 
    64     0011                     	;# 
    65     0012                     	;# 
    66     0013                     	;# 
    67     0014                     	;# 
    68     0015                     	;# 
    69     0015                     	;# 
    70     0016                     	;# 
    71     0017                     	;# 
    72     0018                     	;# 
    73     0019                     	;# 
    74     001A                     	;# 
    75     001B                     	;# 
    76     001B                     	;# 
    77     001C                     	;# 
    78     001D                     	;# 
    79     001E                     	;# 
    80     001F                     	;# 
    81     0081                     	;# 
    82     0085                     	;# 
    83     0086                     	;# 
    84     0087                     	;# 
    85     0088                     	;# 
    86     0089                     	;# 
    87     008C                     	;# 
    88     008D                     	;# 
    89     008E                     	;# 
    90     0091                     	;# 
    91     0092                     	;# 
    92     0093                     	;# 
    93     0094                     	;# 
    94     0098                     	;# 
    95     0099                     	;# 
    96     009C                     	;# 
    97     009D                     	;# 
    98     009E                     	;# 
    99     009F                     	;# 
   100     010C                     	;# 
   101     010D                     	;# 
   102     010E                     	;# 
   103     010F                     	;# 
   104     018C                     	;# 
   105     018D                     	;# 
   106     0000                     	;# 
   107     0001                     	;# 
   108     0002                     	;# 
   109     0003                     	;# 
   110     0004                     	;# 
   111     0005                     	;# 
   112     0006                     	;# 
   113     0007                     	;# 
   114     0008                     	;# 
   115     0009                     	;# 
   116     000A                     	;# 
   117     000B                     	;# 
   118     000C                     	;# 
   119     000D                     	;# 
   120     000E                     	;# 
   121     000E                     	;# 
   122     000F                     	;# 
   123     0010                     	;# 
   124     0011                     	;# 
   125     0012                     	;# 
   126     0013                     	;# 
   127     0014                     	;# 
   128     0015                     	;# 
   129     0015                     	;# 
   130     0016                     	;# 
   131     0017                     	;# 
   132     0018                     	;# 
   133     0019                     	;# 
   134     001A                     	;# 
   135     001B                     	;# 
   136     001B                     	;# 
   137     001C                     	;# 
   138     001D                     	;# 
   139     001E                     	;# 
   140     001F                     	;# 
   141     0081                     	;# 
   142     0085                     	;# 
   143     0086                     	;# 
   144     0087                     	;# 
   145     0088                     	;# 
   146     0089                     	;# 
   147     008C                     	;# 
   148     008D                     	;# 
   149     008E                     	;# 
   150     0091                     	;# 
   151     0092                     	;# 
   152     0093                     	;# 
   153     0094                     	;# 
   154     0098                     	;# 
   155     0099                     	;# 
   156     009C                     	;# 
   157     009D                     	;# 
   158     009E                     	;# 
   159     009F                     	;# 
   160     010C                     	;# 
   161     010D                     	;# 
   162     010E                     	;# 
   163     010F                     	;# 
   164     018C                     	;# 
   165     018D                     	;# 
   166     000C                     _PIR1	set	12
   167     000B                     _INTCON	set	11
   168     0010                     _T1CON	set	16
   169     0008                     _PORTD	set	8
   170     0007                     _PORTC	set	7
   171     008C                     _PIE1	set	140
   172     0088                     _TRISD	set	136
   173     0087                     _TRISC	set	135
   174                           
   175                           	psect	cinit
   176     0011                     start_initialization:	
   177                           ; #config settings
   178                           
   179     0011                     __initialization:
   180     0011                     end_of_initialization:	
   181                           ;End of C runtime variable initialization code
   182                           
   183     0011                     __end_of__initialization:
   184     0011  0183               	clrf	3
   185     0012  120A  118A  2815   	ljmp	_main	;jump to C main() function
   186                           
   187                           	psect	cstackCOMMON
   188     0070                     __pcstackCOMMON:
   189     0070                     ?_main:
   190     0070                     ?_ISR:	
   191                           ; 1 bytes @ 0x0
   192                           
   193     0070                     ??_ISR:	
   194                           ; 1 bytes @ 0x0
   195                           
   196                           
   197                           ; 1 bytes @ 0x0
   198     0070                     	ds	3
   199     0073                     ??_main:
   200                           
   201                           ; 1 bytes @ 0x3
   202     0073                     	ds	3
   203                           
   204                           	psect	maintext
   205     0015                     __pmaintext:	
   206 ;;
   207 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   208 ;;
   209 ;; *************** function _main *****************
   210 ;; Defined at:
   211 ;;		line 23 in file "class_interrupt_timer.c"
   212 ;; Parameters:    Size  Location     Type
   213 ;;		None
   214 ;; Auto vars:     Size  Location     Type
   215 ;;		None
   216 ;; Return value:  Size  Location     Type
   217 ;;                  1    wreg      void 
   218 ;; Registers used:
   219 ;;		wreg, status,2, status,0, btemp+1
   220 ;; Tracked objects:
   221 ;;		On entry : B00/0
   222 ;;		On exit  : 0/0
   223 ;;		Unchanged: 0/0
   224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   225 ;;      Params:         0       0       0       0       0
   226 ;;      Locals:         0       0       0       0       0
   227 ;;      Temps:          3       0       0       0       0
   228 ;;      Totals:         3       0       0       0       0
   229 ;;Total ram usage:        3 bytes
   230 ;; Hardware stack levels required when called: 1
   231 ;; This function calls:
   232 ;;		Nothing
   233 ;; This function is called by:
   234 ;;		Startup code after reset
   235 ;; This function uses a non-reentrant model
   236 ;;
   237                           
   238     0015                     _main:	
   239                           ;psect for function _main
   240                           
   241     0015                     l576:	
   242                           ;incstack = 0
   243                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1]
   244                           
   245                           
   246                           ;class_interrupt_timer.c: 26:     TRISC = 0x00;
   247     0015  1683               	bsf	3,5	;RP0=1, select bank1
   248     0016  1303               	bcf	3,6	;RP1=0, select bank1
   249     0017  0187               	clrf	7	;volatile
   250                           
   251                           ;class_interrupt_timer.c: 27:     TRISD = 0x00;
   252     0018  0188               	clrf	8	;volatile
   253                           
   254                           ;class_interrupt_timer.c: 30:     PORTC = 0x00;
   255     0019  1283               	bcf	3,5	;RP0=0, select bank0
   256     001A  1303               	bcf	3,6	;RP1=0, select bank0
   257     001B  0187               	clrf	7	;volatile
   258                           
   259                           ;class_interrupt_timer.c: 31:     PORTD = 0x00;
   260     001C  0188               	clrf	8	;volatile
   261     001D                     l578:
   262                           
   263                           ;class_interrupt_timer.c: 36:     T1CON = 0x11;
   264     001D  3011               	movlw	17
   265     001E  0090               	movwf	16	;volatile
   266     001F                     l580:
   267                           
   268                           ;class_interrupt_timer.c: 41:     INTCON |= 0xC0;
   269     001F  30C0               	movlw	192
   270     0020  00FF               	movwf	btemp+1
   271     0021  087F               	movf	btemp+1,w
   272     0022  048B               	iorwf	11,f	;volatile
   273     0023                     l582:
   274                           
   275                           ;class_interrupt_timer.c: 45:     PIE1 |= 0x01;
   276     0023  1683               	bsf	3,5	;RP0=1, select bank1
   277     0024  1303               	bcf	3,6	;RP1=0, select bank1
   278     0025  140C               	bsf	12,0	;volatile
   279     0026                     l584:
   280                           
   281                           ;class_interrupt_timer.c: 49:     PIR1 &= 0xFE;
   282     0026  30FE               	movlw	254
   283     0027  00FF               	movwf	btemp+1
   284     0028  087F               	movf	btemp+1,w
   285     0029  1283               	bcf	3,5	;RP0=0, select bank0
   286     002A  1303               	bcf	3,6	;RP1=0, select bank0
   287     002B  058C               	andwf	12,f	;volatile
   288     002C                     l586:
   289                           
   290                           ;class_interrupt_timer.c: 54:         PORTC = ~PORTC;
   291     002C  1283               	bcf	3,5	;RP0=0, select bank0
   292     002D  1303               	bcf	3,6	;RP1=0, select bank0
   293     002E  0987               	comf	7,f	;volatile
   294     002F                     l588:
   295                           
   296                           ;class_interrupt_timer.c: 57:         _delay((unsigned long)((500)*(6000000/4000.0)));
   297     002F  3004               	movlw	4
   298     0030  00F5               	movwf	??_main+2
   299     0031  30CF               	movlw	207
   300     0032  00F4               	movwf	??_main+1
   301     0033  3001               	movlw	1
   302     0034  00F3               	movwf	??_main
   303     0035                     u27:
   304     0035  0BF3               	decfsz	??_main,f
   305     0036  2835               	goto	u27
   306     0037  0BF4               	decfsz	??_main+1,f
   307     0038  2835               	goto	u27
   308     0039  0BF5               	decfsz	??_main+2,f
   309     003A  2835               	goto	u27
   310     003B  283C               	nop2
   311     003C  282C               	goto	l586
   312     003D  120A  118A  280E   	ljmp	start
   313     0040                     __end_of_main:
   314                           
   315                           	psect	text1
   316     0040                     __ptext1:	
   317 ;; *************** function _ISR *****************
   318 ;; Defined at:
   319 ;;		line 62 in file "class_interrupt_timer.c"
   320 ;; Parameters:    Size  Location     Type
   321 ;;		None
   322 ;; Auto vars:     Size  Location     Type
   323 ;;		None
   324 ;; Return value:  Size  Location     Type
   325 ;;                  1    wreg      void 
   326 ;; Registers used:
   327 ;;		wreg, status,2, status,0, btemp+1
   328 ;; Tracked objects:
   329 ;;		On entry : 0/0
   330 ;;		On exit  : 0/0
   331 ;;		Unchanged: 0/0
   332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   333 ;;      Params:         0       0       0       0       0
   334 ;;      Locals:         0       0       0       0       0
   335 ;;      Temps:          3       0       0       0       0
   336 ;;      Totals:         3       0       0       0       0
   337 ;;Total ram usage:        3 bytes
   338 ;; Hardware stack levels used: 1
   339 ;; This function calls:
   340 ;;		Nothing
   341 ;; This function is called by:
   342 ;;		Interrupt level 1
   343 ;; This function uses a non-reentrant model
   344 ;;
   345                           
   346     0040                     _ISR:	
   347                           ;psect for function _ISR
   348                           
   349     0040                     i1l590:
   350                           
   351                           ;class_interrupt_timer.c: 64:     if (PIR1 & 0x01) {
   352     0040  1283               	bcf	3,5	;RP0=0, select bank0
   353     0041  1303               	bcf	3,6	;RP1=0, select bank0
   354     0042  1C0C               	btfss	12,0	;volatile
   355     0043  2845               	goto	u1_21
   356     0044  2846               	goto	u1_20
   357     0045                     u1_21:
   358     0045  284B               	goto	i1l32
   359     0046                     u1_20:
   360     0046                     i1l592:
   361                           
   362                           ;class_interrupt_timer.c: 66:         PORTD = ~PORTD;
   363     0046  0988               	comf	8,f	;volatile
   364     0047                     i1l594:
   365                           
   366                           ;class_interrupt_timer.c: 69:         PIR1 &= 0xFE;
   367     0047  30FE               	movlw	254
   368     0048  00FF               	movwf	btemp+1
   369     0049  087F               	movf	btemp+1,w
   370     004A  058C               	andwf	12,f	;volatile
   371     004B                     i1l32:
   372     004B  0872               	movf	??_ISR+2,w
   373     004C  00FF               	movwf	btemp+1
   374     004D  0871               	movf	??_ISR+1,w
   375     004E  008A               	movwf	10
   376     004F  0E70               	swapf	??_ISR,w
   377     0050  0083               	movwf	3
   378     0051  0EFE               	swapf	btemp,f
   379     0052  0E7E               	swapf	btemp,w
   380     0053  0009               	retfie
   381     0054                     __end_of_ISR:
   382     007E                     btemp	set	126	;btemp
   383     007E                     wtemp0	set	126
   384                           
   385                           	psect	intentry
   386     0004                     __pintentry:	
   387                           ;incstack = 0
   388                           ; Regs used in _ISR: [wreg+status,2+status,0+btemp+1]
   389                           
   390     0004                     interrupt_function:
   391     007E                     saved_w	set	btemp
   392     0004  00FE               	movwf	btemp
   393     0005  0E03               	swapf	3,w
   394     0006  00F0               	movwf	??_ISR
   395     0007  080A               	movf	10,w
   396     0008  00F1               	movwf	??_ISR+1
   397     0009  087F               	movf	btemp+1,w
   398     000A  00F2               	movwf	??_ISR+2
   399     000B  120A  118A  2840   	ljmp	_ISR
   400                           
   401                           	psect	config
   402                           
   403                           ;Config register CONFIG @ 0x2007
   404                           ;	Oscillator Selection bits
   405                           ;	FOSC = EXTRC, RC oscillator
   406                           ;	Watchdog Timer Enable bit
   407                           ;	WDTE = OFF, WDT disabled
   408                           ;	Power-up Timer Enable bit
   409                           ;	PWRTE = OFF, PWRT disabled
   410                           ;	Brown-out Reset Enable bit
   411                           ;	BOREN = OFF, BOR disabled
   412                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   413                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   414                           ;	Data EEPROM Memory Code Protection bit
   415                           ;	CPD = OFF, Data EEPROM code protection off
   416                           ;	Flash Program Memory Write Enable bits
   417                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   418                           ;	In-Circuit Debugger Mode bit
   419                           ;	DEBUG = 0x1, unprogrammed default
   420                           ;	Flash Program Memory Code Protection bit
   421                           ;	CP = OFF, Code protection off
   422     2007                     	org	8199
   423     2007  3F3B               	dw	16187

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       6
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0       0
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       6       1       42.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Mon Oct 21 23:47:56 2024

                     u27 0035                      l580 001F                      l582 0023  
                    l584 0026                      l576 0015                      l586 002C  
                    l578 001D                      l588 002F                      _ISR 0040  
                   ?_ISR 0070                     _PIE1 008C                     i1l32 004B  
                   _PIR1 000C                     u1_20 0046                     u1_21 0045  
                   _main 0015                     btemp 007E                     start 000E  
                  ??_ISR 0070                    ?_main 0070                    _T1CON 0010  
                  i1l590 0040                    i1l592 0046                    i1l594 0047  
                  _PORTC 0007                    _PORTD 0008                    _TRISC 0087  
                  _TRISD 0088                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 0011             __end_of_main 0040  
                 ??_main 0073                   _INTCON 000B                   saved_w 007E  
__end_of__initialization 0011           __pcstackCOMMON 0070               __pmaintext 0015  
             __pintentry 0004                  __ptext1 0040     end_of_initialization 0011  
    start_initialization 0011              __end_of_ISR 0054                ___latbits 0002  
      interrupt_function 0004                 intlevel1 0000  
