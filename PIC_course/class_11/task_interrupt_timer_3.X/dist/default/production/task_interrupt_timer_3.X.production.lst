

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Thu Oct 24 22:41:04 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	intentry,global,class=CODE,delta=2
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12     0000                     
    13                           ; Generated 12/10/2023 GMT
    14                           ; 
    15                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution. Publication is not required when
    29                           ;        this file is used in an embedded application.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F877A Definitions
    45                           ; 
    46                           ; SFR Addresses
    47     0000                     	;# 
    48     0001                     	;# 
    49     0002                     	;# 
    50     0003                     	;# 
    51     0004                     	;# 
    52     0005                     	;# 
    53     0006                     	;# 
    54     0007                     	;# 
    55     0008                     	;# 
    56     0009                     	;# 
    57     000A                     	;# 
    58     000B                     	;# 
    59     000C                     	;# 
    60     000D                     	;# 
    61     000E                     	;# 
    62     000E                     	;# 
    63     000F                     	;# 
    64     0010                     	;# 
    65     0011                     	;# 
    66     0012                     	;# 
    67     0013                     	;# 
    68     0014                     	;# 
    69     0015                     	;# 
    70     0015                     	;# 
    71     0016                     	;# 
    72     0017                     	;# 
    73     0018                     	;# 
    74     0019                     	;# 
    75     001A                     	;# 
    76     001B                     	;# 
    77     001B                     	;# 
    78     001C                     	;# 
    79     001D                     	;# 
    80     001E                     	;# 
    81     001F                     	;# 
    82     0081                     	;# 
    83     0085                     	;# 
    84     0086                     	;# 
    85     0087                     	;# 
    86     0088                     	;# 
    87     0089                     	;# 
    88     008C                     	;# 
    89     008D                     	;# 
    90     008E                     	;# 
    91     0091                     	;# 
    92     0092                     	;# 
    93     0093                     	;# 
    94     0094                     	;# 
    95     0098                     	;# 
    96     0099                     	;# 
    97     009C                     	;# 
    98     009D                     	;# 
    99     009E                     	;# 
   100     009F                     	;# 
   101     010C                     	;# 
   102     010D                     	;# 
   103     010E                     	;# 
   104     010F                     	;# 
   105     018C                     	;# 
   106     018D                     	;# 
   107     0000                     	;# 
   108     0001                     	;# 
   109     0002                     	;# 
   110     0003                     	;# 
   111     0004                     	;# 
   112     0005                     	;# 
   113     0006                     	;# 
   114     0007                     	;# 
   115     0008                     	;# 
   116     0009                     	;# 
   117     000A                     	;# 
   118     000B                     	;# 
   119     000C                     	;# 
   120     000D                     	;# 
   121     000E                     	;# 
   122     000E                     	;# 
   123     000F                     	;# 
   124     0010                     	;# 
   125     0011                     	;# 
   126     0012                     	;# 
   127     0013                     	;# 
   128     0014                     	;# 
   129     0015                     	;# 
   130     0015                     	;# 
   131     0016                     	;# 
   132     0017                     	;# 
   133     0018                     	;# 
   134     0019                     	;# 
   135     001A                     	;# 
   136     001B                     	;# 
   137     001B                     	;# 
   138     001C                     	;# 
   139     001D                     	;# 
   140     001E                     	;# 
   141     001F                     	;# 
   142     0081                     	;# 
   143     0085                     	;# 
   144     0086                     	;# 
   145     0087                     	;# 
   146     0088                     	;# 
   147     0089                     	;# 
   148     008C                     	;# 
   149     008D                     	;# 
   150     008E                     	;# 
   151     0091                     	;# 
   152     0092                     	;# 
   153     0093                     	;# 
   154     0094                     	;# 
   155     0098                     	;# 
   156     0099                     	;# 
   157     009C                     	;# 
   158     009D                     	;# 
   159     009E                     	;# 
   160     009F                     	;# 
   161     010C                     	;# 
   162     010D                     	;# 
   163     010E                     	;# 
   164     010F                     	;# 
   165     018C                     	;# 
   166     018D                     	;# 
   167     0010                     _T1CON	set	16
   168     000E                     _TMR1L	set	14
   169     000F                     _TMR1H	set	15
   170     0006                     _PORTB	set	6
   171     005F                     _GIE	set	95
   172     005E                     _PEIE	set	94
   173     0060                     _TMR1IF	set	96
   174     0086                     _TRISB	set	134
   175     0460                     _TMR1IE	set	1120
   176                           
   177                           	psect	cinit
   178     000F                     start_initialization:	
   179                           ; #config settings
   180                           
   181     000F                     __initialization:
   182                           
   183                           ; Clear objects allocated to COMMON
   184     000F  01F0               	clrf	__pbssCOMMON& (0+127)
   185     0010  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   186     0011                     end_of_initialization:	
   187                           ;End of C runtime variable initialization code
   188                           
   189     0011                     __end_of__initialization:
   190     0011  0183               	clrf	3
   191     0012  120A  118A  2837   	ljmp	_main	;jump to C main() function
   192                           
   193                           	psect	bssCOMMON
   194     0070                     __pbssCOMMON:
   195     0070                     _C:
   196     0070                     	ds	2
   197                           
   198                           	psect	cstackCOMMON
   199     0072                     __pcstackCOMMON:
   200     0072                     ?_main:
   201     0072                     ?_ISR:	
   202                           ; 1 bytes @ 0x0
   203                           
   204     0072                     ??_ISR:	
   205                           ; 1 bytes @ 0x0
   206                           
   207                           
   208                           ; 1 bytes @ 0x0
   209     0072                     	ds	2
   210     0074                     ??_main:
   211                           
   212                           	psect	maintext
   213     0037                     __pmaintext:	
   214                           ; 1 bytes @ 0x2
   215 ;;
   216 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   217 ;;
   218 ;; *************** function _main *****************
   219 ;; Defined at:
   220 ;;		line 15 in file "task_interrupt_timer_3.c"
   221 ;; Parameters:    Size  Location     Type
   222 ;;		None
   223 ;; Auto vars:     Size  Location     Type
   224 ;;		None
   225 ;; Return value:  Size  Location     Type
   226 ;;                  1    wreg      void 
   227 ;; Registers used:
   228 ;;		wreg, status,2
   229 ;; Tracked objects:
   230 ;;		On entry : B00/0
   231 ;;		On exit  : 0/0
   232 ;;		Unchanged: 0/0
   233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   234 ;;      Params:         0       0       0       0       0
   235 ;;      Locals:         0       0       0       0       0
   236 ;;      Temps:          0       0       0       0       0
   237 ;;      Totals:         0       0       0       0       0
   238 ;;Total ram usage:        0 bytes
   239 ;; Hardware stack levels required when called: 1
   240 ;; This function calls:
   241 ;;		Nothing
   242 ;; This function is called by:
   243 ;;		Startup code after reset
   244 ;; This function uses a non-reentrant model
   245 ;;
   246                           
   247     0037                     _main:	
   248                           ;psect for function _main
   249                           
   250     0037                     l579:	
   251                           ;incstack = 0
   252                           ; Regs used in _main: [wreg+status,2]
   253                           
   254                           
   255                           ;task_interrupt_timer_3.c: 17:     TRISB = 0x00;
   256     0037  1683               	bsf	3,5	;RP0=1, select bank1
   257     0038  1303               	bcf	3,6	;RP1=0, select bank1
   258     0039  0186               	clrf	6	;volatile
   259                           
   260                           ;task_interrupt_timer_3.c: 18:     PORTB = 0x00;
   261     003A  1283               	bcf	3,5	;RP0=0, select bank0
   262     003B  1303               	bcf	3,6	;RP1=0, select bank0
   263     003C  0186               	clrf	6	;volatile
   264     003D                     l581:
   265                           
   266                           ;task_interrupt_timer_3.c: 22:     TMR1H = 0x3C;
   267     003D  303C               	movlw	60
   268     003E  008F               	movwf	15	;volatile
   269     003F                     l583:
   270                           
   271                           ;task_interrupt_timer_3.c: 23:     TMR1L = 0x1F;
   272     003F  301F               	movlw	31
   273     0040  008E               	movwf	14	;volatile
   274                           
   275                           ;task_interrupt_timer_3.c: 26:     T1CON = 0x00;
   276     0041  0190               	clrf	16	;volatile
   277     0042                     l585:
   278                           
   279                           ;task_interrupt_timer_3.c: 29:     PORTB = 0x01;
   280     0042  3001               	movlw	1
   281     0043  0086               	movwf	6	;volatile
   282     0044                     l587:
   283                           
   284                           ;task_interrupt_timer_3.c: 32:     T1CON |= 0x01;
   285     0044  1410               	bsf	16,0	;volatile
   286     0045                     l589:
   287                           
   288                           ;task_interrupt_timer_3.c: 35:     TMR1IF = 0x00;
   289     0045  100C               	bcf	12,0	;volatile
   290     0046                     l591:
   291                           
   292                           ;task_interrupt_timer_3.c: 36:     TMR1IE = 0x01;
   293     0046  1683               	bsf	3,5	;RP0=1, select bank1
   294     0047  1303               	bcf	3,6	;RP1=0, select bank1
   295     0048  140C               	bsf	12,0	;volatile
   296     0049                     l593:
   297                           
   298                           ;task_interrupt_timer_3.c: 37:     PEIE = 0x01;
   299     0049  170B               	bsf	11,6	;volatile
   300     004A                     l595:
   301                           
   302                           ;task_interrupt_timer_3.c: 38:     GIE = 0x01;
   303     004A  178B               	bsf	11,7	;volatile
   304     004B                     l25:	
   305                           ;task_interrupt_timer_3.c: 41:     while (1) {
   306                           
   307     004B                     l26:	
   308                           ;task_interrupt_timer_3.c: 43:     }
   309                           
   310     004B  284B               	goto	l25
   311     004C  120A  118A  280C   	ljmp	start
   312     004F                     __end_of_main:
   313                           
   314                           	psect	text1
   315     0015                     __ptext1:	
   316 ;; *************** function _ISR *****************
   317 ;; Defined at:
   318 ;;		line 47 in file "task_interrupt_timer_3.c"
   319 ;; Parameters:    Size  Location     Type
   320 ;;		None
   321 ;; Auto vars:     Size  Location     Type
   322 ;;		None
   323 ;; Return value:  Size  Location     Type
   324 ;;                  1    wreg      void 
   325 ;; Registers used:
   326 ;;		wreg, status,2, status,0
   327 ;; Tracked objects:
   328 ;;		On entry : 0/0
   329 ;;		On exit  : 0/0
   330 ;;		Unchanged: 0/0
   331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   332 ;;      Params:         0       0       0       0       0
   333 ;;      Locals:         0       0       0       0       0
   334 ;;      Temps:          2       0       0       0       0
   335 ;;      Totals:         2       0       0       0       0
   336 ;;Total ram usage:        2 bytes
   337 ;; Hardware stack levels used: 1
   338 ;; This function calls:
   339 ;;		Nothing
   340 ;; This function is called by:
   341 ;;		Interrupt level 1
   342 ;; This function uses a non-reentrant model
   343 ;;
   344                           
   345     0015                     _ISR:	
   346                           ;psect for function _ISR
   347                           
   348     0015                     i1l597:
   349                           
   350                           ;task_interrupt_timer_3.c: 49:     if (TMR1IF) {
   351     0015  1283               	bcf	3,5	;RP0=0, select bank0
   352     0016  1303               	bcf	3,6	;RP1=0, select bank0
   353     0017  1C0C               	btfss	12,0	;volatile
   354     0018  281A               	goto	u1_21
   355     0019  281B               	goto	u1_20
   356     001A                     u1_21:
   357     001A  2830               	goto	i1l35
   358     001B                     u1_20:
   359     001B                     i1l599:
   360                           
   361                           ;task_interrupt_timer_3.c: 50:         C++;
   362     001B  3001               	movlw	1
   363     001C  07F0               	addwf	_C,f
   364     001D  1803               	skipnc
   365     001E  0AF1               	incf	_C+1,f
   366     001F  3000               	movlw	0
   367     0020  07F1               	addwf	_C+1,f
   368     0021                     i1l601:
   369                           
   370                           ;task_interrupt_timer_3.c: 52:         if (C == 20) {
   371     0021  3014               	movlw	20
   372     0022  0670               	xorwf	_C,w
   373     0023  0471               	iorwf	_C+1,w
   374     0024  1D03               	btfss	3,2
   375     0025  2827               	goto	u2_21
   376     0026  2828               	goto	u2_20
   377     0027                     u2_21:
   378     0027  282B               	goto	i1l607
   379     0028                     u2_20:
   380     0028                     i1l603:
   381                           
   382                           ;task_interrupt_timer_3.c: 53:             PORTB = ~PORTB;
   383     0028  0986               	comf	6,f	;volatile
   384     0029                     i1l605:
   385                           
   386                           ;task_interrupt_timer_3.c: 54:             C = 0;
   387     0029  01F0               	clrf	_C
   388     002A  01F1               	clrf	_C+1
   389     002B                     i1l607:
   390                           
   391                           ;task_interrupt_timer_3.c: 58:         TMR1H = 0x3C;
   392     002B  303C               	movlw	60
   393     002C  008F               	movwf	15	;volatile
   394     002D                     i1l609:
   395                           
   396                           ;task_interrupt_timer_3.c: 59:         TMR1L = 0x1F;
   397     002D  301F               	movlw	31
   398     002E  008E               	movwf	14	;volatile
   399     002F                     i1l611:
   400                           
   401                           ;task_interrupt_timer_3.c: 61:         TMR1IF = 0x00;
   402     002F  100C               	bcf	12,0	;volatile
   403     0030                     i1l35:
   404     0030  0873               	movf	??_ISR+1,w
   405     0031  008A               	movwf	10
   406     0032  0E72               	swapf	??_ISR,w
   407     0033  0083               	movwf	3
   408     0034  0EFE               	swapf	btemp,f
   409     0035  0E7E               	swapf	btemp,w
   410     0036  0009               	retfie
   411     0037                     __end_of_ISR:
   412     007E                     btemp	set	126	;btemp
   413     007E                     wtemp0	set	126
   414                           
   415                           	psect	intentry
   416     0004                     __pintentry:	
   417                           ;incstack = 0
   418                           ; Regs used in _ISR: [wreg+status,2+status,0]
   419                           
   420     0004                     interrupt_function:
   421     007E                     saved_w	set	btemp
   422     0004  00FE               	movwf	btemp
   423     0005  0E03               	swapf	3,w
   424     0006  00F2               	movwf	??_ISR
   425     0007  080A               	movf	10,w
   426     0008  00F3               	movwf	??_ISR+1
   427     0009  120A  118A  2815   	ljmp	_ISR
   428                           
   429                           	psect	config
   430                           
   431                           ;Config register CONFIG @ 0x2007
   432                           ;	Oscillator Selection bits
   433                           ;	FOSC = EXTRC, RC oscillator
   434                           ;	Watchdog Timer Enable bit
   435                           ;	WDTE = OFF, WDT disabled
   436                           ;	Power-up Timer Enable bit
   437                           ;	PWRTE = OFF, PWRT disabled
   438                           ;	Brown-out Reset Enable bit
   439                           ;	BOREN = OFF, BOR disabled
   440                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   441                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   442                           ;	Data EEPROM Memory Code Protection bit
   443                           ;	CPD = OFF, Data EEPROM code protection off
   444                           ;	Flash Program Memory Write Enable bits
   445                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   446                           ;	In-Circuit Debugger Mode bit
   447                           ;	DEBUG = 0x1, unprogrammed default
   448                           ;	Flash Program Memory Code Protection bit
   449                           ;	CP = OFF, Code protection off
   450     2007                     	org	8199
   451     2007  3F3B               	dw	16187

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2       4
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      2       4       1       28.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       4       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       4      12        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Thu Oct 24 22:41:04 2024

                      _C 0070                       l25 004B                       l26 004B  
                    l581 003D                      l591 0046                      l583 003F  
                    l593 0049                      l585 0042                      l595 004A  
                    l587 0044                      l579 0037                      l589 0045  
                    _GIE 005F                      _ISR 0015                     ?_ISR 0072  
                   _PEIE 005E                     i1l35 0030                     u1_20 001B  
                   u1_21 001A                     u2_20 0028                     u2_21 0027  
                   _main 0037                     btemp 007E                     start 000C  
                  ??_ISR 0072                    ?_main 0072                    _T1CON 0010  
                  i1l601 0021                    i1l611 002F                    i1l603 0028  
                  i1l605 0029                    i1l607 002B                    i1l609 002D  
                  i1l597 0015                    i1l599 001B                    _TMR1H 000F  
                  _TMR1L 000E                    _PORTB 0006                    _TRISB 0086  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 004F                   ??_main 0074  
                 _TMR1IE 0460                   _TMR1IF 0060                   saved_w 007E  
__end_of__initialization 0011           __pcstackCOMMON 0072               __pmaintext 0037  
             __pintentry 0004                  __ptext1 0015     end_of_initialization 0011  
    start_initialization 000F              __end_of_ISR 0037              __pbssCOMMON 0070  
              ___latbits 0002        interrupt_function 0004                 intlevel1 0000  
