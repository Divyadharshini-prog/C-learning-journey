

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Thu Oct 24 00:08:55 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	intentry,global,class=CODE,delta=2
     9                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    10                           	dabs	1,0x7E,2
    11     0000                     
    12                           ; Generated 12/10/2023 GMT
    13                           ; 
    14                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    15                           ; All rights reserved.
    16                           ; 
    17                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    18                           ; 
    19                           ; Redistribution and use in source and binary forms, with or without modification, are
    20                           ; permitted provided that the following conditions are met:
    21                           ; 
    22                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    23                           ;        conditions and the following disclaimer.
    24                           ; 
    25                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    26                           ;        of conditions and the following disclaimer in the documentation and/or other
    27                           ;        materials provided with the distribution. Publication is not required when
    28                           ;        this file is used in an embedded application.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F877A Definitions
    44                           ; 
    45                           ; SFR Addresses
    46     0000                     	;# 
    47     0001                     	;# 
    48     0002                     	;# 
    49     0003                     	;# 
    50     0004                     	;# 
    51     0005                     	;# 
    52     0006                     	;# 
    53     0007                     	;# 
    54     0008                     	;# 
    55     0009                     	;# 
    56     000A                     	;# 
    57     000B                     	;# 
    58     000C                     	;# 
    59     000D                     	;# 
    60     000E                     	;# 
    61     000E                     	;# 
    62     000F                     	;# 
    63     0010                     	;# 
    64     0011                     	;# 
    65     0012                     	;# 
    66     0013                     	;# 
    67     0014                     	;# 
    68     0015                     	;# 
    69     0015                     	;# 
    70     0016                     	;# 
    71     0017                     	;# 
    72     0018                     	;# 
    73     0019                     	;# 
    74     001A                     	;# 
    75     001B                     	;# 
    76     001B                     	;# 
    77     001C                     	;# 
    78     001D                     	;# 
    79     001E                     	;# 
    80     001F                     	;# 
    81     0081                     	;# 
    82     0085                     	;# 
    83     0086                     	;# 
    84     0087                     	;# 
    85     0088                     	;# 
    86     0089                     	;# 
    87     008C                     	;# 
    88     008D                     	;# 
    89     008E                     	;# 
    90     0091                     	;# 
    91     0092                     	;# 
    92     0093                     	;# 
    93     0094                     	;# 
    94     0098                     	;# 
    95     0099                     	;# 
    96     009C                     	;# 
    97     009D                     	;# 
    98     009E                     	;# 
    99     009F                     	;# 
   100     010C                     	;# 
   101     010D                     	;# 
   102     010E                     	;# 
   103     010F                     	;# 
   104     018C                     	;# 
   105     018D                     	;# 
   106     0000                     	;# 
   107     0001                     	;# 
   108     0002                     	;# 
   109     0003                     	;# 
   110     0004                     	;# 
   111     0005                     	;# 
   112     0006                     	;# 
   113     0007                     	;# 
   114     0008                     	;# 
   115     0009                     	;# 
   116     000A                     	;# 
   117     000B                     	;# 
   118     000C                     	;# 
   119     000D                     	;# 
   120     000E                     	;# 
   121     000E                     	;# 
   122     000F                     	;# 
   123     0010                     	;# 
   124     0011                     	;# 
   125     0012                     	;# 
   126     0013                     	;# 
   127     0014                     	;# 
   128     0015                     	;# 
   129     0015                     	;# 
   130     0016                     	;# 
   131     0017                     	;# 
   132     0018                     	;# 
   133     0019                     	;# 
   134     001A                     	;# 
   135     001B                     	;# 
   136     001B                     	;# 
   137     001C                     	;# 
   138     001D                     	;# 
   139     001E                     	;# 
   140     001F                     	;# 
   141     0081                     	;# 
   142     0085                     	;# 
   143     0086                     	;# 
   144     0087                     	;# 
   145     0088                     	;# 
   146     0089                     	;# 
   147     008C                     	;# 
   148     008D                     	;# 
   149     008E                     	;# 
   150     0091                     	;# 
   151     0092                     	;# 
   152     0093                     	;# 
   153     0094                     	;# 
   154     0098                     	;# 
   155     0099                     	;# 
   156     009C                     	;# 
   157     009D                     	;# 
   158     009E                     	;# 
   159     009F                     	;# 
   160     010C                     	;# 
   161     010D                     	;# 
   162     010E                     	;# 
   163     010F                     	;# 
   164     018C                     	;# 
   165     018D                     	;# 
   166     000E                     _TMR1L	set	14
   167     000F                     _TMR1H	set	15
   168     0010                     _T1CON	set	16
   169     0006                     _PORTB	set	6
   170     005F                     _GIE	set	95
   171     005E                     _PEIE	set	94
   172     0060                     _TMR1IF	set	96
   173     0080                     _TMR1ON	set	128
   174     0086                     _TRISB	set	134
   175     0460                     _TMR1IE	set	1120
   176                           
   177                           	psect	cinit
   178     000F                     start_initialization:	
   179                           ; #config settings
   180                           
   181     000F                     __initialization:
   182     000F                     end_of_initialization:	
   183                           ;End of C runtime variable initialization code
   184                           
   185     000F                     __end_of__initialization:
   186     000F  0183               	clrf	3
   187     0010  120A  118A  2813   	ljmp	_main	;jump to C main() function
   188                           
   189                           	psect	cstackCOMMON
   190     0070                     __pcstackCOMMON:
   191     0070                     ?_main:
   192     0070                     ?_ISR:	
   193                           ; 1 bytes @ 0x0
   194                           
   195     0070                     ??_ISR:	
   196                           ; 1 bytes @ 0x0
   197                           
   198                           
   199                           ; 1 bytes @ 0x0
   200     0070                     	ds	2
   201     0072                     ??_main:
   202                           
   203                           	psect	maintext
   204     0013                     __pmaintext:	
   205                           ; 1 bytes @ 0x2
   206 ;;
   207 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   208 ;;
   209 ;; *************** function _main *****************
   210 ;; Defined at:
   211 ;;		line 19 in file "task_interrupt_timer_2.c"
   212 ;; Parameters:    Size  Location     Type
   213 ;;		None
   214 ;; Auto vars:     Size  Location     Type
   215 ;;		None
   216 ;; Return value:  Size  Location     Type
   217 ;;                  1    wreg      void 
   218 ;; Registers used:
   219 ;;		wreg, status,2
   220 ;; Tracked objects:
   221 ;;		On entry : B00/0
   222 ;;		On exit  : 0/0
   223 ;;		Unchanged: 0/0
   224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   225 ;;      Params:         0       0       0       0       0
   226 ;;      Locals:         0       0       0       0       0
   227 ;;      Temps:          0       0       0       0       0
   228 ;;      Totals:         0       0       0       0       0
   229 ;;Total ram usage:        0 bytes
   230 ;; Hardware stack levels required when called: 1
   231 ;; This function calls:
   232 ;;		Nothing
   233 ;; This function is called by:
   234 ;;		Startup code after reset
   235 ;; This function uses a non-reentrant model
   236 ;;
   237                           
   238     0013                     _main:	
   239                           ;psect for function _main
   240                           
   241     0013                     l578:	
   242                           ;incstack = 0
   243                           ; Regs used in _main: [wreg+status,2]
   244                           
   245                           
   246                           ;task_interrupt_timer_2.c: 22:     TRISB = 0x00;
   247     0013  1683               	bsf	3,5	;RP0=1, select bank1
   248     0014  1303               	bcf	3,6	;RP1=0, select bank1
   249     0015  0186               	clrf	6	;volatile
   250     0016                     l580:
   251                           
   252                           ;task_interrupt_timer_2.c: 23:     PORTB = 0x01;
   253     0016  3001               	movlw	1
   254     0017  1283               	bcf	3,5	;RP0=0, select bank0
   255     0018  1303               	bcf	3,6	;RP1=0, select bank0
   256     0019  0086               	movwf	6	;volatile
   257     001A                     l582:
   258                           
   259                           ;task_interrupt_timer_2.c: 25:     T1CON = 0x10;
   260     001A  3010               	movlw	16
   261     001B  0090               	movwf	16	;volatile
   262     001C                     l584:
   263                           
   264                           ;task_interrupt_timer_2.c: 28:     TMR1H = 0x0B;
   265     001C  300B               	movlw	11
   266     001D  008F               	movwf	15	;volatile
   267     001E                     l586:
   268                           
   269                           ;task_interrupt_timer_2.c: 29:     TMR1L = 0xDC;
   270     001E  30DC               	movlw	220
   271     001F  008E               	movwf	14	;volatile
   272     0020                     l588:
   273                           
   274                           ;task_interrupt_timer_2.c: 32:     TMR1ON = 0x01;
   275     0020  1410               	bsf	16,0	;volatile
   276     0021                     l590:
   277                           
   278                           ;task_interrupt_timer_2.c: 35:     TMR1IF = 0x00;
   279     0021  100C               	bcf	12,0	;volatile
   280     0022                     l592:
   281                           
   282                           ;task_interrupt_timer_2.c: 36:     TMR1IE = 0x01;
   283     0022  1683               	bsf	3,5	;RP0=1, select bank1
   284     0023  1303               	bcf	3,6	;RP1=0, select bank1
   285     0024  140C               	bsf	12,0	;volatile
   286     0025                     l594:
   287                           
   288                           ;task_interrupt_timer_2.c: 37:     PEIE = 0x01;
   289     0025  170B               	bsf	11,6	;volatile
   290     0026                     l596:
   291                           
   292                           ;task_interrupt_timer_2.c: 38:     GIE = 0x01;
   293     0026  178B               	bsf	11,7	;volatile
   294     0027                     l25:	
   295                           ;task_interrupt_timer_2.c: 40:     while(1)
   296                           
   297     0027                     l26:	
   298                           ;task_interrupt_timer_2.c: 41:     {;task_interrupt_timer_2.c: 43:     }
   299                           
   300     0027  2827               	goto	l25
   301     0028  120A  118A  280C   	ljmp	start
   302     002B                     __end_of_main:
   303                           
   304                           	psect	text1
   305     002B                     __ptext1:	
   306 ;; *************** function _ISR *****************
   307 ;; Defined at:
   308 ;;		line 46 in file "task_interrupt_timer_2.c"
   309 ;; Parameters:    Size  Location     Type
   310 ;;		None
   311 ;; Auto vars:     Size  Location     Type
   312 ;;		None
   313 ;; Return value:  Size  Location     Type
   314 ;;                  1    wreg      void 
   315 ;; Registers used:
   316 ;;		wreg
   317 ;; Tracked objects:
   318 ;;		On entry : 0/0
   319 ;;		On exit  : 0/0
   320 ;;		Unchanged: 0/0
   321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   322 ;;      Params:         0       0       0       0       0
   323 ;;      Locals:         0       0       0       0       0
   324 ;;      Temps:          2       0       0       0       0
   325 ;;      Totals:         2       0       0       0       0
   326 ;;Total ram usage:        2 bytes
   327 ;; Hardware stack levels used: 1
   328 ;; This function calls:
   329 ;;		Nothing
   330 ;; This function is called by:
   331 ;;		Interrupt level 1
   332 ;; This function uses a non-reentrant model
   333 ;;
   334                           
   335     002B                     _ISR:	
   336                           ;psect for function _ISR
   337                           
   338     002B                     i1l598:
   339                           
   340                           ;task_interrupt_timer_2.c: 49:     if (TMR1IF == 0x01)
   341     002B  1283               	bcf	3,5	;RP0=0, select bank0
   342     002C  1303               	bcf	3,6	;RP1=0, select bank0
   343     002D  1C0C               	btfss	12,0	;volatile
   344     002E  2830               	goto	u1_21
   345     002F  2831               	goto	u1_20
   346     0030                     u1_21:
   347     0030  2837               	goto	i1l34
   348     0031                     u1_20:
   349     0031                     i1l600:
   350                           
   351                           ;task_interrupt_timer_2.c: 50:     {;task_interrupt_timer_2.c: 51:         PORTB = ~PORT
      +                          B;
   352     0031  0986               	comf	6,f	;volatile
   353                           
   354                           ;task_interrupt_timer_2.c: 53:         TMR1IF = 0x00;
   355     0032  100C               	bcf	12,0	;volatile
   356     0033                     i1l602:
   357                           
   358                           ;task_interrupt_timer_2.c: 56:         TMR1H = 0x0B;
   359     0033  300B               	movlw	11
   360     0034  008F               	movwf	15	;volatile
   361                           
   362                           ;task_interrupt_timer_2.c: 57:         TMR1L = 0xDC;
   363     0035  30DC               	movlw	220
   364     0036  008E               	movwf	14	;volatile
   365     0037                     i1l34:
   366     0037  0871               	movf	??_ISR+1,w
   367     0038  008A               	movwf	10
   368     0039  0E70               	swapf	??_ISR,w
   369     003A  0083               	movwf	3
   370     003B  0EFE               	swapf	btemp,f
   371     003C  0E7E               	swapf	btemp,w
   372     003D  0009               	retfie
   373     003E                     __end_of_ISR:
   374     007E                     btemp	set	126	;btemp
   375     007E                     wtemp0	set	126
   376                           
   377                           	psect	intentry
   378     0004                     __pintentry:	
   379                           ;incstack = 0
   380                           ; Regs used in _ISR: [wreg]
   381                           
   382     0004                     interrupt_function:
   383     007E                     saved_w	set	btemp
   384     0004  00FE               	movwf	btemp
   385     0005  0E03               	swapf	3,w
   386     0006  00F0               	movwf	??_ISR
   387     0007  080A               	movf	10,w
   388     0008  00F1               	movwf	??_ISR+1
   389     0009  120A  118A  282B   	ljmp	_ISR
   390                           
   391                           	psect	config
   392                           
   393                           ;Config register CONFIG @ 0x2007
   394                           ;	Oscillator Selection bits
   395                           ;	FOSC = EXTRC, RC oscillator
   396                           ;	Watchdog Timer Enable bit
   397                           ;	WDTE = OFF, WDT disabled
   398                           ;	Power-up Timer Enable bit
   399                           ;	PWRTE = OFF, PWRT disabled
   400                           ;	Brown-out Reset Enable bit
   401                           ;	BOREN = OFF, BOR disabled
   402                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   403                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   404                           ;	Data EEPROM Memory Code Protection bit
   405                           ;	CPD = OFF, Data EEPROM code protection off
   406                           ;	Flash Program Memory Write Enable bits
   407                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   408                           ;	In-Circuit Debugger Mode bit
   409                           ;	DEBUG = 0x1, unprogrammed default
   410                           ;	Flash Program Memory Code Protection bit
   411                           ;	CP = OFF, Code protection off
   412     2007                     	org	8199
   413     2007  3F3B               	dw	16187

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2       2
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      2       2       1       14.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Thu Oct 24 00:08:55 2024

                     l25 0027                       l26 0027                      l580 0016  
                    l590 0021                      l582 001A                      l592 0022  
                    l584 001C                      l594 0025                      l586 001E  
                    l578 0013                      l596 0026                      l588 0020  
                    _GIE 005F                      _ISR 002B                     ?_ISR 0070  
                   _PEIE 005E                     i1l34 0037                     u1_20 0031  
                   u1_21 0030                     _main 0013                     btemp 007E  
                   start 000C                    ??_ISR 0070                    ?_main 0070  
                  _T1CON 0010                    i1l600 0031                    i1l602 0033  
                  i1l598 002B                    _TMR1H 000F                    _TMR1L 000E  
                  _PORTB 0006                    _TRISB 0086                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 002B                   ??_main 0072                   _TMR1IE 0460  
                 _TMR1IF 0060                   _TMR1ON 0080                   saved_w 007E  
__end_of__initialization 000F           __pcstackCOMMON 0070               __pmaintext 0013  
             __pintentry 0004                  __ptext1 002B     end_of_initialization 000F  
    start_initialization 000F              __end_of_ISR 003E                ___latbits 0002  
      interrupt_function 0004                 intlevel1 0000  
