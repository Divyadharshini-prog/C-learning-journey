

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Tue Nov 19 01:26:47 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    31                           	dabs	1,0x7E,2
    32     0000                     
    33                           ; Generated 12/10/2023 GMT
    34                           ; 
    35                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution. Publication is not required when
    49                           ;        this file is used in an embedded application.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC16F877A Definitions
    65                           ; 
    66                           ; SFR Addresses
    67     0000                     	;# 
    68     0001                     	;# 
    69     0002                     	;# 
    70     0003                     	;# 
    71     0004                     	;# 
    72     0005                     	;# 
    73     0006                     	;# 
    74     0007                     	;# 
    75     0008                     	;# 
    76     0009                     	;# 
    77     000A                     	;# 
    78     000B                     	;# 
    79     000C                     	;# 
    80     000D                     	;# 
    81     000E                     	;# 
    82     000E                     	;# 
    83     000F                     	;# 
    84     0010                     	;# 
    85     0011                     	;# 
    86     0012                     	;# 
    87     0013                     	;# 
    88     0014                     	;# 
    89     0015                     	;# 
    90     0015                     	;# 
    91     0016                     	;# 
    92     0017                     	;# 
    93     0018                     	;# 
    94     0019                     	;# 
    95     001A                     	;# 
    96     001B                     	;# 
    97     001B                     	;# 
    98     001C                     	;# 
    99     001D                     	;# 
   100     001E                     	;# 
   101     001F                     	;# 
   102     0081                     	;# 
   103     0085                     	;# 
   104     0086                     	;# 
   105     0087                     	;# 
   106     0088                     	;# 
   107     0089                     	;# 
   108     008C                     	;# 
   109     008D                     	;# 
   110     008E                     	;# 
   111     0091                     	;# 
   112     0092                     	;# 
   113     0093                     	;# 
   114     0094                     	;# 
   115     0098                     	;# 
   116     0099                     	;# 
   117     009C                     	;# 
   118     009D                     	;# 
   119     009E                     	;# 
   120     009F                     	;# 
   121     010C                     	;# 
   122     010D                     	;# 
   123     010E                     	;# 
   124     010F                     	;# 
   125     018C                     	;# 
   126     018D                     	;# 
   127     0000                     	;# 
   128     0001                     	;# 
   129     0002                     	;# 
   130     0003                     	;# 
   131     0004                     	;# 
   132     0005                     	;# 
   133     0006                     	;# 
   134     0007                     	;# 
   135     0008                     	;# 
   136     0009                     	;# 
   137     000A                     	;# 
   138     000B                     	;# 
   139     000C                     	;# 
   140     000D                     	;# 
   141     000E                     	;# 
   142     000E                     	;# 
   143     000F                     	;# 
   144     0010                     	;# 
   145     0011                     	;# 
   146     0012                     	;# 
   147     0013                     	;# 
   148     0014                     	;# 
   149     0015                     	;# 
   150     0015                     	;# 
   151     0016                     	;# 
   152     0017                     	;# 
   153     0018                     	;# 
   154     0019                     	;# 
   155     001A                     	;# 
   156     001B                     	;# 
   157     001B                     	;# 
   158     001C                     	;# 
   159     001D                     	;# 
   160     001E                     	;# 
   161     001F                     	;# 
   162     0081                     	;# 
   163     0085                     	;# 
   164     0086                     	;# 
   165     0087                     	;# 
   166     0088                     	;# 
   167     0089                     	;# 
   168     008C                     	;# 
   169     008D                     	;# 
   170     008E                     	;# 
   171     0091                     	;# 
   172     0092                     	;# 
   173     0093                     	;# 
   174     0094                     	;# 
   175     0098                     	;# 
   176     0099                     	;# 
   177     009C                     	;# 
   178     009D                     	;# 
   179     009E                     	;# 
   180     009F                     	;# 
   181     010C                     	;# 
   182     010D                     	;# 
   183     010E                     	;# 
   184     010F                     	;# 
   185     018C                     	;# 
   186     018D                     	;# 
   187                           
   188                           	psect	idataBANK0
   189     00D5                     __pidataBANK0:
   190                           
   191                           ;initializer for _msg2
   192     00D5  3444               	retlw	68
   193     00D6  3441               	retlw	65
   194     00D7  3454               	retlw	84
   195     00D8  3445               	retlw	69
   196     00D9  343A               	retlw	58
   197                           
   198                           ;initializer for _msg1
   199     00DA  3454               	retlw	84
   200     00DB  3449               	retlw	73
   201     00DC  344D               	retlw	77
   202     00DD  3445               	retlw	69
   203     00DE  343A               	retlw	58
   204                           
   205                           ;initializer for _year
   206     00DF  3418               	retlw	24
   207     00E0  3400               	retlw	0
   208                           
   209                           ;initializer for _month
   210     00E1  340B               	retlw	11
   211     00E2  3400               	retlw	0
   212                           
   213                           ;initializer for _date
   214     00E3  3413               	retlw	19
   215     00E4  3400               	retlw	0
   216                           
   217                           ;initializer for _hour
   218     00E5  340B               	retlw	11
   219     00E6  3400               	retlw	0
   220                           
   221                           ;initializer for _min
   222     00E7  343B               	retlw	59
   223     00E8  3400               	retlw	0
   224                           
   225                           ;initializer for _sec
   226     00E9  3437               	retlw	55
   227     00EA  3400               	retlw	0
   228                           
   229                           ;initializer for _am_pm
   230     00EB  3401               	retlw	1
   231     0013                     _SSPBUF	set	19
   232     0014                     _SSPCON	set	20
   233     0008                     _PORTD	set	8
   234     0039                     _RC1	set	57
   235     003A                     _RC2	set	58
   236     0091                     _SSPCON2	set	145
   237     0093                     _SSPADD	set	147
   238     0094                     _SSPSTAT	set	148
   239     0087                     _TRISC	set	135
   240     0088                     _TRISD	set	136
   241     048C                     _ACKEN	set	1164
   242     048D                     _ACKDT	set	1165
   243     048B                     _RCEN	set	1163
   244     048A                     _PEN	set	1162
   245     0488                     _SEN	set	1160
   246                           
   247                           	psect	cinit
   248     07E2                     start_initialization:	
   249                           ; #config settings
   250                           
   251     07E2                     __initialization:
   252                           
   253                           ; Initialize objects allocated to BANK0
   254     07E2  1383               	bcf	3,7	;select IRP bank0
   255     07E3  3055               	movlw	low (__pdataBANK0+23)
   256     07E4  00FD               	movwf	btemp+-1
   257     07E5  3000               	movlw	high __pidataBANK0
   258     07E6  00FE               	movwf	btemp
   259     07E7  30D5               	movlw	low __pidataBANK0
   260     07E8  00FF               	movwf	btemp+1
   261     07E9  303E               	movlw	low __pdataBANK0
   262     07EA  0084               	movwf	4
   263     07EB  120A  118A  20C6  120A  118A  	fcall	init_ram0
   264                           
   265                           ; Clear objects allocated to BANK0
   266     07F0  01D5               	clrf	__pbssBANK0& (0+127)
   267     07F1  01D6               	clrf	(__pbssBANK0+1)& (0+127)
   268     07F2  01D7               	clrf	(__pbssBANK0+2)& (0+127)
   269     07F3  01D8               	clrf	(__pbssBANK0+3)& (0+127)
   270     07F4  01D9               	clrf	(__pbssBANK0+4)& (0+127)
   271     07F5  01DA               	clrf	(__pbssBANK0+5)& (0+127)
   272     07F6  01DB               	clrf	(__pbssBANK0+6)& (0+127)
   273     07F7  01DC               	clrf	(__pbssBANK0+7)& (0+127)
   274     07F8  01DD               	clrf	(__pbssBANK0+8)& (0+127)
   275     07F9  01DE               	clrf	(__pbssBANK0+9)& (0+127)
   276     07FA  01DF               	clrf	(__pbssBANK0+10)& (0+127)
   277     07FB  01E0               	clrf	(__pbssBANK0+11)& (0+127)
   278     07FC                     end_of_initialization:	
   279                           ;End of C runtime variable initialization code
   280                           
   281     07FC                     __end_of__initialization:
   282     07FC  0183               	clrf	3
   283     07FD  120A  118A  2DE7   	ljmp	_main	;jump to C main() function
   284                           
   285                           	psect	bssBANK0
   286     0055                     __pbssBANK0:
   287     0055                     _year2:
   288     0055                     	ds	1
   289     0056                     _year1:
   290     0056                     	ds	1
   291     0057                     _month2:
   292     0057                     	ds	1
   293     0058                     _month1:
   294     0058                     	ds	1
   295     0059                     _date2:
   296     0059                     	ds	1
   297     005A                     _date1:
   298     005A                     	ds	1
   299     005B                     _hour2:
   300     005B                     	ds	1
   301     005C                     _hour1:
   302     005C                     	ds	1
   303     005D                     _min2:
   304     005D                     	ds	1
   305     005E                     _min1:
   306     005E                     	ds	1
   307     005F                     _sec2:
   308     005F                     	ds	1
   309     0060                     _sec1:
   310     0060                     	ds	1
   311                           
   312                           	psect	dataBANK0
   313     003E                     __pdataBANK0:
   314     003E                     _msg2:
   315     003E                     	ds	5
   316     0043                     _msg1:
   317     0043                     	ds	5
   318     0048                     _year:
   319     0048                     	ds	2
   320     004A                     _month:
   321     004A                     	ds	2
   322     004C                     _date:
   323     004C                     	ds	2
   324     004E                     _hour:
   325     004E                     	ds	2
   326     0050                     _min:
   327     0050                     	ds	2
   328     0052                     _sec:
   329     0052                     	ds	2
   330     0054                     _am_pm:
   331     0054                     	ds	1
   332                           
   333                           	psect	inittext
   334     00C2                     init_fetch0:	
   335                           ;	Called with low address in FSR and high address in W
   336                           
   337     00C2  087E               	movf	btemp,w
   338     00C3  008A               	movwf	10
   339     00C4  087F               	movf	btemp+1,w
   340     00C5  0082               	movwf	2
   341     00C6                     init_ram0:	
   342                           ;Called with:
   343                           ;	high address of idata address in btemp 
   344                           ;	low address of idata address in btemp+1 
   345                           ;	low address of data in FSR
   346                           ;	high address + 1 of data in btemp-1
   347                           
   348     00C6  120A  118A  20C2  120A  118A  	fcall	init_fetch0
   349     00CB  0080               	movwf	0
   350     00CC  0A84               	incf	4,f
   351     00CD  0804               	movf	4,w
   352     00CE  067D               	xorwf	btemp+-1,w
   353     00CF  1903               	btfsc	3,2
   354     00D0  3400               	retlw	0
   355     00D1  0AFF               	incf	btemp+1,f
   356     00D2  1903               	btfsc	3,2
   357     00D3  0AFE               	incf	btemp,f
   358     00D4  28C6               	goto	init_ram0
   359                           
   360                           	psect	cstackCOMMON
   361     0070                     __pcstackCOMMON:
   362     0070                     ?_init:
   363     0070                     ?_settime:	
   364                           ; 1 bytes @ 0x0
   365                           
   366     0070                     ?_update:	
   367                           ; 1 bytes @ 0x0
   368                           
   369     0070                     ?_lcd_command:	
   370                           ; 1 bytes @ 0x0
   371                           
   372     0070                     ??_lcd_command:	
   373                           ; 1 bytes @ 0x0
   374                           
   375     0070                     ?_lcd_data:	
   376                           ; 1 bytes @ 0x0
   377                           
   378     0070                     ??_lcd_data:	
   379                           ; 1 bytes @ 0x0
   380                           
   381     0070                     ?_main:	
   382                           ; 1 bytes @ 0x0
   383                           
   384     0070                     ?_i2c_wait:	
   385                           ; 1 bytes @ 0x0
   386                           
   387     0070                     ??_i2c_wait:	
   388                           ; 1 bytes @ 0x0
   389                           
   390     0070                     ?_i2c_start:	
   391                           ; 1 bytes @ 0x0
   392                           
   393     0070                     ??_i2c_start:	
   394                           ; 1 bytes @ 0x0
   395                           
   396     0070                     ?_i2c_stop:	
   397                           ; 1 bytes @ 0x0
   398                           
   399     0070                     ??_i2c_stop:	
   400                           ; 1 bytes @ 0x0
   401                           
   402     0070                     ?_i2c_write:	
   403                           ; 1 bytes @ 0x0
   404                           
   405     0070                     ??_i2c_write:	
   406                           ; 1 bytes @ 0x0
   407                           
   408     0070                     ?_i2c_read:	
   409                           ; 1 bytes @ 0x0
   410                           
   411     0070                     ?___wmul:	
   412                           ; 2 bytes @ 0x0
   413                           
   414     0070                     ?___awdiv:	
   415                           ; 2 bytes @ 0x0
   416                           
   417     0070                     ?___awmod:	
   418                           ; 2 bytes @ 0x0
   419                           
   420     0070                     ?___lmul:	
   421                           ; 2 bytes @ 0x0
   422                           
   423     0070                     i2c_write@data:	
   424                           ; 4 bytes @ 0x0
   425                           
   426     0070                     i2c_read@ack:	
   427                           ; 1 bytes @ 0x0
   428                           
   429     0070                     ___wmul@multiplier:	
   430                           ; 2 bytes @ 0x0
   431                           
   432     0070                     ___awdiv@divisor:	
   433                           ; 2 bytes @ 0x0
   434                           
   435     0070                     ___awmod@divisor:	
   436                           ; 2 bytes @ 0x0
   437                           
   438     0070                     ___lmul@multiplier:	
   439                           ; 2 bytes @ 0x0
   440                           
   441                           
   442                           ; 4 bytes @ 0x0
   443     0070                     	ds	2
   444     0072                     ??_i2c_read:
   445     0072                     lcd_command@cmd:	
   446                           ; 1 bytes @ 0x2
   447                           
   448     0072                     lcd_data@data:	
   449                           ; 1 bytes @ 0x2
   450                           
   451     0072                     ___wmul@multiplicand:	
   452                           ; 1 bytes @ 0x2
   453                           
   454     0072                     ___awdiv@dividend:	
   455                           ; 2 bytes @ 0x2
   456                           
   457     0072                     ___awmod@dividend:	
   458                           ; 2 bytes @ 0x2
   459                           
   460                           
   461                           ; 2 bytes @ 0x2
   462     0072                     	ds	1
   463     0073                     ??_init:
   464                           
   465                           ; 1 bytes @ 0x3
   466     0073                     	ds	1
   467     0074                     ??___wmul:
   468     0074                     ??___awdiv:	
   469                           ; 1 bytes @ 0x4
   470                           
   471     0074                     ??___awmod:	
   472                           ; 1 bytes @ 0x4
   473                           
   474     0074                     ___awdiv@counter:	
   475                           ; 1 bytes @ 0x4
   476                           
   477     0074                     ___awmod@counter:	
   478                           ; 1 bytes @ 0x4
   479                           
   480     0074                     i2c_read@value:	
   481                           ; 1 bytes @ 0x4
   482                           
   483     0074                     ___wmul@product:	
   484                           ; 2 bytes @ 0x4
   485                           
   486     0074                     ___lmul@multiplicand:	
   487                           ; 2 bytes @ 0x4
   488                           
   489                           
   490                           ; 4 bytes @ 0x4
   491     0074                     	ds	1
   492     0075                     ___awdiv@sign:
   493     0075                     ___awmod@sign:	
   494                           ; 1 bytes @ 0x5
   495                           
   496                           
   497                           ; 1 bytes @ 0x5
   498     0075                     	ds	1
   499     0076                     ?_bcd_2_dec:
   500     0076                     bcd_2_dec@val:	
   501                           ; 2 bytes @ 0x6
   502                           
   503     0076                     ___awdiv@quotient:	
   504                           ; 2 bytes @ 0x6
   505                           
   506                           
   507                           ; 2 bytes @ 0x6
   508     0076                     	ds	2
   509     0078                     ??_bcd_2_dec:
   510     0078                     ??___lmul:	
   511                           ; 1 bytes @ 0x8
   512                           
   513     0078                     ?_dec_2_bcd:	
   514                           ; 1 bytes @ 0x8
   515                           
   516     0078                     dec_2_bcd@val:	
   517                           ; 2 bytes @ 0x8
   518                           
   519                           
   520                           ; 2 bytes @ 0x8
   521     0078                     	ds	1
   522     0079                     ___lmul@product:
   523                           
   524                           ; 4 bytes @ 0x9
   525     0079                     	ds	1
   526     007A                     ??_update:
   527     007A                     ??_dec_2_bcd:	
   528                           ; 1 bytes @ 0xA
   529                           
   530                           
   531                           ; 1 bytes @ 0xA
   532     007A                     	ds	2
   533     007C                     ??_settime:
   534                           
   535                           ; 1 bytes @ 0xC
   536     007C                     	ds	1
   537     007D                     ??___lldiv:
   538                           
   539                           ; 1 bytes @ 0xD
   540     007D                     	ds	1
   541                           
   542                           	psect	cstackBANK0
   543     0020                     __pcstackBANK0:
   544     0020                     ?___lldiv:
   545     0020                     ___lldiv@divisor:	
   546                           ; 4 bytes @ 0x0
   547                           
   548                           
   549                           ; 4 bytes @ 0x0
   550     0020                     	ds	4
   551     0024                     ___lldiv@dividend:
   552                           
   553                           ; 4 bytes @ 0x4
   554     0024                     	ds	4
   555     0028                     ___lldiv@quotient:
   556                           
   557                           ; 4 bytes @ 0x8
   558     0028                     	ds	4
   559     002C                     ___lldiv@counter:
   560                           
   561                           ; 1 bytes @ 0xC
   562     002C                     	ds	1
   563     002D                     ?_i2c_init:
   564     002D                     i2c_init@freq_k:	
   565                           ; 1 bytes @ 0xD
   566                           
   567                           
   568                           ; 4 bytes @ 0xD
   569     002D                     	ds	4
   570     0031                     ??_i2c_init:
   571                           
   572                           ; 1 bytes @ 0x11
   573     0031                     	ds	4
   574     0035                     ??_main:
   575                           
   576                           ; 1 bytes @ 0x15
   577     0035                     	ds	3
   578     0038                     _main$97:
   579                           
   580                           ; 2 bytes @ 0x18
   581     0038                     	ds	2
   582     003A                     main@i:
   583                           
   584                           ; 2 bytes @ 0x1A
   585     003A                     	ds	2
   586     003C                     main@i_98:
   587                           
   588                           ; 2 bytes @ 0x1C
   589     003C                     	ds	2
   590                           
   591                           	psect	maintext
   592     05E7                     __pmaintext:	
   593 ;;
   594 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   595 ;;
   596 ;; *************** function _main *****************
   597 ;; Defined at:
   598 ;;		line 42 in file "RTC_task.c"
   599 ;; Parameters:    Size  Location     Type
   600 ;;		None
   601 ;; Auto vars:     Size  Location     Type
   602 ;;  i               2   28[BANK0 ] int 
   603 ;;  i               2   26[BANK0 ] int 
   604 ;; Return value:  Size  Location     Type
   605 ;;                  1    wreg      void 
   606 ;; Registers used:
   607 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   608 ;; Tracked objects:
   609 ;;		On entry : B00/0
   610 ;;		On exit  : 0/0
   611 ;;		Unchanged: 0/0
   612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   613 ;;      Params:         0       0       0       0       0
   614 ;;      Locals:         0       6       0       0       0
   615 ;;      Temps:          0       3       0       0       0
   616 ;;      Totals:         0       9       0       0       0
   617 ;;Total ram usage:        9 bytes
   618 ;; Hardware stack levels required when called: 3
   619 ;; This function calls:
   620 ;;		___awdiv
   621 ;;		___awmod
   622 ;;		_i2c_init
   623 ;;		_init
   624 ;;		_lcd_command
   625 ;;		_lcd_data
   626 ;;		_settime
   627 ;;		_update
   628 ;; This function is called by:
   629 ;;		Startup code after reset
   630 ;; This function uses a non-reentrant model
   631 ;;
   632                           
   633     05E7                     _main:	
   634                           ;psect for function _main
   635                           
   636     05E7                     l1331:	
   637                           ;incstack = 0
   638                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   639                           
   640                           
   641                           ;RTC_task.c: 43:     init();
   642     05E7  120A  118A  21CB  120A  118A  	fcall	_init
   643     05EC                     l1333:
   644                           
   645                           ;RTC_task.c: 44:     i2c_init(100);
   646     05EC  3000               	movlw	0
   647     05ED  1283               	bcf	3,5	;RP0=0, select bank0
   648     05EE  1303               	bcf	3,6	;RP1=0, select bank0
   649     05EF  00B0               	movwf	i2c_init@freq_k+3
   650     05F0  3000               	movlw	0
   651     05F1  00AF               	movwf	i2c_init@freq_k+2
   652     05F2  3000               	movlw	0
   653     05F3  00AE               	movwf	i2c_init@freq_k+1
   654     05F4  3064               	movlw	100
   655     05F5  00AD               	movwf	i2c_init@freq_k
   656     05F6  120A  118A  2256  120A  118A  	fcall	_i2c_init
   657     05FB                     l1335:
   658                           
   659                           ;RTC_task.c: 45:     settime();
   660     05FB  120A  118A  23CC  120A  118A  	fcall	_settime
   661     0600                     l1337:
   662                           
   663                           ;RTC_task.c: 48:         update();
   664     0600  120A  118A  2450  120A  118A  	fcall	_update
   665     0605                     l1339:
   666                           
   667                           ;RTC_task.c: 49:         sec1 = sec / 10;
   668     0605  300A               	movlw	10
   669     0606  00F0               	movwf	___awdiv@divisor
   670     0607  3000               	movlw	0
   671     0608  00F1               	movwf	___awdiv@divisor+1
   672     0609  1283               	bcf	3,5	;RP0=0, select bank0
   673     060A  1303               	bcf	3,6	;RP1=0, select bank0
   674     060B  0853               	movf	_sec+1,w
   675     060C  00F3               	movwf	___awdiv@dividend+1
   676     060D  0852               	movf	_sec,w
   677     060E  00F2               	movwf	___awdiv@dividend
   678     060F  120A  118A  22FD  120A  118A  	fcall	___awdiv
   679     0614  0870               	movf	?___awdiv,w
   680     0615  1283               	bcf	3,5	;RP0=0, select bank0
   681     0616  1303               	bcf	3,6	;RP1=0, select bank0
   682     0617  00E0               	movwf	_sec1
   683     0618                     l1341:
   684                           
   685                           ;RTC_task.c: 50:         sec2 = sec % 10;
   686     0618  300A               	movlw	10
   687     0619  00F0               	movwf	___awmod@divisor
   688     061A  3000               	movlw	0
   689     061B  00F1               	movwf	___awmod@divisor+1
   690     061C  0853               	movf	_sec+1,w
   691     061D  00F3               	movwf	___awmod@dividend+1
   692     061E  0852               	movf	_sec,w
   693     061F  00F2               	movwf	___awmod@dividend
   694     0620  120A  118A  22A4  120A  118A  	fcall	___awmod
   695     0625  0870               	movf	?___awmod,w
   696     0626  1283               	bcf	3,5	;RP0=0, select bank0
   697     0627  1303               	bcf	3,6	;RP1=0, select bank0
   698     0628  00DF               	movwf	_sec2
   699     0629                     l1343:
   700                           
   701                           ;RTC_task.c: 51:         min1 = min / 10;
   702     0629  300A               	movlw	10
   703     062A  00F0               	movwf	___awdiv@divisor
   704     062B  3000               	movlw	0
   705     062C  00F1               	movwf	___awdiv@divisor+1
   706     062D  0851               	movf	_min+1,w
   707     062E  00F3               	movwf	___awdiv@dividend+1
   708     062F  0850               	movf	_min,w
   709     0630  00F2               	movwf	___awdiv@dividend
   710     0631  120A  118A  22FD  120A  118A  	fcall	___awdiv
   711     0636  0870               	movf	?___awdiv,w
   712     0637  1283               	bcf	3,5	;RP0=0, select bank0
   713     0638  1303               	bcf	3,6	;RP1=0, select bank0
   714     0639  00DE               	movwf	_min1
   715     063A                     l1345:
   716                           
   717                           ;RTC_task.c: 52:         min2 = min % 10;
   718     063A  300A               	movlw	10
   719     063B  00F0               	movwf	___awmod@divisor
   720     063C  3000               	movlw	0
   721     063D  00F1               	movwf	___awmod@divisor+1
   722     063E  0851               	movf	_min+1,w
   723     063F  00F3               	movwf	___awmod@dividend+1
   724     0640  0850               	movf	_min,w
   725     0641  00F2               	movwf	___awmod@dividend
   726     0642  120A  118A  22A4  120A  118A  	fcall	___awmod
   727     0647  0870               	movf	?___awmod,w
   728     0648  1283               	bcf	3,5	;RP0=0, select bank0
   729     0649  1303               	bcf	3,6	;RP1=0, select bank0
   730     064A  00DD               	movwf	_min2
   731     064B                     l1347:
   732                           
   733                           ;RTC_task.c: 53:         hour1 = hour / 10;
   734     064B  300A               	movlw	10
   735     064C  00F0               	movwf	___awdiv@divisor
   736     064D  3000               	movlw	0
   737     064E  00F1               	movwf	___awdiv@divisor+1
   738     064F  084F               	movf	_hour+1,w
   739     0650  00F3               	movwf	___awdiv@dividend+1
   740     0651  084E               	movf	_hour,w
   741     0652  00F2               	movwf	___awdiv@dividend
   742     0653  120A  118A  22FD  120A  118A  	fcall	___awdiv
   743     0658  0870               	movf	?___awdiv,w
   744     0659  1283               	bcf	3,5	;RP0=0, select bank0
   745     065A  1303               	bcf	3,6	;RP1=0, select bank0
   746     065B  00DC               	movwf	_hour1
   747     065C                     l1349:
   748                           
   749                           ;RTC_task.c: 54:         hour2 = hour % 10;
   750     065C  300A               	movlw	10
   751     065D  00F0               	movwf	___awmod@divisor
   752     065E  3000               	movlw	0
   753     065F  00F1               	movwf	___awmod@divisor+1
   754     0660  084F               	movf	_hour+1,w
   755     0661  00F3               	movwf	___awmod@dividend+1
   756     0662  084E               	movf	_hour,w
   757     0663  00F2               	movwf	___awmod@dividend
   758     0664  120A  118A  22A4  120A  118A  	fcall	___awmod
   759     0669  0870               	movf	?___awmod,w
   760     066A  1283               	bcf	3,5	;RP0=0, select bank0
   761     066B  1303               	bcf	3,6	;RP1=0, select bank0
   762     066C  00DB               	movwf	_hour2
   763     066D                     l1351:
   764                           
   765                           ;RTC_task.c: 55:         date1 = date / 10;
   766     066D  300A               	movlw	10
   767     066E  00F0               	movwf	___awdiv@divisor
   768     066F  3000               	movlw	0
   769     0670  00F1               	movwf	___awdiv@divisor+1
   770     0671  084D               	movf	_date+1,w
   771     0672  00F3               	movwf	___awdiv@dividend+1
   772     0673  084C               	movf	_date,w
   773     0674  00F2               	movwf	___awdiv@dividend
   774     0675  120A  118A  22FD  120A  118A  	fcall	___awdiv
   775     067A  0870               	movf	?___awdiv,w
   776     067B  1283               	bcf	3,5	;RP0=0, select bank0
   777     067C  1303               	bcf	3,6	;RP1=0, select bank0
   778     067D  00DA               	movwf	_date1
   779     067E                     l1353:
   780                           
   781                           ;RTC_task.c: 56:         date2 = date % 10;
   782     067E  300A               	movlw	10
   783     067F  00F0               	movwf	___awmod@divisor
   784     0680  3000               	movlw	0
   785     0681  00F1               	movwf	___awmod@divisor+1
   786     0682  084D               	movf	_date+1,w
   787     0683  00F3               	movwf	___awmod@dividend+1
   788     0684  084C               	movf	_date,w
   789     0685  00F2               	movwf	___awmod@dividend
   790     0686  120A  118A  22A4  120A  118A  	fcall	___awmod
   791     068B  0870               	movf	?___awmod,w
   792     068C  1283               	bcf	3,5	;RP0=0, select bank0
   793     068D  1303               	bcf	3,6	;RP1=0, select bank0
   794     068E  00D9               	movwf	_date2
   795     068F                     l1355:
   796                           
   797                           ;RTC_task.c: 57:         month1 = month / 10;
   798     068F  300A               	movlw	10
   799     0690  00F0               	movwf	___awdiv@divisor
   800     0691  3000               	movlw	0
   801     0692  00F1               	movwf	___awdiv@divisor+1
   802     0693  084B               	movf	_month+1,w
   803     0694  00F3               	movwf	___awdiv@dividend+1
   804     0695  084A               	movf	_month,w
   805     0696  00F2               	movwf	___awdiv@dividend
   806     0697  120A  118A  22FD  120A  118A  	fcall	___awdiv
   807     069C  0870               	movf	?___awdiv,w
   808     069D  1283               	bcf	3,5	;RP0=0, select bank0
   809     069E  1303               	bcf	3,6	;RP1=0, select bank0
   810     069F  00D8               	movwf	_month1
   811     06A0                     l1357:
   812                           
   813                           ;RTC_task.c: 58:         month2 = month % 10;
   814     06A0  300A               	movlw	10
   815     06A1  00F0               	movwf	___awmod@divisor
   816     06A2  3000               	movlw	0
   817     06A3  00F1               	movwf	___awmod@divisor+1
   818     06A4  084B               	movf	_month+1,w
   819     06A5  00F3               	movwf	___awmod@dividend+1
   820     06A6  084A               	movf	_month,w
   821     06A7  00F2               	movwf	___awmod@dividend
   822     06A8  120A  118A  22A4  120A  118A  	fcall	___awmod
   823     06AD  0870               	movf	?___awmod,w
   824     06AE  1283               	bcf	3,5	;RP0=0, select bank0
   825     06AF  1303               	bcf	3,6	;RP1=0, select bank0
   826     06B0  00D7               	movwf	_month2
   827     06B1                     l1359:
   828                           
   829                           ;RTC_task.c: 59:         year1 = year / 10;
   830     06B1  300A               	movlw	10
   831     06B2  00F0               	movwf	___awdiv@divisor
   832     06B3  3000               	movlw	0
   833     06B4  00F1               	movwf	___awdiv@divisor+1
   834     06B5  0849               	movf	_year+1,w
   835     06B6  00F3               	movwf	___awdiv@dividend+1
   836     06B7  0848               	movf	_year,w
   837     06B8  00F2               	movwf	___awdiv@dividend
   838     06B9  120A  118A  22FD  120A  118A  	fcall	___awdiv
   839     06BE  0870               	movf	?___awdiv,w
   840     06BF  1283               	bcf	3,5	;RP0=0, select bank0
   841     06C0  1303               	bcf	3,6	;RP1=0, select bank0
   842     06C1  00D6               	movwf	_year1
   843     06C2                     l1361:
   844                           
   845                           ;RTC_task.c: 60:         year2 = year % 10;
   846     06C2  300A               	movlw	10
   847     06C3  00F0               	movwf	___awmod@divisor
   848     06C4  3000               	movlw	0
   849     06C5  00F1               	movwf	___awmod@divisor+1
   850     06C6  0849               	movf	_year+1,w
   851     06C7  00F3               	movwf	___awmod@dividend+1
   852     06C8  0848               	movf	_year,w
   853     06C9  00F2               	movwf	___awmod@dividend
   854     06CA  120A  118A  22A4  120A  118A  	fcall	___awmod
   855     06CF  0870               	movf	?___awmod,w
   856     06D0  1283               	bcf	3,5	;RP0=0, select bank0
   857     06D1  1303               	bcf	3,6	;RP1=0, select bank0
   858     06D2  00D5               	movwf	_year2
   859     06D3                     l1363:
   860                           
   861                           ;RTC_task.c: 63:         lcd_command(0x80);
   862     06D3  3080               	movlw	128
   863     06D4  120A  118A  20EC  120A  118A  	fcall	_lcd_command
   864     06D9                     l1365:
   865                           
   866                           ;RTC_task.c: 64:         for (int i = 0; i < 5; i++) lcd_data(msg1[i]);
   867     06D9  1283               	bcf	3,5	;RP0=0, select bank0
   868     06DA  1303               	bcf	3,6	;RP1=0, select bank0
   869     06DB  01BA               	clrf	main@i
   870     06DC  01BB               	clrf	main@i+1
   871     06DD                     l1371:
   872     06DD  1283               	bcf	3,5	;RP0=0, select bank0
   873     06DE  1303               	bcf	3,6	;RP1=0, select bank0
   874     06DF  083A               	movf	main@i,w
   875     06E0  3E43               	addlw	(low (_msg1| 0))& (0+255)
   876     06E1  0084               	movwf	4
   877     06E2  1383               	bcf	3,7	;select IRP bank0
   878     06E3  0800               	movf	0,w
   879     06E4  120A  118A  2108  120A  118A  	fcall	_lcd_data
   880     06E9                     l1373:
   881     06E9  3001               	movlw	1
   882     06EA  1283               	bcf	3,5	;RP0=0, select bank0
   883     06EB  1303               	bcf	3,6	;RP1=0, select bank0
   884     06EC  07BA               	addwf	main@i,f
   885     06ED  1803               	skipnc
   886     06EE  0ABB               	incf	main@i+1,f
   887     06EF  3000               	movlw	0
   888     06F0  07BB               	addwf	main@i+1,f
   889     06F1                     l1375:
   890     06F1  083B               	movf	main@i+1,w
   891     06F2  3A80               	xorlw	128
   892     06F3  00FF               	movwf	btemp+1
   893     06F4  3080               	movlw	128
   894     06F5  027F               	subwf	btemp+1,w
   895     06F6  1D03               	skipz
   896     06F7  2EFA               	goto	u1205
   897     06F8  3005               	movlw	5
   898     06F9  023A               	subwf	main@i,w
   899     06FA                     u1205:
   900     06FA  1C03               	skipc
   901     06FB  2EFD               	goto	u1201
   902     06FC  2EFE               	goto	u1200
   903     06FD                     u1201:
   904     06FD  2EDD               	goto	l1371
   905     06FE                     u1200:
   906     06FE                     l1377:
   907                           
   908                           ;RTC_task.c: 65:         lcd_data(hour1 + '0');
   909     06FE  1283               	bcf	3,5	;RP0=0, select bank0
   910     06FF  1303               	bcf	3,6	;RP1=0, select bank0
   911     0700  085C               	movf	_hour1,w
   912     0701  3E30               	addlw	48
   913     0702  120A  118A  2108  120A  118A  	fcall	_lcd_data
   914                           
   915                           ;RTC_task.c: 66:         lcd_data(hour2 + '0');
   916     0707  1283               	bcf	3,5	;RP0=0, select bank0
   917     0708  1303               	bcf	3,6	;RP1=0, select bank0
   918     0709  085B               	movf	_hour2,w
   919     070A  3E30               	addlw	48
   920     070B  120A  118A  2108  120A  118A  	fcall	_lcd_data
   921                           
   922                           ;RTC_task.c: 67:         lcd_data(':');
   923     0710  303A               	movlw	58
   924     0711  120A  118A  2108  120A  118A  	fcall	_lcd_data
   925                           
   926                           ;RTC_task.c: 68:         lcd_data(min1 + '0');
   927     0716  1283               	bcf	3,5	;RP0=0, select bank0
   928     0717  1303               	bcf	3,6	;RP1=0, select bank0
   929     0718  085E               	movf	_min1,w
   930     0719  3E30               	addlw	48
   931     071A  120A  118A  2108  120A  118A  	fcall	_lcd_data
   932                           
   933                           ;RTC_task.c: 69:         lcd_data(min2 + '0');
   934     071F  1283               	bcf	3,5	;RP0=0, select bank0
   935     0720  1303               	bcf	3,6	;RP1=0, select bank0
   936     0721  085D               	movf	_min2,w
   937     0722  3E30               	addlw	48
   938     0723  120A  118A  2108  120A  118A  	fcall	_lcd_data
   939                           
   940                           ;RTC_task.c: 70:         lcd_data(':');
   941     0728  303A               	movlw	58
   942     0729  120A  118A  2108  120A  118A  	fcall	_lcd_data
   943                           
   944                           ;RTC_task.c: 71:         lcd_data(sec1 + '0');
   945     072E  1283               	bcf	3,5	;RP0=0, select bank0
   946     072F  1303               	bcf	3,6	;RP1=0, select bank0
   947     0730  0860               	movf	_sec1,w
   948     0731  3E30               	addlw	48
   949     0732  120A  118A  2108  120A  118A  	fcall	_lcd_data
   950                           
   951                           ;RTC_task.c: 72:         lcd_data(sec2 + '0');
   952     0737  1283               	bcf	3,5	;RP0=0, select bank0
   953     0738  1303               	bcf	3,6	;RP1=0, select bank0
   954     0739  085F               	movf	_sec2,w
   955     073A  3E30               	addlw	48
   956     073B  120A  118A  2108  120A  118A  	fcall	_lcd_data
   957                           
   958                           ;RTC_task.c: 73:         lcd_data(' ');
   959     0740  3020               	movlw	32
   960     0741  120A  118A  2108  120A  118A  	fcall	_lcd_data
   961     0746                     l1379:
   962                           
   963                           ;RTC_task.c: 74:         lcd_data(am_pm ? 'P' : 'A');
   964     0746  1283               	bcf	3,5	;RP0=0, select bank0
   965     0747  1303               	bcf	3,6	;RP1=0, select bank0
   966     0748  0854               	movf	_am_pm,w
   967     0749  1D03               	btfss	3,2
   968     074A  2F4C               	goto	u1211
   969     074B  2F4D               	goto	u1210
   970     074C                     u1211:
   971     074C  2F52               	goto	l1383
   972     074D                     u1210:
   973     074D                     l1381:
   974     074D  3041               	movlw	65
   975     074E  00B8               	movwf	_main$97
   976     074F  3000               	movlw	0
   977     0750  00B9               	movwf	_main$97+1
   978     0751  2F56               	goto	l1385
   979     0752                     l1383:
   980     0752  3050               	movlw	80
   981     0753  00B8               	movwf	_main$97
   982     0754  3000               	movlw	0
   983     0755  00B9               	movwf	_main$97+1
   984     0756                     l1385:
   985     0756  0838               	movf	_main$97,w
   986     0757  120A  118A  2108  120A  118A  	fcall	_lcd_data
   987     075C                     l1387:
   988                           
   989                           ;RTC_task.c: 75:         lcd_data('M');
   990     075C  304D               	movlw	77
   991     075D  120A  118A  2108  120A  118A  	fcall	_lcd_data
   992     0762                     l1389:
   993                           
   994                           ;RTC_task.c: 78:         lcd_command(0xC0);
   995     0762  30C0               	movlw	192
   996     0763  120A  118A  20EC  120A  118A  	fcall	_lcd_command
   997     0768                     l1391:
   998                           
   999                           ;RTC_task.c: 79:         for (int i = 0; i < 5; i++) lcd_data(msg2[i]);
  1000     0768  1283               	bcf	3,5	;RP0=0, select bank0
  1001     0769  1303               	bcf	3,6	;RP1=0, select bank0
  1002     076A  01BC               	clrf	main@i_98
  1003     076B  01BD               	clrf	main@i_98+1
  1004     076C                     l1397:
  1005     076C  1283               	bcf	3,5	;RP0=0, select bank0
  1006     076D  1303               	bcf	3,6	;RP1=0, select bank0
  1007     076E  083C               	movf	main@i_98,w
  1008     076F  3E3E               	addlw	(low (_msg2| 0))& (0+255)
  1009     0770  0084               	movwf	4
  1010     0771  1383               	bcf	3,7	;select IRP bank0
  1011     0772  0800               	movf	0,w
  1012     0773  120A  118A  2108  120A  118A  	fcall	_lcd_data
  1013     0778                     l1399:
  1014     0778  3001               	movlw	1
  1015     0779  1283               	bcf	3,5	;RP0=0, select bank0
  1016     077A  1303               	bcf	3,6	;RP1=0, select bank0
  1017     077B  07BC               	addwf	main@i_98,f
  1018     077C  1803               	skipnc
  1019     077D  0ABD               	incf	main@i_98+1,f
  1020     077E  3000               	movlw	0
  1021     077F  07BD               	addwf	main@i_98+1,f
  1022     0780                     l1401:
  1023     0780  083D               	movf	main@i_98+1,w
  1024     0781  3A80               	xorlw	128
  1025     0782  00FF               	movwf	btemp+1
  1026     0783  3080               	movlw	128
  1027     0784  027F               	subwf	btemp+1,w
  1028     0785  1D03               	skipz
  1029     0786  2F89               	goto	u1225
  1030     0787  3005               	movlw	5
  1031     0788  023C               	subwf	main@i_98,w
  1032     0789                     u1225:
  1033     0789  1C03               	skipc
  1034     078A  2F8C               	goto	u1221
  1035     078B  2F8D               	goto	u1220
  1036     078C                     u1221:
  1037     078C  2F6C               	goto	l1397
  1038     078D                     u1220:
  1039     078D                     l1403:
  1040                           
  1041                           ;RTC_task.c: 80:         lcd_data(date1 + '0');
  1042     078D  1283               	bcf	3,5	;RP0=0, select bank0
  1043     078E  1303               	bcf	3,6	;RP1=0, select bank0
  1044     078F  085A               	movf	_date1,w
  1045     0790  3E30               	addlw	48
  1046     0791  120A  118A  2108  120A  118A  	fcall	_lcd_data
  1047                           
  1048                           ;RTC_task.c: 81:         lcd_data(date2 + '0');
  1049     0796  1283               	bcf	3,5	;RP0=0, select bank0
  1050     0797  1303               	bcf	3,6	;RP1=0, select bank0
  1051     0798  0859               	movf	_date2,w
  1052     0799  3E30               	addlw	48
  1053     079A  120A  118A  2108  120A  118A  	fcall	_lcd_data
  1054                           
  1055                           ;RTC_task.c: 82:         lcd_data('/');
  1056     079F  302F               	movlw	47
  1057     07A0  120A  118A  2108  120A  118A  	fcall	_lcd_data
  1058                           
  1059                           ;RTC_task.c: 83:         lcd_data(month1 + '0');
  1060     07A5  1283               	bcf	3,5	;RP0=0, select bank0
  1061     07A6  1303               	bcf	3,6	;RP1=0, select bank0
  1062     07A7  0858               	movf	_month1,w
  1063     07A8  3E30               	addlw	48
  1064     07A9  120A  118A  2108  120A  118A  	fcall	_lcd_data
  1065                           
  1066                           ;RTC_task.c: 84:         lcd_data(month2 + '0');
  1067     07AE  1283               	bcf	3,5	;RP0=0, select bank0
  1068     07AF  1303               	bcf	3,6	;RP1=0, select bank0
  1069     07B0  0857               	movf	_month2,w
  1070     07B1  3E30               	addlw	48
  1071     07B2  120A  118A  2108  120A  118A  	fcall	_lcd_data
  1072                           
  1073                           ;RTC_task.c: 85:         lcd_data('/');
  1074     07B7  302F               	movlw	47
  1075     07B8  120A  118A  2108  120A  118A  	fcall	_lcd_data
  1076                           
  1077                           ;RTC_task.c: 86:         lcd_data(year1 + '0');
  1078     07BD  1283               	bcf	3,5	;RP0=0, select bank0
  1079     07BE  1303               	bcf	3,6	;RP1=0, select bank0
  1080     07BF  0856               	movf	_year1,w
  1081     07C0  3E30               	addlw	48
  1082     07C1  120A  118A  2108  120A  118A  	fcall	_lcd_data
  1083                           
  1084                           ;RTC_task.c: 87:         lcd_data(year2 + '0');
  1085     07C6  1283               	bcf	3,5	;RP0=0, select bank0
  1086     07C7  1303               	bcf	3,6	;RP1=0, select bank0
  1087     07C8  0855               	movf	_year2,w
  1088     07C9  3E30               	addlw	48
  1089     07CA  120A  118A  2108  120A  118A  	fcall	_lcd_data
  1090     07CF                     l1405:
  1091                           
  1092                           ;RTC_task.c: 89:         _delay((unsigned long)((500)*(20000000/4000.0)));
  1093     07CF  300D               	movlw	13
  1094     07D0  1283               	bcf	3,5	;RP0=0, select bank0
  1095     07D1  1303               	bcf	3,6	;RP1=0, select bank0
  1096     07D2  00B7               	movwf	??_main+2
  1097     07D3  30AF               	movlw	175
  1098     07D4  00B6               	movwf	??_main+1
  1099     07D5  30B5               	movlw	181
  1100     07D6  00B5               	movwf	??_main
  1101     07D7                     u1237:
  1102     07D7  0BB5               	decfsz	??_main,f
  1103     07D8  2FD7               	goto	u1237
  1104     07D9  0BB6               	decfsz	??_main+1,f
  1105     07DA  2FD7               	goto	u1237
  1106     07DB  0BB7               	decfsz	??_main+2,f
  1107     07DC  2FD7               	goto	u1237
  1108     07DD  2FDE               	nop2
  1109     07DE  2E00               	goto	l1337
  1110     07DF  120A  118A  2800   	ljmp	start
  1111     07E2                     __end_of_main:
  1112                           
  1113                           	psect	text1
  1114     0450                     __ptext1:	
  1115 ;; *************** function _update *****************
  1116 ;; Defined at:
  1117 ;;		line 184 in file "RTC_task.c"
  1118 ;; Parameters:    Size  Location     Type
  1119 ;;		None
  1120 ;; Auto vars:     Size  Location     Type
  1121 ;;		None
  1122 ;; Return value:  Size  Location     Type
  1123 ;;                  1    wreg      void 
  1124 ;; Registers used:
  1125 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1126 ;; Tracked objects:
  1127 ;;		On entry : 0/0
  1128 ;;		On exit  : 0/0
  1129 ;;		Unchanged: 0/0
  1130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1131 ;;      Params:         0       0       0       0       0
  1132 ;;      Locals:         0       0       0       0       0
  1133 ;;      Temps:          2       0       0       0       0
  1134 ;;      Totals:         2       0       0       0       0
  1135 ;;Total ram usage:        2 bytes
  1136 ;; Hardware stack levels used: 1
  1137 ;; Hardware stack levels required when called: 2
  1138 ;; This function calls:
  1139 ;;		_bcd_2_dec
  1140 ;;		_i2c_read
  1141 ;;		_i2c_start
  1142 ;;		_i2c_stop
  1143 ;;		_i2c_write
  1144 ;; This function is called by:
  1145 ;;		_main
  1146 ;; This function uses a non-reentrant model
  1147 ;;
  1148                           
  1149     0450                     _update:	
  1150                           ;psect for function _update
  1151                           
  1152     0450                     l1277:	
  1153                           ;incstack = 0
  1154                           ; Regs used in _update: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1155                           
  1156                           
  1157                           ;RTC_task.c: 185:     i2c_start();
  1158     0450  120A  118A  2098  120A  118A  	fcall	_i2c_start
  1159                           
  1160                           ;RTC_task.c: 186:     i2c_write(0xD0);
  1161     0455  30D0               	movlw	208
  1162     0456  120A  118A  20AA  120A  118A  	fcall	_i2c_write
  1163                           
  1164                           ;RTC_task.c: 187:     i2c_write(0x00);
  1165     045B  3000               	movlw	0
  1166     045C  120A  118A  20AA  120A  118A  	fcall	_i2c_write
  1167                           
  1168                           ;RTC_task.c: 188:     i2c_stop();
  1169     0461  120A  118A  20A1  120A  118A  	fcall	_i2c_stop
  1170                           
  1171                           ;RTC_task.c: 190:     i2c_start();
  1172     0466  120A  118A  2098  120A  118A  	fcall	_i2c_start
  1173                           
  1174                           ;RTC_task.c: 191:     i2c_write(0xD1);
  1175     046B  30D1               	movlw	209
  1176     046C  120A  118A  20AA  120A  118A  	fcall	_i2c_write
  1177                           
  1178                           ;RTC_task.c: 192:     sec = bcd_2_dec(i2c_read(1));
  1179     0471  3001               	movlw	1
  1180     0472  00F0               	movwf	i2c_read@ack
  1181     0473  3000               	movlw	0
  1182     0474  00F1               	movwf	i2c_read@ack+1
  1183     0475  120A  118A  216E  120A  118A  	fcall	_i2c_read
  1184     047A  0871               	movf	?_i2c_read+1,w
  1185     047B  00F7               	movwf	bcd_2_dec@val+1
  1186     047C  0870               	movf	?_i2c_read,w
  1187     047D  00F6               	movwf	bcd_2_dec@val
  1188     047E  120A  118A  2149  120A  118A  	fcall	_bcd_2_dec
  1189     0483  0877               	movf	?_bcd_2_dec+1,w
  1190     0484  1283               	bcf	3,5	;RP0=0, select bank0
  1191     0485  1303               	bcf	3,6	;RP1=0, select bank0
  1192     0486  00D3               	movwf	_sec+1
  1193     0487  0876               	movf	?_bcd_2_dec,w
  1194     0488  00D2               	movwf	_sec
  1195                           
  1196                           ;RTC_task.c: 193:     min = bcd_2_dec(i2c_read(1));
  1197     0489  3001               	movlw	1
  1198     048A  00F0               	movwf	i2c_read@ack
  1199     048B  3000               	movlw	0
  1200     048C  00F1               	movwf	i2c_read@ack+1
  1201     048D  120A  118A  216E  120A  118A  	fcall	_i2c_read
  1202     0492  0871               	movf	?_i2c_read+1,w
  1203     0493  00F7               	movwf	bcd_2_dec@val+1
  1204     0494  0870               	movf	?_i2c_read,w
  1205     0495  00F6               	movwf	bcd_2_dec@val
  1206     0496  120A  118A  2149  120A  118A  	fcall	_bcd_2_dec
  1207     049B  0877               	movf	?_bcd_2_dec+1,w
  1208     049C  1283               	bcf	3,5	;RP0=0, select bank0
  1209     049D  1303               	bcf	3,6	;RP1=0, select bank0
  1210     049E  00D1               	movwf	_min+1
  1211     049F  0876               	movf	?_bcd_2_dec,w
  1212     04A0  00D0               	movwf	_min
  1213                           
  1214                           ;RTC_task.c: 194:     hour = bcd_2_dec(i2c_read(1) & 0x1F);
  1215     04A1  3001               	movlw	1
  1216     04A2  00F0               	movwf	i2c_read@ack
  1217     04A3  3000               	movlw	0
  1218     04A4  00F1               	movwf	i2c_read@ack+1
  1219     04A5  120A  118A  216E  120A  118A  	fcall	_i2c_read
  1220     04AA  301F               	movlw	31
  1221     04AB  0570               	andwf	?_i2c_read,w
  1222     04AC  00F6               	movwf	bcd_2_dec@val
  1223     04AD  3000               	movlw	0
  1224     04AE  0571               	andwf	?_i2c_read+1,w
  1225     04AF  00F7               	movwf	bcd_2_dec@val+1
  1226     04B0  120A  118A  2149  120A  118A  	fcall	_bcd_2_dec
  1227     04B5  0877               	movf	?_bcd_2_dec+1,w
  1228     04B6  1283               	bcf	3,5	;RP0=0, select bank0
  1229     04B7  1303               	bcf	3,6	;RP1=0, select bank0
  1230     04B8  00CF               	movwf	_hour+1
  1231     04B9  0876               	movf	?_bcd_2_dec,w
  1232     04BA  00CE               	movwf	_hour
  1233                           
  1234                           ;RTC_task.c: 195:     am_pm = (i2c_read(1) & 0x20) ? 1 : 0;
  1235     04BB  3001               	movlw	1
  1236     04BC  00F0               	movwf	i2c_read@ack
  1237     04BD  3000               	movlw	0
  1238     04BE  00F1               	movwf	i2c_read@ack+1
  1239     04BF  120A  118A  216E  120A  118A  	fcall	_i2c_read
  1240     04C4  1AF0               	btfsc	?_i2c_read,5
  1241     04C5  2CC7               	goto	u1021
  1242     04C6  2CC9               	goto	u1020
  1243     04C7                     u1021:
  1244     04C7  3001               	movlw	1
  1245     04C8  2CCA               	goto	u1030
  1246     04C9                     u1020:
  1247     04C9  3000               	movlw	0
  1248     04CA                     u1030:
  1249     04CA  1283               	bcf	3,5	;RP0=0, select bank0
  1250     04CB  1303               	bcf	3,6	;RP1=0, select bank0
  1251     04CC  00D4               	movwf	_am_pm
  1252                           
  1253                           ;RTC_task.c: 196:     date = bcd_2_dec(i2c_read(1));
  1254     04CD  3001               	movlw	1
  1255     04CE  00F0               	movwf	i2c_read@ack
  1256     04CF  3000               	movlw	0
  1257     04D0  00F1               	movwf	i2c_read@ack+1
  1258     04D1  120A  118A  216E  120A  118A  	fcall	_i2c_read
  1259     04D6  0871               	movf	?_i2c_read+1,w
  1260     04D7  00F7               	movwf	bcd_2_dec@val+1
  1261     04D8  0870               	movf	?_i2c_read,w
  1262     04D9  00F6               	movwf	bcd_2_dec@val
  1263     04DA  120A  118A  2149  120A  118A  	fcall	_bcd_2_dec
  1264     04DF  0877               	movf	?_bcd_2_dec+1,w
  1265     04E0  1283               	bcf	3,5	;RP0=0, select bank0
  1266     04E1  1303               	bcf	3,6	;RP1=0, select bank0
  1267     04E2  00CD               	movwf	_date+1
  1268     04E3  0876               	movf	?_bcd_2_dec,w
  1269     04E4  00CC               	movwf	_date
  1270                           
  1271                           ;RTC_task.c: 197:     month = bcd_2_dec(i2c_read(1));
  1272     04E5  3001               	movlw	1
  1273     04E6  00F0               	movwf	i2c_read@ack
  1274     04E7  3000               	movlw	0
  1275     04E8  00F1               	movwf	i2c_read@ack+1
  1276     04E9  120A  118A  216E  120A  118A  	fcall	_i2c_read
  1277     04EE  0871               	movf	?_i2c_read+1,w
  1278     04EF  00F7               	movwf	bcd_2_dec@val+1
  1279     04F0  0870               	movf	?_i2c_read,w
  1280     04F1  00F6               	movwf	bcd_2_dec@val
  1281     04F2  120A  118A  2149  120A  118A  	fcall	_bcd_2_dec
  1282     04F7  0877               	movf	?_bcd_2_dec+1,w
  1283     04F8  1283               	bcf	3,5	;RP0=0, select bank0
  1284     04F9  1303               	bcf	3,6	;RP1=0, select bank0
  1285     04FA  00CB               	movwf	_month+1
  1286     04FB  0876               	movf	?_bcd_2_dec,w
  1287     04FC  00CA               	movwf	_month
  1288                           
  1289                           ;RTC_task.c: 198:     year = bcd_2_dec(i2c_read(0));
  1290     04FD  3000               	movlw	0
  1291     04FE  00F0               	movwf	i2c_read@ack
  1292     04FF  00F1               	movwf	i2c_read@ack+1
  1293     0500  120A  118A  216E  120A  118A  	fcall	_i2c_read
  1294     0505  0871               	movf	?_i2c_read+1,w
  1295     0506  00F7               	movwf	bcd_2_dec@val+1
  1296     0507  0870               	movf	?_i2c_read,w
  1297     0508  00F6               	movwf	bcd_2_dec@val
  1298     0509  120A  118A  2149  120A  118A  	fcall	_bcd_2_dec
  1299     050E  0877               	movf	?_bcd_2_dec+1,w
  1300     050F  1283               	bcf	3,5	;RP0=0, select bank0
  1301     0510  1303               	bcf	3,6	;RP1=0, select bank0
  1302     0511  00C9               	movwf	_year+1
  1303     0512  0876               	movf	?_bcd_2_dec,w
  1304     0513  00C8               	movwf	_year
  1305                           
  1306                           ;RTC_task.c: 199:     i2c_stop();
  1307     0514  120A  118A  20A1  120A  118A  	fcall	_i2c_stop
  1308     0519                     l1279:
  1309                           
  1310                           ;RTC_task.c: 202:     if (hour == 12 && min == 0 && sec == 0) {
  1311     0519  300C               	movlw	12
  1312     051A  1283               	bcf	3,5	;RP0=0, select bank0
  1313     051B  1303               	bcf	3,6	;RP1=0, select bank0
  1314     051C  064E               	xorwf	_hour,w
  1315     051D  044F               	iorwf	_hour+1,w
  1316     051E  1D03               	btfss	3,2
  1317     051F  2D21               	goto	u1041
  1318     0520  2D22               	goto	u1040
  1319     0521                     u1041:
  1320     0521  2DE6               	goto	l159
  1321     0522                     u1040:
  1322     0522                     l1281:
  1323     0522  0850               	movf	_min,w
  1324     0523  0451               	iorwf	_min+1,w
  1325     0524  1D03               	btfss	3,2
  1326     0525  2D27               	goto	u1051
  1327     0526  2D28               	goto	u1050
  1328     0527                     u1051:
  1329     0527  2DE6               	goto	l159
  1330     0528                     u1050:
  1331     0528                     l1283:
  1332     0528  0852               	movf	_sec,w
  1333     0529  0453               	iorwf	_sec+1,w
  1334     052A  1D03               	btfss	3,2
  1335     052B  2D2D               	goto	u1061
  1336     052C  2D2E               	goto	u1060
  1337     052D                     u1061:
  1338     052D  2DE6               	goto	l159
  1339     052E                     u1060:
  1340     052E                     l1285:
  1341                           
  1342                           ;RTC_task.c: 203:         if (am_pm) {
  1343     052E  0854               	movf	_am_pm,w
  1344     052F  1903               	btfsc	3,2
  1345     0530  2D32               	goto	u1071
  1346     0531  2D33               	goto	u1070
  1347     0532                     u1071:
  1348     0532  2DE4               	goto	l145
  1349     0533                     u1070:
  1350     0533                     l1287:
  1351                           
  1352                           ;RTC_task.c: 204:             am_pm = 0;
  1353     0533  01D4               	clrf	_am_pm
  1354     0534                     l1289:
  1355                           
  1356                           ;RTC_task.c: 205:             date++;
  1357     0534  3001               	movlw	1
  1358     0535  07CC               	addwf	_date,f
  1359     0536  1803               	skipnc
  1360     0537  0ACD               	incf	_date+1,f
  1361     0538  3000               	movlw	0
  1362     0539  07CD               	addwf	_date+1,f
  1363     053A                     l1291:
  1364                           
  1365                           ;RTC_task.c: 206:             if ((month == 4 || month == 6 || month == 9 || month == 11
      +                          ) && date > 30) {
  1366     053A  3004               	movlw	4
  1367     053B  064A               	xorwf	_month,w
  1368     053C  044B               	iorwf	_month+1,w
  1369     053D  1903               	btfsc	3,2
  1370     053E  2D40               	goto	u1081
  1371     053F  2D41               	goto	u1080
  1372     0540                     u1081:
  1373     0540  2D56               	goto	l1299
  1374     0541                     u1080:
  1375     0541                     l1293:
  1376     0541  3006               	movlw	6
  1377     0542  064A               	xorwf	_month,w
  1378     0543  044B               	iorwf	_month+1,w
  1379     0544  1903               	btfsc	3,2
  1380     0545  2D47               	goto	u1091
  1381     0546  2D48               	goto	u1090
  1382     0547                     u1091:
  1383     0547  2D56               	goto	l1299
  1384     0548                     u1090:
  1385     0548                     l1295:
  1386     0548  3009               	movlw	9
  1387     0549  064A               	xorwf	_month,w
  1388     054A  044B               	iorwf	_month+1,w
  1389     054B  1903               	btfsc	3,2
  1390     054C  2D4E               	goto	u1101
  1391     054D  2D4F               	goto	u1100
  1392     054E                     u1101:
  1393     054E  2D56               	goto	l1299
  1394     054F                     u1100:
  1395     054F                     l1297:
  1396     054F  300B               	movlw	11
  1397     0550  064A               	xorwf	_month,w
  1398     0551  044B               	iorwf	_month+1,w
  1399     0552  1D03               	btfss	3,2
  1400     0553  2D55               	goto	u1111
  1401     0554  2D56               	goto	u1110
  1402     0555                     u1111:
  1403     0555  2D70               	goto	l1303
  1404     0556                     u1110:
  1405     0556                     l1299:
  1406     0556  084D               	movf	_date+1,w
  1407     0557  3A80               	xorlw	128
  1408     0558  00FF               	movwf	btemp+1
  1409     0559  3080               	movlw	128
  1410     055A  027F               	subwf	btemp+1,w
  1411     055B  1D03               	skipz
  1412     055C  2D5F               	goto	u1125
  1413     055D  301F               	movlw	31
  1414     055E  024C               	subwf	_date,w
  1415     055F                     u1125:
  1416     055F  1C03               	skipc
  1417     0560  2D62               	goto	u1121
  1418     0561  2D63               	goto	u1120
  1419     0562                     u1121:
  1420     0562  2D70               	goto	l1303
  1421     0563                     u1120:
  1422     0563                     l1301:
  1423                           
  1424                           ;RTC_task.c: 207:                 date = 1;
  1425     0563  3001               	movlw	1
  1426     0564  1283               	bcf	3,5	;RP0=0, select bank0
  1427     0565  1303               	bcf	3,6	;RP1=0, select bank0
  1428     0566  00CC               	movwf	_date
  1429     0567  3000               	movlw	0
  1430     0568  00CD               	movwf	_date+1
  1431                           
  1432                           ;RTC_task.c: 208:                 month++;
  1433     0569  3001               	movlw	1
  1434     056A  07CA               	addwf	_month,f
  1435     056B  1803               	skipnc
  1436     056C  0ACB               	incf	_month+1,f
  1437     056D  3000               	movlw	0
  1438     056E  07CB               	addwf	_month+1,f
  1439                           
  1440                           ;RTC_task.c: 209:             } else if (month == 2 && ((year % 4 == 0 && date > 29) || 
      +                          (year % 4 != 0 && date > 28))) {
  1441     056F  2DE6               	goto	l159
  1442     0570                     l1303:
  1443     0570  3002               	movlw	2
  1444     0571  1283               	bcf	3,5	;RP0=0, select bank0
  1445     0572  1303               	bcf	3,6	;RP1=0, select bank0
  1446     0573  064A               	xorwf	_month,w
  1447     0574  044B               	iorwf	_month+1,w
  1448     0575  1D03               	btfss	3,2
  1449     0576  2D78               	goto	u1131
  1450     0577  2D79               	goto	u1130
  1451     0578                     u1131:
  1452     0578  2DAE               	goto	l1315
  1453     0579                     u1130:
  1454     0579                     l1305:
  1455     0579  3003               	movlw	3
  1456     057A  0548               	andwf	_year,w
  1457     057B  00FA               	movwf	??_update
  1458     057C  3000               	movlw	0
  1459     057D  0549               	andwf	_year+1,w
  1460     057E  00FB               	movwf	??_update+1
  1461     057F  087A               	movf	??_update,w
  1462     0580  047B               	iorwf	??_update+1,w
  1463     0581  1D03               	btfss	3,2
  1464     0582  2D84               	goto	u1141
  1465     0583  2D85               	goto	u1140
  1466     0584                     u1141:
  1467     0584  2D92               	goto	l1309
  1468     0585                     u1140:
  1469     0585                     l1307:
  1470     0585  084D               	movf	_date+1,w
  1471     0586  3A80               	xorlw	128
  1472     0587  00FF               	movwf	btemp+1
  1473     0588  3080               	movlw	128
  1474     0589  027F               	subwf	btemp+1,w
  1475     058A  1D03               	skipz
  1476     058B  2D8E               	goto	u1155
  1477     058C  301E               	movlw	30
  1478     058D  024C               	subwf	_date,w
  1479     058E                     u1155:
  1480     058E  1803               	skipnc
  1481     058F  2D91               	goto	u1151
  1482     0590  2D92               	goto	u1150
  1483     0591                     u1151:
  1484     0591  2D63               	goto	l1301
  1485     0592                     u1150:
  1486     0592                     l1309:
  1487     0592  3003               	movlw	3
  1488     0593  1283               	bcf	3,5	;RP0=0, select bank0
  1489     0594  1303               	bcf	3,6	;RP1=0, select bank0
  1490     0595  0548               	andwf	_year,w
  1491     0596  00FA               	movwf	??_update
  1492     0597  3000               	movlw	0
  1493     0598  0549               	andwf	_year+1,w
  1494     0599  00FB               	movwf	??_update+1
  1495     059A  087A               	movf	??_update,w
  1496     059B  047B               	iorwf	??_update+1,w
  1497     059C  1903               	btfsc	3,2
  1498     059D  2D9F               	goto	u1161
  1499     059E  2DA0               	goto	u1160
  1500     059F                     u1161:
  1501     059F  2DAE               	goto	l1315
  1502     05A0                     u1160:
  1503     05A0                     l1311:
  1504     05A0  084D               	movf	_date+1,w
  1505     05A1  3A80               	xorlw	128
  1506     05A2  00FF               	movwf	btemp+1
  1507     05A3  3080               	movlw	128
  1508     05A4  027F               	subwf	btemp+1,w
  1509     05A5  1D03               	skipz
  1510     05A6  2DA9               	goto	u1175
  1511     05A7  301D               	movlw	29
  1512     05A8  024C               	subwf	_date,w
  1513     05A9                     u1175:
  1514     05A9  1C03               	skipc
  1515     05AA  2DAC               	goto	u1171
  1516     05AB  2DAD               	goto	u1170
  1517     05AC                     u1171:
  1518     05AC  2DAE               	goto	l1315
  1519     05AD                     u1170:
  1520     05AD  2D63               	goto	l1301
  1521     05AE                     l1315:
  1522     05AE  1283               	bcf	3,5	;RP0=0, select bank0
  1523     05AF  1303               	bcf	3,6	;RP1=0, select bank0
  1524     05B0  084D               	movf	_date+1,w
  1525     05B1  3A80               	xorlw	128
  1526     05B2  00FF               	movwf	btemp+1
  1527     05B3  3080               	movlw	128
  1528     05B4  027F               	subwf	btemp+1,w
  1529     05B5  1D03               	skipz
  1530     05B6  2DB9               	goto	u1185
  1531     05B7  3020               	movlw	32
  1532     05B8  024C               	subwf	_date,w
  1533     05B9                     u1185:
  1534     05B9  1C03               	skipc
  1535     05BA  2DBC               	goto	u1181
  1536     05BB  2DBD               	goto	u1180
  1537     05BC                     u1181:
  1538     05BC  2DE6               	goto	l159
  1539     05BD                     u1180:
  1540     05BD                     l1317:
  1541                           
  1542                           ;RTC_task.c: 213:                 date = 1;
  1543     05BD  3001               	movlw	1
  1544     05BE  1283               	bcf	3,5	;RP0=0, select bank0
  1545     05BF  1303               	bcf	3,6	;RP1=0, select bank0
  1546     05C0  00CC               	movwf	_date
  1547     05C1  3000               	movlw	0
  1548     05C2  00CD               	movwf	_date+1
  1549     05C3                     l1319:
  1550                           
  1551                           ;RTC_task.c: 214:                 if (++month > 12) {
  1552     05C3  3001               	movlw	1
  1553     05C4  07CA               	addwf	_month,f
  1554     05C5  1803               	skipnc
  1555     05C6  0ACB               	incf	_month+1,f
  1556     05C7  3000               	movlw	0
  1557     05C8  07CB               	addwf	_month+1,f
  1558     05C9  084B               	movf	_month+1,w
  1559     05CA  3A80               	xorlw	128
  1560     05CB  00FF               	movwf	btemp+1
  1561     05CC  3080               	movlw	128
  1562     05CD  027F               	subwf	btemp+1,w
  1563     05CE  1D03               	skipz
  1564     05CF  2DD2               	goto	u1195
  1565     05D0  300D               	movlw	13
  1566     05D1  024A               	subwf	_month,w
  1567     05D2                     u1195:
  1568     05D2  1C03               	skipc
  1569     05D3  2DD5               	goto	u1191
  1570     05D4  2DD6               	goto	u1190
  1571     05D5                     u1191:
  1572     05D5  2DE3               	goto	l149
  1573     05D6                     u1190:
  1574     05D6                     l1321:
  1575                           
  1576                           ;RTC_task.c: 215:                     month = 1;
  1577     05D6  3001               	movlw	1
  1578     05D7  1283               	bcf	3,5	;RP0=0, select bank0
  1579     05D8  1303               	bcf	3,6	;RP1=0, select bank0
  1580     05D9  00CA               	movwf	_month
  1581     05DA  3000               	movlw	0
  1582     05DB  00CB               	movwf	_month+1
  1583                           
  1584                           ;RTC_task.c: 216:                     year++;
  1585     05DC  3001               	movlw	1
  1586     05DD  07C8               	addwf	_year,f
  1587     05DE  1803               	skipnc
  1588     05DF  0AC9               	incf	_year+1,f
  1589     05E0  3000               	movlw	0
  1590     05E1  07C9               	addwf	_year+1,f
  1591     05E2  2DE6               	goto	l159
  1592     05E3                     l149:
  1593                           
  1594                           ;RTC_task.c: 219:         } else {
  1595     05E3  2DE6               	goto	l159
  1596     05E4                     l145:
  1597                           
  1598                           ;RTC_task.c: 220:             am_pm = 1;
  1599     05E4  01D4               	clrf	_am_pm
  1600     05E5  0AD4               	incf	_am_pm,f
  1601     05E6                     l159:
  1602     05E6  0008               	return
  1603     05E7                     __end_of_update:
  1604                           
  1605                           	psect	text2
  1606     016E                     __ptext2:	
  1607 ;; *************** function _i2c_read *****************
  1608 ;; Defined at:
  1609 ;;		line 150 in file "RTC_task.c"
  1610 ;; Parameters:    Size  Location     Type
  1611 ;;  ack             2    0[COMMON] int 
  1612 ;; Auto vars:     Size  Location     Type
  1613 ;;  value           2    4[COMMON] int 
  1614 ;; Return value:  Size  Location     Type
  1615 ;;                  2    0[COMMON] int 
  1616 ;; Registers used:
  1617 ;;		wreg, status,2, status,0, pclath, cstack
  1618 ;; Tracked objects:
  1619 ;;		On entry : 0/0
  1620 ;;		On exit  : 0/0
  1621 ;;		Unchanged: 0/0
  1622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1623 ;;      Params:         2       0       0       0       0
  1624 ;;      Locals:         2       0       0       0       0
  1625 ;;      Temps:          2       0       0       0       0
  1626 ;;      Totals:         6       0       0       0       0
  1627 ;;Total ram usage:        6 bytes
  1628 ;; Hardware stack levels used: 1
  1629 ;; Hardware stack levels required when called: 1
  1630 ;; This function calls:
  1631 ;;		_i2c_wait
  1632 ;; This function is called by:
  1633 ;;		_update
  1634 ;; This function uses a non-reentrant model
  1635 ;;
  1636                           
  1637     016E                     _i2c_read:	
  1638                           ;psect for function _i2c_read
  1639                           
  1640     016E                     l1177:	
  1641                           ;incstack = 0
  1642                           ; Regs used in _i2c_read: [wreg+status,2+status,0+pclath+cstack]
  1643                           
  1644                           
  1645                           ;RTC_task.c: 151:     int value;;RTC_task.c: 152:     i2c_wait();
  1646     016E  120A  118A  20B5  120A  118A  	fcall	_i2c_wait
  1647     0173                     l1179:
  1648                           
  1649                           ;RTC_task.c: 153:     RCEN = 1;
  1650     0173  1683               	bsf	3,5	;RP0=1, select bank1
  1651     0174  1303               	bcf	3,6	;RP1=0, select bank1
  1652     0175  1591               	bsf	17,3	;volatile
  1653                           
  1654                           ;RTC_task.c: 154:     i2c_wait();
  1655     0176  120A  118A  20B5  120A  118A  	fcall	_i2c_wait
  1656     017B                     l1181:
  1657                           
  1658                           ;RTC_task.c: 155:     value = SSPBUF;
  1659     017B  1283               	bcf	3,5	;RP0=0, select bank0
  1660     017C  1303               	bcf	3,6	;RP1=0, select bank0
  1661     017D  0813               	movf	19,w	;volatile
  1662     017E  00F2               	movwf	??_i2c_read
  1663     017F  01F3               	clrf	??_i2c_read+1
  1664     0180  0872               	movf	??_i2c_read,w
  1665     0181  00F4               	movwf	i2c_read@value
  1666     0182  0873               	movf	??_i2c_read+1,w
  1667     0183  00F5               	movwf	i2c_read@value+1
  1668     0184                     l1183:
  1669                           
  1670                           ;RTC_task.c: 156:     i2c_wait();
  1671     0184  120A  118A  20B5  120A  118A  	fcall	_i2c_wait
  1672     0189                     l1185:
  1673                           
  1674                           ;RTC_task.c: 157:     ACKDT = ack ? 0 : 1;
  1675     0189  0870               	movf	i2c_read@ack,w
  1676     018A  0471               	iorwf	i2c_read@ack+1,w
  1677     018B  1903               	btfsc	3,2
  1678     018C  298E               	goto	u871
  1679     018D  2992               	goto	u870
  1680     018E                     u871:
  1681     018E  1683               	bsf	3,5	;RP0=1, select bank1
  1682     018F  1303               	bcf	3,6	;RP1=0, select bank1
  1683     0190  1691               	bsf	17,5	;volatile
  1684     0191  2995               	goto	u884
  1685     0192                     u870:
  1686     0192  1683               	bsf	3,5	;RP0=1, select bank1
  1687     0193  1303               	bcf	3,6	;RP1=0, select bank1
  1688     0194  1291               	bcf	17,5	;volatile
  1689     0195                     u884:
  1690     0195                     l1187:
  1691                           
  1692                           ;RTC_task.c: 158:     ACKEN = 1;
  1693     0195  1611               	bsf	17,4	;volatile
  1694     0196                     l1189:
  1695                           
  1696                           ;RTC_task.c: 159:     return value;
  1697     0196  0875               	movf	i2c_read@value+1,w
  1698     0197  00F1               	movwf	?_i2c_read+1
  1699     0198  0874               	movf	i2c_read@value,w
  1700     0199  00F0               	movwf	?_i2c_read
  1701     019A                     l132:
  1702     019A  0008               	return
  1703     019B                     __end_of_i2c_read:
  1704                           
  1705                           	psect	text3
  1706     0149                     __ptext3:	
  1707 ;; *************** function _bcd_2_dec *****************
  1708 ;; Defined at:
  1709 ;;		line 166 in file "RTC_task.c"
  1710 ;; Parameters:    Size  Location     Type
  1711 ;;  val             2    6[COMMON] int 
  1712 ;; Auto vars:     Size  Location     Type
  1713 ;;		None
  1714 ;; Return value:  Size  Location     Type
  1715 ;;                  2    6[COMMON] int 
  1716 ;; Registers used:
  1717 ;;		wreg, status,2, status,0, pclath, cstack
  1718 ;; Tracked objects:
  1719 ;;		On entry : 0/0
  1720 ;;		On exit  : 0/0
  1721 ;;		Unchanged: 0/0
  1722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1723 ;;      Params:         2       0       0       0       0
  1724 ;;      Locals:         0       0       0       0       0
  1725 ;;      Temps:          2       0       0       0       0
  1726 ;;      Totals:         4       0       0       0       0
  1727 ;;Total ram usage:        4 bytes
  1728 ;; Hardware stack levels used: 1
  1729 ;; Hardware stack levels required when called: 1
  1730 ;; This function calls:
  1731 ;;		___wmul
  1732 ;; This function is called by:
  1733 ;;		_update
  1734 ;; This function uses a non-reentrant model
  1735 ;;
  1736                           
  1737     0149                     _bcd_2_dec:	
  1738                           ;psect for function _bcd_2_dec
  1739                           
  1740     0149                     l1197:	
  1741                           ;incstack = 0
  1742                           ; Regs used in _bcd_2_dec: [wreg+status,2+status,0+pclath+cstack]
  1743                           
  1744                           
  1745                           ;RTC_task.c: 167:     return ((val >> 4) * 10) + (val & 0x0F);
  1746     0149  300F               	movlw	15
  1747     014A  0576               	andwf	bcd_2_dec@val,w
  1748     014B  00F8               	movwf	??_bcd_2_dec
  1749     014C  3000               	movlw	0
  1750     014D  0577               	andwf	bcd_2_dec@val+1,w
  1751     014E  00F9               	movwf	??_bcd_2_dec+1
  1752     014F  0E76               	swapf	bcd_2_dec@val,w
  1753     0150  390F               	andlw	15
  1754     0151  00F0               	movwf	___wmul@multiplier
  1755     0152  0E77               	swapf	bcd_2_dec@val+1,w
  1756     0153  39F0               	andlw	240
  1757     0154  04F0               	iorwf	___wmul@multiplier,f
  1758     0155  0E77               	swapf	bcd_2_dec@val+1,w
  1759     0156  390F               	andlw	15
  1760     0157  00F1               	movwf	___wmul@multiplier+1
  1761     0158  30F0               	movlw	240
  1762     0159  1DF1               	btfss	___wmul@multiplier+1,3
  1763     015A  3000               	movlw	0
  1764     015B  04F1               	iorwf	___wmul@multiplier+1,f
  1765     015C  300A               	movlw	10
  1766     015D  00F2               	movwf	___wmul@multiplicand
  1767     015E  3000               	movlw	0
  1768     015F  00F3               	movwf	___wmul@multiplicand+1
  1769     0160  120A  118A  2124  120A  118A  	fcall	___wmul
  1770     0165  0878               	movf	??_bcd_2_dec,w
  1771     0166  0770               	addwf	?___wmul,w
  1772     0167  00F6               	movwf	?_bcd_2_dec
  1773     0168  0879               	movf	??_bcd_2_dec+1,w
  1774     0169  1803               	skipnc
  1775     016A  0A79               	incf	??_bcd_2_dec+1,w
  1776     016B  0771               	addwf	?___wmul+1,w
  1777     016C  00F7               	movwf	?_bcd_2_dec+1
  1778     016D                     l138:
  1779     016D  0008               	return
  1780     016E                     __end_of_bcd_2_dec:
  1781                           
  1782                           	psect	text4
  1783     0124                     __ptext4:	
  1784 ;; *************** function ___wmul *****************
  1785 ;; Defined at:
  1786 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul16.c"
  1787 ;; Parameters:    Size  Location     Type
  1788 ;;  multiplier      2    0[COMMON] unsigned int 
  1789 ;;  multiplicand    2    2[COMMON] unsigned int 
  1790 ;; Auto vars:     Size  Location     Type
  1791 ;;  product         2    4[COMMON] unsigned int 
  1792 ;; Return value:  Size  Location     Type
  1793 ;;                  2    0[COMMON] unsigned int 
  1794 ;; Registers used:
  1795 ;;		wreg, status,2, status,0
  1796 ;; Tracked objects:
  1797 ;;		On entry : 0/0
  1798 ;;		On exit  : 0/0
  1799 ;;		Unchanged: 0/0
  1800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1801 ;;      Params:         4       0       0       0       0
  1802 ;;      Locals:         2       0       0       0       0
  1803 ;;      Temps:          0       0       0       0       0
  1804 ;;      Totals:         6       0       0       0       0
  1805 ;;Total ram usage:        6 bytes
  1806 ;; Hardware stack levels used: 1
  1807 ;; This function calls:
  1808 ;;		Nothing
  1809 ;; This function is called by:
  1810 ;;		_bcd_2_dec
  1811 ;; This function uses a non-reentrant model
  1812 ;;
  1813                           
  1814     0124                     ___wmul:	
  1815                           ;psect for function ___wmul
  1816                           
  1817     0124                     l1061:	
  1818                           ;incstack = 0
  1819                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1820                           
  1821     0124  01F4               	clrf	___wmul@product
  1822     0125  01F5               	clrf	___wmul@product+1
  1823     0126                     l1063:
  1824     0126  1C70               	btfss	___wmul@multiplier,0
  1825     0127  2929               	goto	u641
  1826     0128  292A               	goto	u640
  1827     0129                     u641:
  1828     0129  2930               	goto	l245
  1829     012A                     u640:
  1830     012A                     l1065:
  1831     012A  0872               	movf	___wmul@multiplicand,w
  1832     012B  07F4               	addwf	___wmul@product,f
  1833     012C  1803               	skipnc
  1834     012D  0AF5               	incf	___wmul@product+1,f
  1835     012E  0873               	movf	___wmul@multiplicand+1,w
  1836     012F  07F5               	addwf	___wmul@product+1,f
  1837     0130                     l245:
  1838     0130  3001               	movlw	1
  1839     0131                     u655:
  1840     0131  1003               	clrc
  1841     0132  0DF2               	rlf	___wmul@multiplicand,f
  1842     0133  0DF3               	rlf	___wmul@multiplicand+1,f
  1843     0134  3EFF               	addlw	-1
  1844     0135  1D03               	skipz
  1845     0136  2931               	goto	u655
  1846     0137                     l1067:
  1847     0137  3001               	movlw	1
  1848     0138                     u665:
  1849     0138  1003               	clrc
  1850     0139  0CF1               	rrf	___wmul@multiplier+1,f
  1851     013A  0CF0               	rrf	___wmul@multiplier,f
  1852     013B  3EFF               	addlw	-1
  1853     013C  1D03               	skipz
  1854     013D  2938               	goto	u665
  1855     013E                     l1069:
  1856     013E  0870               	movf	___wmul@multiplier,w
  1857     013F  0471               	iorwf	___wmul@multiplier+1,w
  1858     0140  1D03               	btfss	3,2
  1859     0141  2943               	goto	u671
  1860     0142  2944               	goto	u670
  1861     0143                     u671:
  1862     0143  2926               	goto	l1063
  1863     0144                     u670:
  1864     0144                     l1071:
  1865     0144  0875               	movf	___wmul@product+1,w
  1866     0145  00F1               	movwf	?___wmul+1
  1867     0146  0874               	movf	___wmul@product,w
  1868     0147  00F0               	movwf	?___wmul
  1869     0148                     l247:
  1870     0148  0008               	return
  1871     0149                     __end_of___wmul:
  1872                           
  1873                           	psect	text5
  1874     03CC                     __ptext5:	
  1875 ;; *************** function _settime *****************
  1876 ;; Defined at:
  1877 ;;		line 170 in file "RTC_task.c"
  1878 ;; Parameters:    Size  Location     Type
  1879 ;;		None
  1880 ;; Auto vars:     Size  Location     Type
  1881 ;;		None
  1882 ;; Return value:  Size  Location     Type
  1883 ;;                  1    wreg      void 
  1884 ;; Registers used:
  1885 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1886 ;; Tracked objects:
  1887 ;;		On entry : 0/0
  1888 ;;		On exit  : 0/0
  1889 ;;		Unchanged: 0/0
  1890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1891 ;;      Params:         0       0       0       0       0
  1892 ;;      Locals:         0       0       0       0       0
  1893 ;;      Temps:          0       0       0       0       0
  1894 ;;      Totals:         0       0       0       0       0
  1895 ;;Total ram usage:        0 bytes
  1896 ;; Hardware stack levels used: 1
  1897 ;; Hardware stack levels required when called: 2
  1898 ;; This function calls:
  1899 ;;		_dec_2_bcd
  1900 ;;		_i2c_start
  1901 ;;		_i2c_stop
  1902 ;;		_i2c_write
  1903 ;; This function is called by:
  1904 ;;		_main
  1905 ;; This function uses a non-reentrant model
  1906 ;;
  1907                           
  1908     03CC                     _settime:	
  1909                           ;psect for function _settime
  1910                           
  1911     03CC                     l1265:	
  1912                           ;incstack = 0
  1913                           ; Regs used in _settime: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1914                           
  1915                           
  1916                           ;RTC_task.c: 171:     i2c_start();
  1917     03CC  120A  118A  2098  120A  118A  	fcall	_i2c_start
  1918                           
  1919                           ;RTC_task.c: 172:     i2c_write(0xD0);
  1920     03D1  30D0               	movlw	208
  1921     03D2  120A  118A  20AA  120A  118A  	fcall	_i2c_write
  1922                           
  1923                           ;RTC_task.c: 173:     i2c_write(0x00);
  1924     03D7  3000               	movlw	0
  1925     03D8  120A  118A  20AA  120A  118A  	fcall	_i2c_write
  1926     03DD                     l1267:
  1927                           
  1928                           ;RTC_task.c: 174:     i2c_write(dec_2_bcd(sec));
  1929     03DD  1283               	bcf	3,5	;RP0=0, select bank0
  1930     03DE  1303               	bcf	3,6	;RP1=0, select bank0
  1931     03DF  0853               	movf	_sec+1,w
  1932     03E0  00F9               	movwf	dec_2_bcd@val+1
  1933     03E1  0852               	movf	_sec,w
  1934     03E2  00F8               	movwf	dec_2_bcd@val
  1935     03E3  120A  118A  219B  120A  118A  	fcall	_dec_2_bcd
  1936     03E8  0878               	movf	?_dec_2_bcd,w
  1937     03E9  120A  118A  20AA  120A  118A  	fcall	_i2c_write
  1938     03EE                     l1269:
  1939                           
  1940                           ;RTC_task.c: 175:     i2c_write(dec_2_bcd(min));
  1941     03EE  1283               	bcf	3,5	;RP0=0, select bank0
  1942     03EF  1303               	bcf	3,6	;RP1=0, select bank0
  1943     03F0  0851               	movf	_min+1,w
  1944     03F1  00F9               	movwf	dec_2_bcd@val+1
  1945     03F2  0850               	movf	_min,w
  1946     03F3  00F8               	movwf	dec_2_bcd@val
  1947     03F4  120A  118A  219B  120A  118A  	fcall	_dec_2_bcd
  1948     03F9  0878               	movf	?_dec_2_bcd,w
  1949     03FA  120A  118A  20AA  120A  118A  	fcall	_i2c_write
  1950     03FF                     l1271:
  1951                           
  1952                           ;RTC_task.c: 176:     i2c_write(0x40 | dec_2_bcd(hour));
  1953     03FF  1283               	bcf	3,5	;RP0=0, select bank0
  1954     0400  1303               	bcf	3,6	;RP1=0, select bank0
  1955     0401  084F               	movf	_hour+1,w
  1956     0402  00F9               	movwf	dec_2_bcd@val+1
  1957     0403  084E               	movf	_hour,w
  1958     0404  00F8               	movwf	dec_2_bcd@val
  1959     0405  120A  118A  219B  120A  118A  	fcall	_dec_2_bcd
  1960     040A  0878               	movf	?_dec_2_bcd,w
  1961     040B  3840               	iorlw	64
  1962     040C  120A  118A  20AA  120A  118A  	fcall	_i2c_write
  1963     0411                     l1273:
  1964                           
  1965                           ;RTC_task.c: 177:     i2c_write(1);
  1966     0411  3001               	movlw	1
  1967     0412  120A  118A  20AA  120A  118A  	fcall	_i2c_write
  1968                           
  1969                           ;RTC_task.c: 178:     i2c_write(dec_2_bcd(date));
  1970     0417  1283               	bcf	3,5	;RP0=0, select bank0
  1971     0418  1303               	bcf	3,6	;RP1=0, select bank0
  1972     0419  084D               	movf	_date+1,w
  1973     041A  00F9               	movwf	dec_2_bcd@val+1
  1974     041B  084C               	movf	_date,w
  1975     041C  00F8               	movwf	dec_2_bcd@val
  1976     041D  120A  118A  219B  120A  118A  	fcall	_dec_2_bcd
  1977     0422  0878               	movf	?_dec_2_bcd,w
  1978     0423  120A  118A  20AA  120A  118A  	fcall	_i2c_write
  1979                           
  1980                           ;RTC_task.c: 179:     i2c_write(dec_2_bcd(month));
  1981     0428  1283               	bcf	3,5	;RP0=0, select bank0
  1982     0429  1303               	bcf	3,6	;RP1=0, select bank0
  1983     042A  084B               	movf	_month+1,w
  1984     042B  00F9               	movwf	dec_2_bcd@val+1
  1985     042C  084A               	movf	_month,w
  1986     042D  00F8               	movwf	dec_2_bcd@val
  1987     042E  120A  118A  219B  120A  118A  	fcall	_dec_2_bcd
  1988     0433  0878               	movf	?_dec_2_bcd,w
  1989     0434  120A  118A  20AA  120A  118A  	fcall	_i2c_write
  1990                           
  1991                           ;RTC_task.c: 180:     i2c_write(dec_2_bcd(year));
  1992     0439  1283               	bcf	3,5	;RP0=0, select bank0
  1993     043A  1303               	bcf	3,6	;RP1=0, select bank0
  1994     043B  0849               	movf	_year+1,w
  1995     043C  00F9               	movwf	dec_2_bcd@val+1
  1996     043D  0848               	movf	_year,w
  1997     043E  00F8               	movwf	dec_2_bcd@val
  1998     043F  120A  118A  219B  120A  118A  	fcall	_dec_2_bcd
  1999     0444  0878               	movf	?_dec_2_bcd,w
  2000     0445  120A  118A  20AA  120A  118A  	fcall	_i2c_write
  2001     044A                     l1275:
  2002                           
  2003                           ;RTC_task.c: 181:     i2c_stop();
  2004     044A  120A  118A  20A1  120A  118A  	fcall	_i2c_stop
  2005     044F                     l141:
  2006     044F  0008               	return
  2007     0450                     __end_of_settime:
  2008                           
  2009                           	psect	text6
  2010     00AA                     __ptext6:	
  2011 ;; *************** function _i2c_write *****************
  2012 ;; Defined at:
  2013 ;;		line 145 in file "RTC_task.c"
  2014 ;; Parameters:    Size  Location     Type
  2015 ;;  data            1    wreg     unsigned char 
  2016 ;; Auto vars:     Size  Location     Type
  2017 ;;  data            1    0[COMMON] unsigned char 
  2018 ;; Return value:  Size  Location     Type
  2019 ;;                  1    wreg      void 
  2020 ;; Registers used:
  2021 ;;		wreg, status,2, status,0, pclath, cstack
  2022 ;; Tracked objects:
  2023 ;;		On entry : 0/0
  2024 ;;		On exit  : 0/0
  2025 ;;		Unchanged: 0/0
  2026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2027 ;;      Params:         0       0       0       0       0
  2028 ;;      Locals:         1       0       0       0       0
  2029 ;;      Temps:          0       0       0       0       0
  2030 ;;      Totals:         1       0       0       0       0
  2031 ;;Total ram usage:        1 bytes
  2032 ;; Hardware stack levels used: 1
  2033 ;; Hardware stack levels required when called: 1
  2034 ;; This function calls:
  2035 ;;		_i2c_wait
  2036 ;; This function is called by:
  2037 ;;		_settime
  2038 ;;		_update
  2039 ;; This function uses a non-reentrant model
  2040 ;;
  2041                           
  2042     00AA                     _i2c_write:	
  2043                           ;psect for function _i2c_write
  2044                           
  2045                           
  2046                           ;incstack = 0
  2047                           ; Regs used in _i2c_write: [wreg+status,2+status,0+pclath+cstack]
  2048                           ;i2c_write@data stored from wreg
  2049     00AA  00F0               	movwf	i2c_write@data
  2050     00AB                     l1173:
  2051                           
  2052                           ;RTC_task.c: 146:     i2c_wait();
  2053     00AB  120A  118A  20B5  120A  118A  	fcall	_i2c_wait
  2054     00B0                     l1175:
  2055                           
  2056                           ;RTC_task.c: 147:     SSPBUF = data;
  2057     00B0  0870               	movf	i2c_write@data,w
  2058     00B1  1283               	bcf	3,5	;RP0=0, select bank0
  2059     00B2  1303               	bcf	3,6	;RP1=0, select bank0
  2060     00B3  0093               	movwf	19	;volatile
  2061     00B4                     l129:
  2062     00B4  0008               	return
  2063     00B5                     __end_of_i2c_write:
  2064                           
  2065                           	psect	text7
  2066     00A1                     __ptext7:	
  2067 ;; *************** function _i2c_stop *****************
  2068 ;; Defined at:
  2069 ;;		line 140 in file "RTC_task.c"
  2070 ;; Parameters:    Size  Location     Type
  2071 ;;		None
  2072 ;; Auto vars:     Size  Location     Type
  2073 ;;		None
  2074 ;; Return value:  Size  Location     Type
  2075 ;;                  1    wreg      void 
  2076 ;; Registers used:
  2077 ;;		wreg, status,2, status,0, pclath, cstack
  2078 ;; Tracked objects:
  2079 ;;		On entry : 0/0
  2080 ;;		On exit  : 0/0
  2081 ;;		Unchanged: 0/0
  2082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2083 ;;      Params:         0       0       0       0       0
  2084 ;;      Locals:         0       0       0       0       0
  2085 ;;      Temps:          0       0       0       0       0
  2086 ;;      Totals:         0       0       0       0       0
  2087 ;;Total ram usage:        0 bytes
  2088 ;; Hardware stack levels used: 1
  2089 ;; Hardware stack levels required when called: 1
  2090 ;; This function calls:
  2091 ;;		_i2c_wait
  2092 ;; This function is called by:
  2093 ;;		_settime
  2094 ;;		_update
  2095 ;; This function uses a non-reentrant model
  2096 ;;
  2097                           
  2098     00A1                     _i2c_stop:	
  2099                           ;psect for function _i2c_stop
  2100                           
  2101     00A1                     l1169:	
  2102                           ;incstack = 0
  2103                           ; Regs used in _i2c_stop: [wreg+status,2+status,0+pclath+cstack]
  2104                           
  2105                           
  2106                           ;RTC_task.c: 141:     i2c_wait();
  2107     00A1  120A  118A  20B5  120A  118A  	fcall	_i2c_wait
  2108     00A6                     l1171:
  2109                           
  2110                           ;RTC_task.c: 142:     PEN = 1;
  2111     00A6  1683               	bsf	3,5	;RP0=1, select bank1
  2112     00A7  1303               	bcf	3,6	;RP1=0, select bank1
  2113     00A8  1511               	bsf	17,2	;volatile
  2114     00A9                     l126:
  2115     00A9  0008               	return
  2116     00AA                     __end_of_i2c_stop:
  2117                           
  2118                           	psect	text8
  2119     0098                     __ptext8:	
  2120 ;; *************** function _i2c_start *****************
  2121 ;; Defined at:
  2122 ;;		line 135 in file "RTC_task.c"
  2123 ;; Parameters:    Size  Location     Type
  2124 ;;		None
  2125 ;; Auto vars:     Size  Location     Type
  2126 ;;		None
  2127 ;; Return value:  Size  Location     Type
  2128 ;;                  1    wreg      void 
  2129 ;; Registers used:
  2130 ;;		wreg, status,2, status,0, pclath, cstack
  2131 ;; Tracked objects:
  2132 ;;		On entry : 0/0
  2133 ;;		On exit  : 0/0
  2134 ;;		Unchanged: 0/0
  2135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2136 ;;      Params:         0       0       0       0       0
  2137 ;;      Locals:         0       0       0       0       0
  2138 ;;      Temps:          0       0       0       0       0
  2139 ;;      Totals:         0       0       0       0       0
  2140 ;;Total ram usage:        0 bytes
  2141 ;; Hardware stack levels used: 1
  2142 ;; Hardware stack levels required when called: 1
  2143 ;; This function calls:
  2144 ;;		_i2c_wait
  2145 ;; This function is called by:
  2146 ;;		_settime
  2147 ;;		_update
  2148 ;; This function uses a non-reentrant model
  2149 ;;
  2150                           
  2151     0098                     _i2c_start:	
  2152                           ;psect for function _i2c_start
  2153                           
  2154     0098                     l1165:	
  2155                           ;incstack = 0
  2156                           ; Regs used in _i2c_start: [wreg+status,2+status,0+pclath+cstack]
  2157                           
  2158                           
  2159                           ;RTC_task.c: 136:     i2c_wait();
  2160     0098  120A  118A  20B5  120A  118A  	fcall	_i2c_wait
  2161     009D                     l1167:
  2162                           
  2163                           ;RTC_task.c: 137:     SEN = 1;
  2164     009D  1683               	bsf	3,5	;RP0=1, select bank1
  2165     009E  1303               	bcf	3,6	;RP1=0, select bank1
  2166     009F  1411               	bsf	17,0	;volatile
  2167     00A0                     l123:
  2168     00A0  0008               	return
  2169     00A1                     __end_of_i2c_start:
  2170                           
  2171                           	psect	text9
  2172     00B5                     __ptext9:	
  2173 ;; *************** function _i2c_wait *****************
  2174 ;; Defined at:
  2175 ;;		line 131 in file "RTC_task.c"
  2176 ;; Parameters:    Size  Location     Type
  2177 ;;		None
  2178 ;; Auto vars:     Size  Location     Type
  2179 ;;		None
  2180 ;; Return value:  Size  Location     Type
  2181 ;;                  1    wreg      void 
  2182 ;; Registers used:
  2183 ;;		wreg, status,2
  2184 ;; Tracked objects:
  2185 ;;		On entry : 0/0
  2186 ;;		On exit  : 0/0
  2187 ;;		Unchanged: 0/0
  2188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2189 ;;      Params:         0       0       0       0       0
  2190 ;;      Locals:         0       0       0       0       0
  2191 ;;      Temps:          0       0       0       0       0
  2192 ;;      Totals:         0       0       0       0       0
  2193 ;;Total ram usage:        0 bytes
  2194 ;; Hardware stack levels used: 1
  2195 ;; This function calls:
  2196 ;;		Nothing
  2197 ;; This function is called by:
  2198 ;;		_i2c_start
  2199 ;;		_i2c_stop
  2200 ;;		_i2c_write
  2201 ;;		_i2c_read
  2202 ;; This function uses a non-reentrant model
  2203 ;;
  2204                           
  2205     00B5                     _i2c_wait:	
  2206                           ;psect for function _i2c_wait
  2207                           
  2208     00B5                     l1055:	
  2209                           ;incstack = 0
  2210                           ; Regs used in _i2c_wait: [wreg+status,2]
  2211                           
  2212     00B5                     l1057:	
  2213                           ;RTC_task.c: 132:     while (SSPCON2 & 0x1F || SSPSTAT & 0x04);
  2214                           
  2215     00B5  1683               	bsf	3,5	;RP0=1, select bank1
  2216     00B6  1303               	bcf	3,6	;RP1=0, select bank1
  2217     00B7  0811               	movf	17,w	;volatile
  2218     00B8  391F               	andlw	31
  2219     00B9  1D03               	btfss	3,2
  2220     00BA  28BC               	goto	u621
  2221     00BB  28BD               	goto	u620
  2222     00BC                     u621:
  2223     00BC  28B5               	goto	l1057
  2224     00BD                     u620:
  2225     00BD                     l1059:
  2226     00BD  1914               	btfsc	20,2	;volatile
  2227     00BE  28C0               	goto	u631
  2228     00BF  28C1               	goto	u630
  2229     00C0                     u631:
  2230     00C0  28B5               	goto	l1057
  2231     00C1                     u630:
  2232     00C1                     l120:
  2233     00C1  0008               	return
  2234     00C2                     __end_of_i2c_wait:
  2235                           
  2236                           	psect	text10
  2237     019B                     __ptext10:	
  2238 ;; *************** function _dec_2_bcd *****************
  2239 ;; Defined at:
  2240 ;;		line 162 in file "RTC_task.c"
  2241 ;; Parameters:    Size  Location     Type
  2242 ;;  val             2    8[COMMON] int 
  2243 ;; Auto vars:     Size  Location     Type
  2244 ;;		None
  2245 ;; Return value:  Size  Location     Type
  2246 ;;                  2    8[COMMON] int 
  2247 ;; Registers used:
  2248 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2249 ;; Tracked objects:
  2250 ;;		On entry : 0/0
  2251 ;;		On exit  : 0/0
  2252 ;;		Unchanged: 0/0
  2253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2254 ;;      Params:         2       0       0       0       0
  2255 ;;      Locals:         0       0       0       0       0
  2256 ;;      Temps:          2       0       0       0       0
  2257 ;;      Totals:         4       0       0       0       0
  2258 ;;Total ram usage:        4 bytes
  2259 ;; Hardware stack levels used: 1
  2260 ;; Hardware stack levels required when called: 1
  2261 ;; This function calls:
  2262 ;;		___awdiv
  2263 ;;		___awmod
  2264 ;; This function is called by:
  2265 ;;		_settime
  2266 ;; This function uses a non-reentrant model
  2267 ;;
  2268                           
  2269     019B                     _dec_2_bcd:	
  2270                           ;psect for function _dec_2_bcd
  2271                           
  2272     019B                     l1193:	
  2273                           ;incstack = 0
  2274                           ; Regs used in _dec_2_bcd: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2275                           
  2276                           
  2277                           ;RTC_task.c: 163:     return ((val / 10) << 4) + (val % 10);
  2278     019B  300A               	movlw	10
  2279     019C  00F0               	movwf	___awdiv@divisor
  2280     019D  3000               	movlw	0
  2281     019E  00F1               	movwf	___awdiv@divisor+1
  2282     019F  0879               	movf	dec_2_bcd@val+1,w
  2283     01A0  00F3               	movwf	___awdiv@dividend+1
  2284     01A1  0878               	movf	dec_2_bcd@val,w
  2285     01A2  00F2               	movwf	___awdiv@dividend
  2286     01A3  120A  118A  22FD  120A  118A  	fcall	___awdiv
  2287     01A8  0870               	movf	?___awdiv,w
  2288     01A9  00FA               	movwf	??_dec_2_bcd
  2289     01AA  0871               	movf	?___awdiv+1,w
  2290     01AB  00FB               	movwf	??_dec_2_bcd+1
  2291     01AC  0EFA               	swapf	??_dec_2_bcd,f
  2292     01AD  0EFB               	swapf	??_dec_2_bcd+1,f
  2293     01AE  30F0               	movlw	240
  2294     01AF  05FB               	andwf	??_dec_2_bcd+1,f
  2295     01B0  087A               	movf	??_dec_2_bcd,w
  2296     01B1  390F               	andlw	15
  2297     01B2  04FB               	iorwf	??_dec_2_bcd+1,f
  2298     01B3  30F0               	movlw	240
  2299     01B4  05FA               	andwf	??_dec_2_bcd,f
  2300     01B5  300A               	movlw	10
  2301     01B6  00F0               	movwf	___awmod@divisor
  2302     01B7  3000               	movlw	0
  2303     01B8  00F1               	movwf	___awmod@divisor+1
  2304     01B9  0879               	movf	dec_2_bcd@val+1,w
  2305     01BA  00F3               	movwf	___awmod@dividend+1
  2306     01BB  0878               	movf	dec_2_bcd@val,w
  2307     01BC  00F2               	movwf	___awmod@dividend
  2308     01BD  120A  118A  22A4  120A  118A  	fcall	___awmod
  2309     01C2  0870               	movf	?___awmod,w
  2310     01C3  077A               	addwf	??_dec_2_bcd,w
  2311     01C4  00F8               	movwf	?_dec_2_bcd
  2312     01C5  0871               	movf	?___awmod+1,w
  2313     01C6  1803               	skipnc
  2314     01C7  0A71               	incf	?___awmod+1,w
  2315     01C8  077B               	addwf	??_dec_2_bcd+1,w
  2316     01C9  00F9               	movwf	?_dec_2_bcd+1
  2317     01CA                     l135:
  2318     01CA  0008               	return
  2319     01CB                     __end_of_dec_2_bcd:
  2320                           
  2321                           	psect	text11
  2322     02A4                     __ptext11:	
  2323 ;; *************** function ___awmod *****************
  2324 ;; Defined at:
  2325 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
  2326 ;; Parameters:    Size  Location     Type
  2327 ;;  divisor         2    0[COMMON] int 
  2328 ;;  dividend        2    2[COMMON] int 
  2329 ;; Auto vars:     Size  Location     Type
  2330 ;;  sign            1    5[COMMON] unsigned char 
  2331 ;;  counter         1    4[COMMON] unsigned char 
  2332 ;; Return value:  Size  Location     Type
  2333 ;;                  2    0[COMMON] int 
  2334 ;; Registers used:
  2335 ;;		wreg, status,2, status,0, btemp+1
  2336 ;; Tracked objects:
  2337 ;;		On entry : 0/0
  2338 ;;		On exit  : 0/0
  2339 ;;		Unchanged: 0/0
  2340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2341 ;;      Params:         4       0       0       0       0
  2342 ;;      Locals:         2       0       0       0       0
  2343 ;;      Temps:          0       0       0       0       0
  2344 ;;      Totals:         6       0       0       0       0
  2345 ;;Total ram usage:        6 bytes
  2346 ;; Hardware stack levels used: 1
  2347 ;; This function calls:
  2348 ;;		Nothing
  2349 ;; This function is called by:
  2350 ;;		_main
  2351 ;;		_dec_2_bcd
  2352 ;; This function uses a non-reentrant model
  2353 ;;
  2354                           
  2355     02A4                     ___awmod:	
  2356                           ;psect for function ___awmod
  2357                           
  2358     02A4                     l1119:	
  2359                           ;incstack = 0
  2360                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
  2361                           
  2362     02A4  01F5               	clrf	___awmod@sign
  2363     02A5                     l1121:
  2364     02A5  1FF3               	btfss	___awmod@dividend+1,7
  2365     02A6  2AA8               	goto	u781
  2366     02A7  2AA9               	goto	u780
  2367     02A8                     u781:
  2368     02A8  2AB0               	goto	l1127
  2369     02A9                     u780:
  2370     02A9                     l1123:
  2371     02A9  09F2               	comf	___awmod@dividend,f
  2372     02AA  09F3               	comf	___awmod@dividend+1,f
  2373     02AB  0AF2               	incf	___awmod@dividend,f
  2374     02AC  1903               	skipnz
  2375     02AD  0AF3               	incf	___awmod@dividend+1,f
  2376     02AE                     l1125:
  2377     02AE  01F5               	clrf	___awmod@sign
  2378     02AF  0AF5               	incf	___awmod@sign,f
  2379     02B0                     l1127:
  2380     02B0  1FF1               	btfss	___awmod@divisor+1,7
  2381     02B1  2AB3               	goto	u791
  2382     02B2  2AB4               	goto	u790
  2383     02B3                     u791:
  2384     02B3  2AB9               	goto	l1131
  2385     02B4                     u790:
  2386     02B4                     l1129:
  2387     02B4  09F0               	comf	___awmod@divisor,f
  2388     02B5  09F1               	comf	___awmod@divisor+1,f
  2389     02B6  0AF0               	incf	___awmod@divisor,f
  2390     02B7  1903               	skipnz
  2391     02B8  0AF1               	incf	___awmod@divisor+1,f
  2392     02B9                     l1131:
  2393     02B9  0870               	movf	___awmod@divisor,w
  2394     02BA  0471               	iorwf	___awmod@divisor+1,w
  2395     02BB  1903               	btfsc	3,2
  2396     02BC  2ABE               	goto	u801
  2397     02BD  2ABF               	goto	u800
  2398     02BE                     u801:
  2399     02BE  2AEE               	goto	l1149
  2400     02BF                     u800:
  2401     02BF                     l1133:
  2402     02BF  01F4               	clrf	___awmod@counter
  2403     02C0  0AF4               	incf	___awmod@counter,f
  2404     02C1  2ACD               	goto	l1139
  2405     02C2                     l1135:
  2406     02C2  3001               	movlw	1
  2407     02C3                     u815:
  2408     02C3  1003               	clrc
  2409     02C4  0DF0               	rlf	___awmod@divisor,f
  2410     02C5  0DF1               	rlf	___awmod@divisor+1,f
  2411     02C6  3EFF               	addlw	-1
  2412     02C7  1D03               	skipz
  2413     02C8  2AC3               	goto	u815
  2414     02C9                     l1137:
  2415     02C9  3001               	movlw	1
  2416     02CA  00FF               	movwf	btemp+1
  2417     02CB  087F               	movf	btemp+1,w
  2418     02CC  07F4               	addwf	___awmod@counter,f
  2419     02CD                     l1139:
  2420     02CD  1FF1               	btfss	___awmod@divisor+1,7
  2421     02CE  2AD0               	goto	u821
  2422     02CF  2AD1               	goto	u820
  2423     02D0                     u821:
  2424     02D0  2AC2               	goto	l1135
  2425     02D1                     u820:
  2426     02D1                     l1141:
  2427     02D1  0871               	movf	___awmod@divisor+1,w
  2428     02D2  0273               	subwf	___awmod@dividend+1,w
  2429     02D3  1D03               	skipz
  2430     02D4  2AD7               	goto	u835
  2431     02D5  0870               	movf	___awmod@divisor,w
  2432     02D6  0272               	subwf	___awmod@dividend,w
  2433     02D7                     u835:
  2434     02D7  1C03               	skipc
  2435     02D8  2ADA               	goto	u831
  2436     02D9  2ADB               	goto	u830
  2437     02DA                     u831:
  2438     02DA  2AE1               	goto	l1145
  2439     02DB                     u830:
  2440     02DB                     l1143:
  2441     02DB  0870               	movf	___awmod@divisor,w
  2442     02DC  02F2               	subwf	___awmod@dividend,f
  2443     02DD  0871               	movf	___awmod@divisor+1,w
  2444     02DE  1C03               	skipc
  2445     02DF  03F3               	decf	___awmod@dividend+1,f
  2446     02E0  02F3               	subwf	___awmod@dividend+1,f
  2447     02E1                     l1145:
  2448     02E1  3001               	movlw	1
  2449     02E2                     u845:
  2450     02E2  1003               	clrc
  2451     02E3  0CF1               	rrf	___awmod@divisor+1,f
  2452     02E4  0CF0               	rrf	___awmod@divisor,f
  2453     02E5  3EFF               	addlw	-1
  2454     02E6  1D03               	skipz
  2455     02E7  2AE2               	goto	u845
  2456     02E8                     l1147:
  2457     02E8  3001               	movlw	1
  2458     02E9  02F4               	subwf	___awmod@counter,f
  2459     02EA  1D03               	btfss	3,2
  2460     02EB  2AED               	goto	u851
  2461     02EC  2AEE               	goto	u850
  2462     02ED                     u851:
  2463     02ED  2AD1               	goto	l1141
  2464     02EE                     u850:
  2465     02EE                     l1149:
  2466     02EE  0875               	movf	___awmod@sign,w
  2467     02EF  1903               	btfsc	3,2
  2468     02F0  2AF2               	goto	u861
  2469     02F1  2AF3               	goto	u860
  2470     02F2                     u861:
  2471     02F2  2AF8               	goto	l1153
  2472     02F3                     u860:
  2473     02F3                     l1151:
  2474     02F3  09F2               	comf	___awmod@dividend,f
  2475     02F4  09F3               	comf	___awmod@dividend+1,f
  2476     02F5  0AF2               	incf	___awmod@dividend,f
  2477     02F6  1903               	skipnz
  2478     02F7  0AF3               	incf	___awmod@dividend+1,f
  2479     02F8                     l1153:
  2480     02F8  0873               	movf	___awmod@dividend+1,w
  2481     02F9  00F1               	movwf	?___awmod+1
  2482     02FA  0872               	movf	___awmod@dividend,w
  2483     02FB  00F0               	movwf	?___awmod
  2484     02FC                     l411:
  2485     02FC  0008               	return
  2486     02FD                     __end_of___awmod:
  2487                           
  2488                           	psect	text12
  2489     02FD                     __ptext12:	
  2490 ;; *************** function ___awdiv *****************
  2491 ;; Defined at:
  2492 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
  2493 ;; Parameters:    Size  Location     Type
  2494 ;;  divisor         2    0[COMMON] int 
  2495 ;;  dividend        2    2[COMMON] int 
  2496 ;; Auto vars:     Size  Location     Type
  2497 ;;  quotient        2    6[COMMON] int 
  2498 ;;  sign            1    5[COMMON] unsigned char 
  2499 ;;  counter         1    4[COMMON] unsigned char 
  2500 ;; Return value:  Size  Location     Type
  2501 ;;                  2    0[COMMON] int 
  2502 ;; Registers used:
  2503 ;;		wreg, status,2, status,0, btemp+1
  2504 ;; Tracked objects:
  2505 ;;		On entry : 0/0
  2506 ;;		On exit  : 0/0
  2507 ;;		Unchanged: 0/0
  2508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2509 ;;      Params:         4       0       0       0       0
  2510 ;;      Locals:         4       0       0       0       0
  2511 ;;      Temps:          0       0       0       0       0
  2512 ;;      Totals:         8       0       0       0       0
  2513 ;;Total ram usage:        8 bytes
  2514 ;; Hardware stack levels used: 1
  2515 ;; This function calls:
  2516 ;;		Nothing
  2517 ;; This function is called by:
  2518 ;;		_main
  2519 ;;		_dec_2_bcd
  2520 ;; This function uses a non-reentrant model
  2521 ;;
  2522                           
  2523     02FD                     ___awdiv:	
  2524                           ;psect for function ___awdiv
  2525                           
  2526     02FD                     l1075:	
  2527                           ;incstack = 0
  2528                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  2529                           
  2530     02FD  01F5               	clrf	___awdiv@sign
  2531     02FE                     l1077:
  2532     02FE  1FF1               	btfss	___awdiv@divisor+1,7
  2533     02FF  2B01               	goto	u681
  2534     0300  2B02               	goto	u680
  2535     0301                     u681:
  2536     0301  2B09               	goto	l1083
  2537     0302                     u680:
  2538     0302                     l1079:
  2539     0302  09F0               	comf	___awdiv@divisor,f
  2540     0303  09F1               	comf	___awdiv@divisor+1,f
  2541     0304  0AF0               	incf	___awdiv@divisor,f
  2542     0305  1903               	skipnz
  2543     0306  0AF1               	incf	___awdiv@divisor+1,f
  2544     0307                     l1081:
  2545     0307  01F5               	clrf	___awdiv@sign
  2546     0308  0AF5               	incf	___awdiv@sign,f
  2547     0309                     l1083:
  2548     0309  1FF3               	btfss	___awdiv@dividend+1,7
  2549     030A  2B0C               	goto	u691
  2550     030B  2B0D               	goto	u690
  2551     030C                     u691:
  2552     030C  2B16               	goto	l1089
  2553     030D                     u690:
  2554     030D                     l1085:
  2555     030D  09F2               	comf	___awdiv@dividend,f
  2556     030E  09F3               	comf	___awdiv@dividend+1,f
  2557     030F  0AF2               	incf	___awdiv@dividend,f
  2558     0310  1903               	skipnz
  2559     0311  0AF3               	incf	___awdiv@dividend+1,f
  2560     0312                     l1087:
  2561     0312  3001               	movlw	1
  2562     0313  00FF               	movwf	btemp+1
  2563     0314  087F               	movf	btemp+1,w
  2564     0315  06F5               	xorwf	___awdiv@sign,f
  2565     0316                     l1089:
  2566     0316  01F6               	clrf	___awdiv@quotient
  2567     0317  01F7               	clrf	___awdiv@quotient+1
  2568     0318                     l1091:
  2569     0318  0870               	movf	___awdiv@divisor,w
  2570     0319  0471               	iorwf	___awdiv@divisor+1,w
  2571     031A  1903               	btfsc	3,2
  2572     031B  2B1D               	goto	u701
  2573     031C  2B1E               	goto	u700
  2574     031D                     u701:
  2575     031D  2B55               	goto	l1111
  2576     031E                     u700:
  2577     031E                     l1093:
  2578     031E  01F4               	clrf	___awdiv@counter
  2579     031F  0AF4               	incf	___awdiv@counter,f
  2580     0320  2B2C               	goto	l1099
  2581     0321                     l1095:
  2582     0321  3001               	movlw	1
  2583     0322                     u715:
  2584     0322  1003               	clrc
  2585     0323  0DF0               	rlf	___awdiv@divisor,f
  2586     0324  0DF1               	rlf	___awdiv@divisor+1,f
  2587     0325  3EFF               	addlw	-1
  2588     0326  1D03               	skipz
  2589     0327  2B22               	goto	u715
  2590     0328                     l1097:
  2591     0328  3001               	movlw	1
  2592     0329  00FF               	movwf	btemp+1
  2593     032A  087F               	movf	btemp+1,w
  2594     032B  07F4               	addwf	___awdiv@counter,f
  2595     032C                     l1099:
  2596     032C  1FF1               	btfss	___awdiv@divisor+1,7
  2597     032D  2B2F               	goto	u721
  2598     032E  2B30               	goto	u720
  2599     032F                     u721:
  2600     032F  2B21               	goto	l1095
  2601     0330                     u720:
  2602     0330                     l1101:
  2603     0330  3001               	movlw	1
  2604     0331                     u735:
  2605     0331  1003               	clrc
  2606     0332  0DF6               	rlf	___awdiv@quotient,f
  2607     0333  0DF7               	rlf	___awdiv@quotient+1,f
  2608     0334  3EFF               	addlw	-1
  2609     0335  1D03               	skipz
  2610     0336  2B31               	goto	u735
  2611     0337  0871               	movf	___awdiv@divisor+1,w
  2612     0338  0273               	subwf	___awdiv@dividend+1,w
  2613     0339  1D03               	skipz
  2614     033A  2B3D               	goto	u745
  2615     033B  0870               	movf	___awdiv@divisor,w
  2616     033C  0272               	subwf	___awdiv@dividend,w
  2617     033D                     u745:
  2618     033D  1C03               	skipc
  2619     033E  2B40               	goto	u741
  2620     033F  2B41               	goto	u740
  2621     0340                     u741:
  2622     0340  2B48               	goto	l1107
  2623     0341                     u740:
  2624     0341                     l1103:
  2625     0341  0870               	movf	___awdiv@divisor,w
  2626     0342  02F2               	subwf	___awdiv@dividend,f
  2627     0343  0871               	movf	___awdiv@divisor+1,w
  2628     0344  1C03               	skipc
  2629     0345  03F3               	decf	___awdiv@dividend+1,f
  2630     0346  02F3               	subwf	___awdiv@dividend+1,f
  2631     0347                     l1105:
  2632     0347  1476               	bsf	___awdiv@quotient,0
  2633     0348                     l1107:
  2634     0348  3001               	movlw	1
  2635     0349                     u755:
  2636     0349  1003               	clrc
  2637     034A  0CF1               	rrf	___awdiv@divisor+1,f
  2638     034B  0CF0               	rrf	___awdiv@divisor,f
  2639     034C  3EFF               	addlw	-1
  2640     034D  1D03               	skipz
  2641     034E  2B49               	goto	u755
  2642     034F                     l1109:
  2643     034F  3001               	movlw	1
  2644     0350  02F4               	subwf	___awdiv@counter,f
  2645     0351  1D03               	btfss	3,2
  2646     0352  2B54               	goto	u761
  2647     0353  2B55               	goto	u760
  2648     0354                     u761:
  2649     0354  2B30               	goto	l1101
  2650     0355                     u760:
  2651     0355                     l1111:
  2652     0355  0875               	movf	___awdiv@sign,w
  2653     0356  1903               	btfsc	3,2
  2654     0357  2B59               	goto	u771
  2655     0358  2B5A               	goto	u770
  2656     0359                     u771:
  2657     0359  2B5F               	goto	l1115
  2658     035A                     u770:
  2659     035A                     l1113:
  2660     035A  09F6               	comf	___awdiv@quotient,f
  2661     035B  09F7               	comf	___awdiv@quotient+1,f
  2662     035C  0AF6               	incf	___awdiv@quotient,f
  2663     035D  1903               	skipnz
  2664     035E  0AF7               	incf	___awdiv@quotient+1,f
  2665     035F                     l1115:
  2666     035F  0877               	movf	___awdiv@quotient+1,w
  2667     0360  00F1               	movwf	?___awdiv+1
  2668     0361  0876               	movf	___awdiv@quotient,w
  2669     0362  00F0               	movwf	?___awdiv
  2670     0363                     l398:
  2671     0363  0008               	return
  2672     0364                     __end_of___awdiv:
  2673                           
  2674                           	psect	text13
  2675     0108                     __ptext13:	
  2676 ;; *************** function _lcd_data *****************
  2677 ;; Defined at:
  2678 ;;		line 116 in file "RTC_task.c"
  2679 ;; Parameters:    Size  Location     Type
  2680 ;;  data            1    wreg     unsigned char 
  2681 ;; Auto vars:     Size  Location     Type
  2682 ;;  data            1    2[COMMON] unsigned char 
  2683 ;; Return value:  Size  Location     Type
  2684 ;;                  1    wreg      void 
  2685 ;; Registers used:
  2686 ;;		wreg
  2687 ;; Tracked objects:
  2688 ;;		On entry : 0/0
  2689 ;;		On exit  : 0/0
  2690 ;;		Unchanged: 0/0
  2691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2692 ;;      Params:         0       0       0       0       0
  2693 ;;      Locals:         1       0       0       0       0
  2694 ;;      Temps:          2       0       0       0       0
  2695 ;;      Totals:         3       0       0       0       0
  2696 ;;Total ram usage:        3 bytes
  2697 ;; Hardware stack levels used: 1
  2698 ;; This function calls:
  2699 ;;		Nothing
  2700 ;; This function is called by:
  2701 ;;		_main
  2702 ;; This function uses a non-reentrant model
  2703 ;;
  2704                           
  2705     0108                     _lcd_data:	
  2706                           ;psect for function _lcd_data
  2707                           
  2708                           
  2709                           ;incstack = 0
  2710                           ; Regs used in _lcd_data: [wreg]
  2711                           ;lcd_data@data stored from wreg
  2712     0108  00F2               	movwf	lcd_data@data
  2713     0109                     l1323:
  2714                           
  2715                           ;RTC_task.c: 117:     RC2 = 1;
  2716     0109  1283               	bcf	3,5	;RP0=0, select bank0
  2717     010A  1303               	bcf	3,6	;RP1=0, select bank0
  2718     010B  1507               	bsf	7,2	;volatile
  2719     010C                     l1325:
  2720                           
  2721                           ;RTC_task.c: 118:     PORTD = data;
  2722     010C  0872               	movf	lcd_data@data,w
  2723     010D  0088               	movwf	8	;volatile
  2724     010E                     l1327:
  2725                           
  2726                           ;RTC_task.c: 119:     RC1 = 1;
  2727     010E  1487               	bsf	7,1	;volatile
  2728                           
  2729                           ;RTC_task.c: 120:     _delay((unsigned long)((1)*(20000000/4000.0)));
  2730     010F  3007               	movlw	7
  2731     0110  00F1               	movwf	??_lcd_data+1
  2732     0111  307D               	movlw	125
  2733     0112  00F0               	movwf	??_lcd_data
  2734     0113                     u1247:
  2735     0113  0BF0               	decfsz	??_lcd_data,f
  2736     0114  2913               	goto	u1247
  2737     0115  0BF1               	decfsz	??_lcd_data+1,f
  2738     0116  2913               	goto	u1247
  2739     0117                     l1329:
  2740                           
  2741                           ;RTC_task.c: 121:     RC1 = 0;
  2742     0117  1283               	bcf	3,5	;RP0=0, select bank0
  2743     0118  1303               	bcf	3,6	;RP1=0, select bank0
  2744     0119  1087               	bcf	7,1	;volatile
  2745                           
  2746                           ;RTC_task.c: 122:     _delay((unsigned long)((5)*(20000000/4000.0)));
  2747     011A  3021               	movlw	33
  2748     011B  00F1               	movwf	??_lcd_data+1
  2749     011C  3076               	movlw	118
  2750     011D  00F0               	movwf	??_lcd_data
  2751     011E                     u1257:
  2752     011E  0BF0               	decfsz	??_lcd_data,f
  2753     011F  291E               	goto	u1257
  2754     0120  0BF1               	decfsz	??_lcd_data+1,f
  2755     0121  291E               	goto	u1257
  2756     0122  0000               	nop
  2757     0123                     l111:
  2758     0123  0008               	return
  2759     0124                     __end_of_lcd_data:
  2760                           
  2761                           	psect	text14
  2762     01CB                     __ptext14:	
  2763 ;; *************** function _init *****************
  2764 ;; Defined at:
  2765 ;;		line 93 in file "RTC_task.c"
  2766 ;; Parameters:    Size  Location     Type
  2767 ;;		None
  2768 ;; Auto vars:     Size  Location     Type
  2769 ;;		None
  2770 ;; Return value:  Size  Location     Type
  2771 ;;                  1    wreg      void 
  2772 ;; Registers used:
  2773 ;;		wreg, status,2, status,0, pclath, cstack
  2774 ;; Tracked objects:
  2775 ;;		On entry : 0/0
  2776 ;;		On exit  : 0/0
  2777 ;;		Unchanged: 0/0
  2778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2779 ;;      Params:         0       0       0       0       0
  2780 ;;      Locals:         0       0       0       0       0
  2781 ;;      Temps:          2       0       0       0       0
  2782 ;;      Totals:         2       0       0       0       0
  2783 ;;Total ram usage:        2 bytes
  2784 ;; Hardware stack levels used: 1
  2785 ;; Hardware stack levels required when called: 1
  2786 ;; This function calls:
  2787 ;;		_lcd_command
  2788 ;; This function is called by:
  2789 ;;		_main
  2790 ;; This function uses a non-reentrant model
  2791 ;;
  2792                           
  2793     01CB                     _init:	
  2794                           ;psect for function _init
  2795                           
  2796     01CB                     l1241:	
  2797                           ;incstack = 0
  2798                           ; Regs used in _init: [wreg+status,2+status,0+pclath+cstack]
  2799                           
  2800                           
  2801                           ;RTC_task.c: 94:     TRISD = 0x00;
  2802     01CB  1683               	bsf	3,5	;RP0=1, select bank1
  2803     01CC  1303               	bcf	3,6	;RP1=0, select bank1
  2804     01CD  0188               	clrf	8	;volatile
  2805     01CE                     l1243:
  2806                           
  2807                           ;RTC_task.c: 95:     TRISC = 0x18;
  2808     01CE  3018               	movlw	24
  2809     01CF  0087               	movwf	7	;volatile
  2810     01D0                     l1245:
  2811                           
  2812                           ;RTC_task.c: 96:     PORTD = 0x00;
  2813     01D0  1283               	bcf	3,5	;RP0=0, select bank0
  2814     01D1  1303               	bcf	3,6	;RP1=0, select bank0
  2815     01D2  0188               	clrf	8	;volatile
  2816     01D3                     l1247:
  2817                           
  2818                           ;RTC_task.c: 97:     lcd_command(0x38);
  2819     01D3  3038               	movlw	56
  2820     01D4  120A  118A  20EC  120A  118A  	fcall	_lcd_command
  2821     01D9                     l1249:
  2822                           
  2823                           ;RTC_task.c: 98:     _delay((unsigned long)((5)*(20000000/4000.0)));
  2824     01D9  3021               	movlw	33
  2825     01DA  00F4               	movwf	??_init+1
  2826     01DB  3076               	movlw	118
  2827     01DC  00F3               	movwf	??_init
  2828     01DD                     u1267:
  2829     01DD  0BF3               	decfsz	??_init,f
  2830     01DE  29DD               	goto	u1267
  2831     01DF  0BF4               	decfsz	??_init+1,f
  2832     01E0  29DD               	goto	u1267
  2833     01E1  0000               	nop
  2834                           
  2835                           ;RTC_task.c: 99:     lcd_command(0x0C);
  2836     01E2  300C               	movlw	12
  2837     01E3  120A  118A  20EC  120A  118A  	fcall	_lcd_command
  2838     01E8                     l1251:
  2839                           
  2840                           ;RTC_task.c: 100:     _delay((unsigned long)((5)*(20000000/4000.0)));
  2841     01E8  3021               	movlw	33
  2842     01E9  00F4               	movwf	??_init+1
  2843     01EA  3076               	movlw	118
  2844     01EB  00F3               	movwf	??_init
  2845     01EC                     u1277:
  2846     01EC  0BF3               	decfsz	??_init,f
  2847     01ED  29EC               	goto	u1277
  2848     01EE  0BF4               	decfsz	??_init+1,f
  2849     01EF  29EC               	goto	u1277
  2850     01F0  0000               	nop
  2851     01F1                     l1253:
  2852                           
  2853                           ;RTC_task.c: 101:     lcd_command(0x06);
  2854     01F1  3006               	movlw	6
  2855     01F2  120A  118A  20EC  120A  118A  	fcall	_lcd_command
  2856                           
  2857                           ;RTC_task.c: 102:     _delay((unsigned long)((5)*(20000000/4000.0)));
  2858     01F7  3021               	movlw	33
  2859     01F8  00F4               	movwf	??_init+1
  2860     01F9  3076               	movlw	118
  2861     01FA  00F3               	movwf	??_init
  2862     01FB                     u1287:
  2863     01FB  0BF3               	decfsz	??_init,f
  2864     01FC  29FB               	goto	u1287
  2865     01FD  0BF4               	decfsz	??_init+1,f
  2866     01FE  29FB               	goto	u1287
  2867     01FF  0000               	nop
  2868     0200                     l1255:
  2869                           
  2870                           ;RTC_task.c: 103:     lcd_command(0x01);
  2871     0200  3001               	movlw	1
  2872     0201  120A  118A  20EC  120A  118A  	fcall	_lcd_command
  2873     0206                     l1257:
  2874                           
  2875                           ;RTC_task.c: 104:     _delay((unsigned long)((5)*(20000000/4000.0)));
  2876     0206  3021               	movlw	33
  2877     0207  00F4               	movwf	??_init+1
  2878     0208  3076               	movlw	118
  2879     0209  00F3               	movwf	??_init
  2880     020A                     u1297:
  2881     020A  0BF3               	decfsz	??_init,f
  2882     020B  2A0A               	goto	u1297
  2883     020C  0BF4               	decfsz	??_init+1,f
  2884     020D  2A0A               	goto	u1297
  2885     020E  0000               	nop
  2886     020F                     l105:
  2887     020F  0008               	return
  2888     0210                     __end_of_init:
  2889                           
  2890                           	psect	text15
  2891     00EC                     __ptext15:	
  2892 ;; *************** function _lcd_command *****************
  2893 ;; Defined at:
  2894 ;;		line 107 in file "RTC_task.c"
  2895 ;; Parameters:    Size  Location     Type
  2896 ;;  cmd             1    wreg     unsigned char 
  2897 ;; Auto vars:     Size  Location     Type
  2898 ;;  cmd             1    2[COMMON] unsigned char 
  2899 ;; Return value:  Size  Location     Type
  2900 ;;                  1    wreg      void 
  2901 ;; Registers used:
  2902 ;;		wreg
  2903 ;; Tracked objects:
  2904 ;;		On entry : 0/0
  2905 ;;		On exit  : 0/0
  2906 ;;		Unchanged: 0/0
  2907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2908 ;;      Params:         0       0       0       0       0
  2909 ;;      Locals:         1       0       0       0       0
  2910 ;;      Temps:          2       0       0       0       0
  2911 ;;      Totals:         3       0       0       0       0
  2912 ;;Total ram usage:        3 bytes
  2913 ;; Hardware stack levels used: 1
  2914 ;; This function calls:
  2915 ;;		Nothing
  2916 ;; This function is called by:
  2917 ;;		_main
  2918 ;;		_init
  2919 ;; This function uses a non-reentrant model
  2920 ;;
  2921                           
  2922     00EC                     _lcd_command:	
  2923                           ;psect for function _lcd_command
  2924                           
  2925                           
  2926                           ;incstack = 0
  2927                           ; Regs used in _lcd_command: [wreg]
  2928                           ;lcd_command@cmd stored from wreg
  2929     00EC  00F2               	movwf	lcd_command@cmd
  2930     00ED                     l1157:
  2931                           
  2932                           ;RTC_task.c: 108:     RC2 = 0;
  2933     00ED  1283               	bcf	3,5	;RP0=0, select bank0
  2934     00EE  1303               	bcf	3,6	;RP1=0, select bank0
  2935     00EF  1107               	bcf	7,2	;volatile
  2936     00F0                     l1159:
  2937                           
  2938                           ;RTC_task.c: 109:     PORTD = cmd;
  2939     00F0  0872               	movf	lcd_command@cmd,w
  2940     00F1  0088               	movwf	8	;volatile
  2941     00F2                     l1161:
  2942                           
  2943                           ;RTC_task.c: 110:     RC1 = 1;
  2944     00F2  1487               	bsf	7,1	;volatile
  2945                           
  2946                           ;RTC_task.c: 111:     _delay((unsigned long)((1)*(20000000/4000.0)));
  2947     00F3  3007               	movlw	7
  2948     00F4  00F1               	movwf	??_lcd_command+1
  2949     00F5  307D               	movlw	125
  2950     00F6  00F0               	movwf	??_lcd_command
  2951     00F7                     u1307:
  2952     00F7  0BF0               	decfsz	??_lcd_command,f
  2953     00F8  28F7               	goto	u1307
  2954     00F9  0BF1               	decfsz	??_lcd_command+1,f
  2955     00FA  28F7               	goto	u1307
  2956     00FB                     l1163:
  2957                           
  2958                           ;RTC_task.c: 112:     RC1 = 0;
  2959     00FB  1283               	bcf	3,5	;RP0=0, select bank0
  2960     00FC  1303               	bcf	3,6	;RP1=0, select bank0
  2961     00FD  1087               	bcf	7,1	;volatile
  2962                           
  2963                           ;RTC_task.c: 113:     _delay((unsigned long)((5)*(20000000/4000.0)));
  2964     00FE  3021               	movlw	33
  2965     00FF  00F1               	movwf	??_lcd_command+1
  2966     0100  3076               	movlw	118
  2967     0101  00F0               	movwf	??_lcd_command
  2968     0102                     u1317:
  2969     0102  0BF0               	decfsz	??_lcd_command,f
  2970     0103  2902               	goto	u1317
  2971     0104  0BF1               	decfsz	??_lcd_command+1,f
  2972     0105  2902               	goto	u1317
  2973     0106  0000               	nop
  2974     0107                     l108:
  2975     0107  0008               	return
  2976     0108                     __end_of_lcd_command:
  2977                           
  2978                           	psect	text16
  2979     0256                     __ptext16:	
  2980 ;; *************** function _i2c_init *****************
  2981 ;; Defined at:
  2982 ;;		line 125 in file "RTC_task.c"
  2983 ;; Parameters:    Size  Location     Type
  2984 ;;  freq_k          4   13[BANK0 ] const unsigned long 
  2985 ;; Auto vars:     Size  Location     Type
  2986 ;;		None
  2987 ;; Return value:  Size  Location     Type
  2988 ;;                  1    wreg      void 
  2989 ;; Registers used:
  2990 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2991 ;; Tracked objects:
  2992 ;;		On entry : 0/0
  2993 ;;		On exit  : 0/0
  2994 ;;		Unchanged: 0/0
  2995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2996 ;;      Params:         0       4       0       0       0
  2997 ;;      Locals:         0       0       0       0       0
  2998 ;;      Temps:          0       4       0       0       0
  2999 ;;      Totals:         0       8       0       0       0
  3000 ;;Total ram usage:        8 bytes
  3001 ;; Hardware stack levels used: 1
  3002 ;; Hardware stack levels required when called: 1
  3003 ;; This function calls:
  3004 ;;		___lldiv
  3005 ;;		___lmul
  3006 ;; This function is called by:
  3007 ;;		_main
  3008 ;; This function uses a non-reentrant model
  3009 ;;
  3010                           
  3011     0256                     _i2c_init:	
  3012                           ;psect for function _i2c_init
  3013                           
  3014     0256                     l1259:	
  3015                           ;incstack = 0
  3016                           ; Regs used in _i2c_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3017                           
  3018                           
  3019                           ;RTC_task.c: 126:     SSPCON = 0x28;
  3020     0256  3028               	movlw	40
  3021     0257  1283               	bcf	3,5	;RP0=0, select bank0
  3022     0258  1303               	bcf	3,6	;RP1=0, select bank0
  3023     0259  0094               	movwf	20	;volatile
  3024     025A                     l1261:
  3025                           
  3026                           ;RTC_task.c: 127:     SSPSTAT = 0x00;
  3027     025A  1683               	bsf	3,5	;RP0=1, select bank1
  3028     025B  1303               	bcf	3,6	;RP1=0, select bank1
  3029     025C  0194               	clrf	20	;volatile
  3030     025D                     l1263:
  3031                           
  3032                           ;RTC_task.c: 128:     SSPADD = (20000000 / (4 * freq_k * 100)) - 1;
  3033     025D  1283               	bcf	3,5	;RP0=0, select bank0
  3034     025E  1303               	bcf	3,6	;RP1=0, select bank0
  3035     025F  082D               	movf	i2c_init@freq_k,w
  3036     0260  00B1               	movwf	??_i2c_init
  3037     0261  082E               	movf	i2c_init@freq_k+1,w
  3038     0262  00B2               	movwf	??_i2c_init+1
  3039     0263  082F               	movf	i2c_init@freq_k+2,w
  3040     0264  00B3               	movwf	??_i2c_init+2
  3041     0265  0830               	movf	i2c_init@freq_k+3,w
  3042     0266  00B4               	movwf	??_i2c_init+3
  3043     0267  3002               	movlw	2
  3044     0268                     u1015:
  3045     0268  1003               	clrc
  3046     0269  0DB1               	rlf	??_i2c_init,f
  3047     026A  0DB2               	rlf	??_i2c_init+1,f
  3048     026B  0DB3               	rlf	??_i2c_init+2,f
  3049     026C  0DB4               	rlf	??_i2c_init+3,f
  3050     026D                     u1010:
  3051     026D  3EFF               	addlw	-1
  3052     026E  1D03               	skipz
  3053     026F  2A68               	goto	u1015
  3054     0270  0834               	movf	??_i2c_init+3,w
  3055     0271  00F3               	movwf	___lmul@multiplier+3
  3056     0272  0833               	movf	??_i2c_init+2,w
  3057     0273  00F2               	movwf	___lmul@multiplier+2
  3058     0274  0832               	movf	??_i2c_init+1,w
  3059     0275  00F1               	movwf	___lmul@multiplier+1
  3060     0276  0831               	movf	??_i2c_init,w
  3061     0277  00F0               	movwf	___lmul@multiplier
  3062     0278  3000               	movlw	0
  3063     0279  00F7               	movwf	___lmul@multiplicand+3
  3064     027A  3000               	movlw	0
  3065     027B  00F6               	movwf	___lmul@multiplicand+2
  3066     027C  3000               	movlw	0
  3067     027D  00F5               	movwf	___lmul@multiplicand+1
  3068     027E  3064               	movlw	100
  3069     027F  00F4               	movwf	___lmul@multiplicand
  3070     0280  120A  118A  2210  120A  118A  	fcall	___lmul
  3071     0285  0873               	movf	?___lmul+3,w
  3072     0286  1283               	bcf	3,5	;RP0=0, select bank0
  3073     0287  1303               	bcf	3,6	;RP1=0, select bank0
  3074     0288  00A3               	movwf	___lldiv@divisor+3
  3075     0289  0872               	movf	?___lmul+2,w
  3076     028A  00A2               	movwf	___lldiv@divisor+2
  3077     028B  0871               	movf	?___lmul+1,w
  3078     028C  00A1               	movwf	___lldiv@divisor+1
  3079     028D  0870               	movf	?___lmul,w
  3080     028E  00A0               	movwf	___lldiv@divisor
  3081     028F  3001               	movlw	1
  3082     0290  00A7               	movwf	___lldiv@dividend+3
  3083     0291  3031               	movlw	49
  3084     0292  00A6               	movwf	___lldiv@dividend+2
  3085     0293  302D               	movlw	45
  3086     0294  00A5               	movwf	___lldiv@dividend+1
  3087     0295  3000               	movlw	0
  3088     0296  00A4               	movwf	___lldiv@dividend
  3089     0297  120A  118A  2364  120A  118A  	fcall	___lldiv
  3090     029C  1283               	bcf	3,5	;RP0=0, select bank0
  3091     029D  1303               	bcf	3,6	;RP1=0, select bank0
  3092     029E  0820               	movf	?___lldiv,w
  3093     029F  3EFF               	addlw	255
  3094     02A0  1683               	bsf	3,5	;RP0=1, select bank1
  3095     02A1  1303               	bcf	3,6	;RP1=0, select bank1
  3096     02A2  0093               	movwf	19	;volatile
  3097     02A3                     l114:
  3098     02A3  0008               	return
  3099     02A4                     __end_of_i2c_init:
  3100                           
  3101                           	psect	text17
  3102     0210                     __ptext17:	
  3103 ;; *************** function ___lmul *****************
  3104 ;; Defined at:
  3105 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul32.c"
  3106 ;; Parameters:    Size  Location     Type
  3107 ;;  multiplier      4    0[COMMON] unsigned long 
  3108 ;;  multiplicand    4    4[COMMON] unsigned long 
  3109 ;; Auto vars:     Size  Location     Type
  3110 ;;  product         4    9[COMMON] unsigned long 
  3111 ;; Return value:  Size  Location     Type
  3112 ;;                  4    0[COMMON] unsigned long 
  3113 ;; Registers used:
  3114 ;;		wreg, status,2, status,0
  3115 ;; Tracked objects:
  3116 ;;		On entry : 0/0
  3117 ;;		On exit  : 0/0
  3118 ;;		Unchanged: 0/0
  3119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3120 ;;      Params:         8       0       0       0       0
  3121 ;;      Locals:         4       0       0       0       0
  3122 ;;      Temps:          1       0       0       0       0
  3123 ;;      Totals:        13       0       0       0       0
  3124 ;;Total ram usage:       13 bytes
  3125 ;; Hardware stack levels used: 1
  3126 ;; This function calls:
  3127 ;;		Nothing
  3128 ;; This function is called by:
  3129 ;;		_i2c_init
  3130 ;; This function uses a non-reentrant model
  3131 ;;
  3132                           
  3133     0210                     ___lmul:	
  3134                           ;psect for function ___lmul
  3135                           
  3136     0210                     l1201:	
  3137                           ;incstack = 0
  3138                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  3139                           
  3140     0210  3000               	movlw	0
  3141     0211  00FC               	movwf	___lmul@product+3
  3142     0212  3000               	movlw	0
  3143     0213  00FB               	movwf	___lmul@product+2
  3144     0214  3000               	movlw	0
  3145     0215  00FA               	movwf	___lmul@product+1
  3146     0216  3000               	movlw	0
  3147     0217  00F9               	movwf	___lmul@product
  3148     0218                     l1203:
  3149     0218  1C70               	btfss	___lmul@multiplier,0
  3150     0219  2A1B               	goto	u891
  3151     021A  2A1C               	goto	u890
  3152     021B                     u891:
  3153     021B  2A33               	goto	l1207
  3154     021C                     u890:
  3155     021C                     l1205:
  3156     021C  0874               	movf	___lmul@multiplicand,w
  3157     021D  07F9               	addwf	___lmul@product,f
  3158     021E  0875               	movf	___lmul@multiplicand+1,w
  3159     021F  1103               	clrz
  3160     0220  1803               	skipnc
  3161     0221  3E01               	addlw	1
  3162     0222  1903               	skipnz
  3163     0223  2A25               	goto	u901
  3164     0224  07FA               	addwf	___lmul@product+1,f
  3165     0225                     u901:
  3166     0225  0876               	movf	___lmul@multiplicand+2,w
  3167     0226  1103               	clrz
  3168     0227  1803               	skipnc
  3169     0228  3E01               	addlw	1
  3170     0229  1903               	skipnz
  3171     022A  2A2C               	goto	u902
  3172     022B  07FB               	addwf	___lmul@product+2,f
  3173     022C                     u902:
  3174     022C  0877               	movf	___lmul@multiplicand+3,w
  3175     022D  1103               	clrz
  3176     022E  1803               	skipnc
  3177     022F  3E01               	addlw	1
  3178     0230  1903               	skipnz
  3179     0231  2A33               	goto	u903
  3180     0232  07FC               	addwf	___lmul@product+3,f
  3181     0233                     u903:
  3182     0233                     l1207:
  3183     0233  3001               	movlw	1
  3184     0234  00F8               	movwf	??___lmul
  3185     0235                     u915:
  3186     0235  1003               	clrc
  3187     0236  0DF4               	rlf	___lmul@multiplicand,f
  3188     0237  0DF5               	rlf	___lmul@multiplicand+1,f
  3189     0238  0DF6               	rlf	___lmul@multiplicand+2,f
  3190     0239  0DF7               	rlf	___lmul@multiplicand+3,f
  3191     023A  0BF8               	decfsz	??___lmul,f
  3192     023B  2A35               	goto	u915
  3193     023C                     l1209:
  3194     023C  3001               	movlw	1
  3195     023D                     u925:
  3196     023D  1003               	clrc
  3197     023E  0CF3               	rrf	___lmul@multiplier+3,f
  3198     023F  0CF2               	rrf	___lmul@multiplier+2,f
  3199     0240  0CF1               	rrf	___lmul@multiplier+1,f
  3200     0241  0CF0               	rrf	___lmul@multiplier,f
  3201     0242  3EFF               	addlw	-1
  3202     0243  1D03               	skipz
  3203     0244  2A3D               	goto	u925
  3204     0245  0873               	movf	___lmul@multiplier+3,w
  3205     0246  0472               	iorwf	___lmul@multiplier+2,w
  3206     0247  0471               	iorwf	___lmul@multiplier+1,w
  3207     0248  0470               	iorwf	___lmul@multiplier,w
  3208     0249  1D03               	skipz
  3209     024A  2A4C               	goto	u931
  3210     024B  2A4D               	goto	u930
  3211     024C                     u931:
  3212     024C  2A18               	goto	l1203
  3213     024D                     u930:
  3214     024D                     l1211:
  3215     024D  087C               	movf	___lmul@product+3,w
  3216     024E  00F3               	movwf	?___lmul+3
  3217     024F  087B               	movf	___lmul@product+2,w
  3218     0250  00F2               	movwf	?___lmul+2
  3219     0251  087A               	movf	___lmul@product+1,w
  3220     0252  00F1               	movwf	?___lmul+1
  3221     0253  0879               	movf	___lmul@product,w
  3222     0254  00F0               	movwf	?___lmul
  3223     0255                     l259:
  3224     0255  0008               	return
  3225     0256                     __end_of___lmul:
  3226                           
  3227                           	psect	text18
  3228     0364                     __ptext18:	
  3229 ;; *************** function ___lldiv *****************
  3230 ;; Defined at:
  3231 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\__lldiv.c"
  3232 ;; Parameters:    Size  Location     Type
  3233 ;;  divisor         4    0[BANK0 ] unsigned long 
  3234 ;;  dividend        4    4[BANK0 ] unsigned long 
  3235 ;; Auto vars:     Size  Location     Type
  3236 ;;  quotient        4    8[BANK0 ] unsigned long 
  3237 ;;  counter         1   12[BANK0 ] unsigned char 
  3238 ;; Return value:  Size  Location     Type
  3239 ;;                  4    0[BANK0 ] unsigned long 
  3240 ;; Registers used:
  3241 ;;		wreg, status,2, status,0, btemp+1
  3242 ;; Tracked objects:
  3243 ;;		On entry : 0/0
  3244 ;;		On exit  : 0/0
  3245 ;;		Unchanged: 0/0
  3246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3247 ;;      Params:         0       8       0       0       0
  3248 ;;      Locals:         0       5       0       0       0
  3249 ;;      Temps:          1       0       0       0       0
  3250 ;;      Totals:         1      13       0       0       0
  3251 ;;Total ram usage:       14 bytes
  3252 ;; Hardware stack levels used: 1
  3253 ;; This function calls:
  3254 ;;		Nothing
  3255 ;; This function is called by:
  3256 ;;		_i2c_init
  3257 ;; This function uses a non-reentrant model
  3258 ;;
  3259                           
  3260     0364                     ___lldiv:	
  3261                           ;psect for function ___lldiv
  3262                           
  3263     0364                     l1215:	
  3264                           ;incstack = 0
  3265                           ; Regs used in ___lldiv: [wreg+status,2+status,0+btemp+1]
  3266                           
  3267     0364  3000               	movlw	0
  3268     0365  1283               	bcf	3,5	;RP0=0, select bank0
  3269     0366  1303               	bcf	3,6	;RP1=0, select bank0
  3270     0367  00AB               	movwf	___lldiv@quotient+3
  3271     0368  3000               	movlw	0
  3272     0369  00AA               	movwf	___lldiv@quotient+2
  3273     036A  3000               	movlw	0
  3274     036B  00A9               	movwf	___lldiv@quotient+1
  3275     036C  3000               	movlw	0
  3276     036D  00A8               	movwf	___lldiv@quotient
  3277     036E  0823               	movf	___lldiv@divisor+3,w
  3278     036F  0422               	iorwf	___lldiv@divisor+2,w
  3279     0370  0421               	iorwf	___lldiv@divisor+1,w
  3280     0371  0420               	iorwf	___lldiv@divisor,w
  3281     0372  1903               	skipnz
  3282     0373  2B75               	goto	u941
  3283     0374  2B76               	goto	u940
  3284     0375                     u941:
  3285     0375  2BC3               	goto	l1237
  3286     0376                     u940:
  3287     0376                     l1217:
  3288     0376  01AC               	clrf	___lldiv@counter
  3289     0377  0AAC               	incf	___lldiv@counter,f
  3290     0378  2B86               	goto	l1223
  3291     0379                     l1219:
  3292     0379  3001               	movlw	1
  3293     037A  00FD               	movwf	??___lldiv
  3294     037B                     u955:
  3295     037B  1003               	clrc
  3296     037C  0DA0               	rlf	___lldiv@divisor,f
  3297     037D  0DA1               	rlf	___lldiv@divisor+1,f
  3298     037E  0DA2               	rlf	___lldiv@divisor+2,f
  3299     037F  0DA3               	rlf	___lldiv@divisor+3,f
  3300     0380  0BFD               	decfsz	??___lldiv,f
  3301     0381  2B7B               	goto	u955
  3302     0382                     l1221:
  3303     0382  3001               	movlw	1
  3304     0383  00FF               	movwf	btemp+1
  3305     0384  087F               	movf	btemp+1,w
  3306     0385  07AC               	addwf	___lldiv@counter,f
  3307     0386                     l1223:
  3308     0386  1FA3               	btfss	___lldiv@divisor+3,7
  3309     0387  2B89               	goto	u961
  3310     0388  2B8A               	goto	u960
  3311     0389                     u961:
  3312     0389  2B79               	goto	l1219
  3313     038A                     u960:
  3314     038A                     l1225:
  3315     038A  3001               	movlw	1
  3316     038B  00FD               	movwf	??___lldiv
  3317     038C                     u975:
  3318     038C  1003               	clrc
  3319     038D  0DA8               	rlf	___lldiv@quotient,f
  3320     038E  0DA9               	rlf	___lldiv@quotient+1,f
  3321     038F  0DAA               	rlf	___lldiv@quotient+2,f
  3322     0390  0DAB               	rlf	___lldiv@quotient+3,f
  3323     0391  0BFD               	decfsz	??___lldiv,f
  3324     0392  2B8C               	goto	u975
  3325     0393                     l1227:
  3326     0393  0823               	movf	___lldiv@divisor+3,w
  3327     0394  0227               	subwf	___lldiv@dividend+3,w
  3328     0395  1D03               	skipz
  3329     0396  2BA1               	goto	u985
  3330     0397  0822               	movf	___lldiv@divisor+2,w
  3331     0398  0226               	subwf	___lldiv@dividend+2,w
  3332     0399  1D03               	skipz
  3333     039A  2BA1               	goto	u985
  3334     039B  0821               	movf	___lldiv@divisor+1,w
  3335     039C  0225               	subwf	___lldiv@dividend+1,w
  3336     039D  1D03               	skipz
  3337     039E  2BA1               	goto	u985
  3338     039F  0820               	movf	___lldiv@divisor,w
  3339     03A0  0224               	subwf	___lldiv@dividend,w
  3340     03A1                     u985:
  3341     03A1  1C03               	skipc
  3342     03A2  2BA4               	goto	u981
  3343     03A3  2BA5               	goto	u980
  3344     03A4                     u981:
  3345     03A4  2BB4               	goto	l1233
  3346     03A5                     u980:
  3347     03A5                     l1229:
  3348     03A5  0820               	movf	___lldiv@divisor,w
  3349     03A6  02A4               	subwf	___lldiv@dividend,f
  3350     03A7  0821               	movf	___lldiv@divisor+1,w
  3351     03A8  1C03               	skipc
  3352     03A9  0F21               	incfsz	___lldiv@divisor+1,w
  3353     03AA  02A5               	subwf	___lldiv@dividend+1,f
  3354     03AB  0822               	movf	___lldiv@divisor+2,w
  3355     03AC  1C03               	skipc
  3356     03AD  0F22               	incfsz	___lldiv@divisor+2,w
  3357     03AE  02A6               	subwf	___lldiv@dividend+2,f
  3358     03AF  0823               	movf	___lldiv@divisor+3,w
  3359     03B0  1C03               	skipc
  3360     03B1  0F23               	incfsz	___lldiv@divisor+3,w
  3361     03B2  02A7               	subwf	___lldiv@dividend+3,f
  3362     03B3                     l1231:
  3363     03B3  1428               	bsf	___lldiv@quotient,0
  3364     03B4                     l1233:
  3365     03B4  3001               	movlw	1
  3366     03B5                     u995:
  3367     03B5  1003               	clrc
  3368     03B6  0CA3               	rrf	___lldiv@divisor+3,f
  3369     03B7  0CA2               	rrf	___lldiv@divisor+2,f
  3370     03B8  0CA1               	rrf	___lldiv@divisor+1,f
  3371     03B9  0CA0               	rrf	___lldiv@divisor,f
  3372     03BA  3EFF               	addlw	-1
  3373     03BB  1D03               	skipz
  3374     03BC  2BB5               	goto	u995
  3375     03BD                     l1235:
  3376     03BD  3001               	movlw	1
  3377     03BE  02AC               	subwf	___lldiv@counter,f
  3378     03BF  1D03               	btfss	3,2
  3379     03C0  2BC2               	goto	u1001
  3380     03C1  2BC3               	goto	u1000
  3381     03C2                     u1001:
  3382     03C2  2B8A               	goto	l1225
  3383     03C3                     u1000:
  3384     03C3                     l1237:
  3385     03C3  082B               	movf	___lldiv@quotient+3,w
  3386     03C4  00A3               	movwf	?___lldiv+3
  3387     03C5  082A               	movf	___lldiv@quotient+2,w
  3388     03C6  00A2               	movwf	?___lldiv+2
  3389     03C7  0829               	movf	___lldiv@quotient+1,w
  3390     03C8  00A1               	movwf	?___lldiv+1
  3391     03C9  0828               	movf	___lldiv@quotient,w
  3392     03CA  00A0               	movwf	?___lldiv
  3393     03CB                     l281:
  3394     03CB  0008               	return
  3395     03CC                     __end_of___lldiv:
  3396     007E                     btemp	set	126	;btemp
  3397     007E                     wtemp0	set	126
  3398                           
  3399                           	psect	config
  3400                           
  3401                           ;Config register CONFIG @ 0x2007
  3402                           ;	Oscillator Selection bits
  3403                           ;	FOSC = HS, HS oscillator
  3404                           ;	Watchdog Timer Enable bit
  3405                           ;	WDTE = OFF, WDT disabled
  3406                           ;	Power-up Timer Enable bit
  3407                           ;	PWRTE = ON, PWRT enabled
  3408                           ;	Brown-out Reset Enable bit
  3409                           ;	BOREN = ON, BOR enabled
  3410                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  3411                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  3412                           ;	Data EEPROM Memory Code Protection bit
  3413                           ;	CPD = OFF, Data EEPROM code protection off
  3414                           ;	Flash Program Memory Write Enable bits
  3415                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  3416                           ;	In-Circuit Debugger Mode bit
  3417                           ;	DEBUG = 0x1, unprogrammed default
  3418                           ;	Flash Program Memory Code Protection bit
  3419                           ;	CP = OFF, Code protection off
  3420     2007                     	org	8199
  3421     2007  3F72               	dw	16242

Data Sizes:
    Strings     0
    Constant    0
    Data        23
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     30      65
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _update->_bcd_2_dec
    _bcd_2_dec->___wmul
    _bcd_2_dec->_i2c_read
    _settime->_dec_2_bcd
    _dec_2_bcd->___awdiv
    _init->_lcd_command
    _i2c_init->___lldiv
    ___lldiv->___lmul

Critical Paths under _main in BANK0

    _main->_i2c_init
    _i2c_init->___lldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0    8195
                                             21 BANK0      9     9      0
                            ___awdiv
                            ___awmod
                           _i2c_init
                               _init
                        _lcd_command
                           _lcd_data
                            _settime
                             _update
 ---------------------------------------------------------------------------------
 (1) _update                                               2     2      0    1343
                                             10 COMMON     2     2      0
                          _bcd_2_dec
                           _i2c_read
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _i2c_read                                             6     4      2     577
                                              0 COMMON     6     4      2
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (2) _bcd_2_dec                                            4     2      2     744
                                              6 COMMON     4     2      2
                             ___wmul
                           _i2c_read (ARG)
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _settime                                              0     0      0    3246
                          _dec_2_bcd
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _i2c_write                                            1     1      0      22
                                              0 COMMON     1     1      0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (2) _i2c_stop                                             0     0      0       0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (2) _i2c_start                                            0     0      0       0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (3) _i2c_wait                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _dec_2_bcd                                            4     2      2    3224
                                              8 COMMON     4     2      2
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1360
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1364
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _lcd_data                                             3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _init                                                 2     2      0      22
                                              3 COMMON     2     2      0
                        _lcd_command
 ---------------------------------------------------------------------------------
 (1) _lcd_command                                          3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _i2c_init                                             8     4      4     656
                                             13 BANK0      8     4      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              13     5      8     244
                                              0 COMMON    13     5      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                             13 COMMON     1     1      0
                                              0 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   ___awmod
   _i2c_init
     ___lldiv
       ___lmul (ARG)
     ___lmul
   _init
     _lcd_command
   _lcd_command
   _lcd_data
   _settime
     _dec_2_bcd
       ___awdiv
       ___awmod
     _i2c_start
       _i2c_wait
     _i2c_stop
       _i2c_wait
     _i2c_write
       _i2c_wait
   _update
     _bcd_2_dec
       ___wmul
       _i2c_read (ARG)
         _i2c_wait
     _i2c_read
     _i2c_start
     _i2c_stop
     _i2c_write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     1E      41       5       81.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      4F      12        0.0%
ABS                  0      0      4F       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Tue Nov 19 01:26:47 2024

                      pc 0002             lcd_data@data 0072             ___awdiv@sign 0075  
                     fsr 0004      ___wmul@multiplicand 0072                      l111 0123  
                    l120 00C1                      l105 020F                      l114 02A3  
                    l123 00A0                      l108 0107                      l132 019A  
                    l141 044F                      l126 00A9                      l135 01CA  
                    l129 00B4                      l145 05E4                      l138 016D  
                    l411 02FC                      l245 0130                      l149 05E3  
                    l247 0148                      l159 05E6                      l281 03CB  
                    l259 0255                      l398 0363                      _RC1 0039  
                    _RC2 003A                      _PEN 048A                      u700 031E  
                    u620 00BD                      u701 031D                      u621 00BC  
                    u630 00C1                      u631 00C0                      u720 0330  
                    u800 02BF                      u640 012A                      u721 032F  
                    u801 02BE                      u641 0129                      u715 0322  
                    u740 0341                      u820 02D1                      _SEN 0488  
                    u901 0225                      u741 0340                      u821 02D0  
                    u902 022C                      u830 02DB                      u670 0144  
                    u903 0233                      u735 0331                      u831 02DA  
                    u815 02C3                      u671 0143                      u655 0131  
                    u760 0355                      u680 0302                      u761 0354  
                    u745 033D                      u681 0301                      u665 0138  
                    u930 024D                      u770 035A                      u690 030D  
                    u850 02EE                      u931 024C                      u915 0235  
                    u771 0359                      u755 0349                      u691 030C  
                    u851 02ED                      u835 02D7                      u940 0376  
                    u860 02F3                      u780 02A9                      u941 0375  
                    u925 023D                      u861 02F2                      u845 02E2  
                    u781 02A8                      u790 02B4                      u870 0192  
                    u791 02B3                      u871 018E                      u960 038A  
                    u961 0389                      u890 021C                      u955 037B  
                    u891 021B                      u980 03A5                      u884 0195  
                    u981 03A4                      u975 038C                      u985 03A1  
                    u995 03B5                      _min 0050                      _sec 0052  
                    fsr0 0004                      indf 0000             ___awmod@sign 0075  
                   l1101 0330                     l1103 0341                     l1111 0355  
                   l1201 0210                     l1113 035A                     l1105 0347  
                   l1121 02A5                     l1211 024D                     l1203 0218  
                   l1115 035F                     l1107 0348                     l1131 02B9  
                   l1123 02A9                     l1221 0382                     l1205 021C  
                   l1109 034F                     l1141 02D1                     l1133 02BF  
                   l1125 02AE                     l1061 0124                     l1301 0563  
                   l1231 03B3                     l1223 0386                     l1215 0364  
                   l1207 0233                     l1151 02F3                     l1143 02DB  
                   l1135 02C2                     l1127 02B0                     l1119 02A4  
                   l1055 00B5                     l1071 0144                     l1063 0126  
                   l1311 05A0                     l1303 0570                     l1233 03B4  
                   l1225 038A                     l1217 0376                     l1209 023C  
                   l1161 00F2                     l1241 01CB                     l1081 0307  
                   l1153 02F8                     l1145 02E1                     l1137 02C9  
                   l1129 02B4                     l1057 00B5                     l1065 012A  
                   l1321 05D6                     l1305 0579                     l1401 0780  
                   l1235 03BD                     l1227 0393                     l1219 0379  
                   l1163 00FB                     l1251 01E8                     l1243 01CE  
                   l1323 0109                     l1091 0318                     l1083 0309  
                   l1075 02FD                     l1147 02E8                     l1139 02CD  
                   l1059 00BD                     l1171 00A6                     l1067 0137  
                   l1307 0585                     l1315 05AE                     l1403 078D  
                   l1331 05E7                     l1229 03A5                     l1237 03C3  
                   l1261 025A                     l1157 00ED                     l1253 01F1  
                   l1245 01D0                     l1325 010C                     l1093 031E  
                   l1085 030D                     l1077 02FE                     l1149 02EE  
                   l1165 0098                     l1173 00AB                     l1069 013E  
                   l1181 017B                     l1317 05BD                     l1309 0592  
                   l1405 07CF                     l1341 0618                     l1333 05EC  
                   l1263 025D                     l1159 00F0                     l1255 0200  
                   l1247 01D3                     l1327 010E                     l1095 0321  
                   l1087 0312                     l1079 0302                     l1167 009D  
                   l1175 00B0                     l1271 03FF                     l1183 0184  
                   l1319 05C3                     l1351 066D                     l1343 0629  
                   l1335 05FB                     l1257 0206                     l1249 01D9  
                   l1329 0117                     l1097 0328                     l1089 0316  
                   l1193 019B                     l1169 00A1                     l1273 0411  
                   l1265 03CC                     l1185 0189                     l1177 016E  
                   l1281 0522                     l1361 06C2                     l1353 067E  
                   l1345 063A                     l1337 0600                     l1259 0256  
                   l1099 032C                     l1275 044A                     l1267 03DD  
                   l1187 0195                     l1179 0173                     l1291 053A  
                   l1283 0528                     l1371 06DD                     l1363 06D3  
                   l1355 068F                     l1347 064B                     l1339 0605  
                   l1269 03EE                     l1197 0149                     l1189 0196  
                   l1293 0541                     l1285 052E                     l1277 0450  
                   l1381 074D                     l1373 06E9                     l1365 06D9  
                   l1357 06A0                     l1349 065C                     l1295 0548  
                   l1287 0533                     l1279 0519                     l1391 0768  
                   l1383 0752                     l1375 06F1                     l1359 06B1  
                   l1297 054F                     l1289 0534                     l1385 0756  
                   l1377 06FE                     l1299 0556                     l1387 075C  
                   l1379 0746                     l1397 076C                     l1389 0762  
                   l1399 0778                     u1000 03C3                     u1001 03C2  
                   u1010 026D                     u1100 054F                     u1020 04C9  
                   u1101 054E                     u1021 04C7                     u1110 0556  
                   u1030 04CA                     u1015 0268                     u1111 0555  
                   u1120 0563                     u1040 0522                     u1200 06FE  
                   u1121 0562                     u1041 0521                     u1201 06FD  
                   u1130 0579                     u1050 0528                     u1210 074D  
                   u1131 0578                     u1051 0527                     u1211 074C  
                   u1140 0585                     u1060 052E                     u1220 078D  
                   u1141 0584                     u1125 055F                     u1061 052D  
                   u1221 078C                     u1205 06FA                     u1150 0592  
                   u1070 0533                     u1151 0591                     u1071 0532  
                   u1160 05A0                     u1080 0541                     u1161 059F  
                   u1081 0540                     u1225 0789                     u1170 05AD  
                   u1090 0548                     u1307 00F7                     u1171 05AC  
                   u1155 058E                     u1091 0547                     u1180 05BD  
                   u1317 0102                     u1181 05BC                     u1237 07D7  
                   u1190 05D6                     u1247 0113                     u1191 05D5  
                   u1175 05A9                     u1257 011E                     u1185 05B9  
                   u1267 01DD                     u1195 05D2                     u1277 01EC  
                   u1287 01FB                     u1297 020A                     _RCEN 048B  
                   _date 004C                     _min1 005E                     _min2 005D  
                   _sec1 0060                     _sec2 005F                     _main 05E7  
                   _msg1 0043                     _msg2 003E                     _init 01CB  
                   _hour 004E                     _year 0048                     btemp 007E  
                   start 0000                    ?_main 0070                    _ACKEN 048C  
                  _ACKDT 048D                    ?_init 0070          __end_of___awdiv 0364  
        __end_of___awmod 02FD          __end_of___lldiv 03CC              i2c_read@ack 0070  
        ___awdiv@divisor 0070          ___awdiv@counter 0074                    _PORTD 0008  
                  _TRISC 0087                    _TRISD 0088      ___lmul@multiplicand 0074  
                  _date1 005A                    _date2 0059                    _am_pm 0054  
           bcd_2_dec@val 0076                    _hour1 005C                    _hour2 005B  
                  _month 004A                    _year1 0056                    _year2 0055  
                  main@i 003A                    pclath 000A          __end_of_settime 0450  
                  status 0003                    wtemp0 007E          __initialization 07E2  
           __end_of_main 07E2             __end_of_init 0210         __end_of_i2c_init 02A4  
       __end_of_i2c_read 019B         __end_of_i2c_wait 00C2         __end_of_i2c_stop 00AA  
                 ??_main 0035                   ??_init 0073           lcd_command@cmd 0072  
       ___awdiv@dividend 0072                   _SSPADD 0093                   _SSPCON 0014  
                 _SSPBUF 0013         __end_of_lcd_data 0124                   ___lmul 0210  
                 ___wmul 0124                ??___awdiv 0074                ??___awmod 0074  
              ??___lldiv 007D         ___awdiv@quotient 0076                   _month1 0058  
                 _month2 0057          ___awmod@divisor 0070          ___awmod@counter 0074  
                 _update 0450                ??_settime 007C  __end_of__initialization 07FC  
         __pcstackCOMMON 0070             __pidataBANK0 00D5             dec_2_bcd@val 0078  
      __end_of_i2c_start 00A1        __end_of_i2c_write 00B5               __pbssBANK0 0055  
              ?_i2c_init 002D                ?_i2c_read 0070                ?_i2c_wait 0070  
              ?_i2c_stop 0070               __pmaintext 05E7                  ?___lmul 0070  
                ?___wmul 0070        __end_of_bcd_2_dec 016E           ___lmul@product 0079  
                ?_update 0070        __end_of_dec_2_bcd 01CB            i2c_read@value 0074  
                _SSPCON2 0091                ?_lcd_data 0070                  _SSPSTAT 0094  
             ??_i2c_init 0031               ??_i2c_read 0072               ??_i2c_wait 0070  
             ??_i2c_stop 0070                  ___awdiv 02FD                  ___awmod 02A4  
                ___lldiv 0364                  _main$97 0038                  __ptext1 0450  
                __ptext2 016E                  __ptext3 0149                  __ptext4 0124  
                __ptext5 03CC                  __ptext6 00AA                  __ptext7 00A1  
                __ptext8 0098                  __ptext9 00B5         ___awmod@dividend 0072  
                _settime 03CC               ??_lcd_data 0070     end_of_initialization 07FC  
        ___lldiv@divisor 0020          ___lldiv@counter 002C            i2c_write@data 0070  
          ??_lcd_command 0070           __end_of___lmul 0256           __end_of___wmul 0149  
         __end_of_update 05E7      start_initialization 07E2                _i2c_start 0098  
              _i2c_write 00AA                 ??___lmul 0078                 ??___wmul 0074  
             init_fetch0 00C2      __end_of_lcd_command 0108              __pdataBANK0 003E  
               ??_update 007A                _bcd_2_dec 0149                ___latbits 0002  
          __pcstackBANK0 0020                _dec_2_bcd 019B               ?_i2c_start 0070  
             ?_i2c_write 0070                 ?___awdiv 0070                 ?___awmod 0070  
               ?___lldiv 0020               ?_bcd_2_dec 0076               ?_dec_2_bcd 0078  
               ?_settime 0070           i2c_init@freq_k 002D           ___wmul@product 0074  
            _lcd_command 00EC        ___wmul@multiplier 0070              ??_i2c_start 0070  
            ??_i2c_write 0070        ___lmul@multiplier 0070                 _i2c_init 0256  
               _i2c_read 016E                 _i2c_wait 00B5                 _i2c_stop 00A1  
            ??_bcd_2_dec 0078              ??_dec_2_bcd 007A                 __ptext10 019B  
               __ptext11 02A4                 __ptext12 02FD                 __ptext13 0108  
               __ptext14 01CB                 __ptext15 00EC                 __ptext16 0256  
               __ptext17 0210                 __ptext18 0364                 _lcd_data 0108  
               main@i_98 003C                 init_ram0 00C6         ___lldiv@dividend 0024  
       ___lldiv@quotient 0028             ?_lcd_command 0070  
