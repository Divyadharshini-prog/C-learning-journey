

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Fri Dec 27 23:31:16 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13     0000                     
    14                           ; Generated 12/10/2023 GMT
    15                           ; 
    16                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48     0000                     	;# 
    49     0001                     	;# 
    50     0002                     	;# 
    51     0003                     	;# 
    52     0004                     	;# 
    53     0005                     	;# 
    54     0006                     	;# 
    55     0007                     	;# 
    56     0008                     	;# 
    57     0009                     	;# 
    58     000A                     	;# 
    59     000B                     	;# 
    60     000C                     	;# 
    61     000D                     	;# 
    62     000E                     	;# 
    63     000E                     	;# 
    64     000F                     	;# 
    65     0010                     	;# 
    66     0011                     	;# 
    67     0012                     	;# 
    68     0013                     	;# 
    69     0014                     	;# 
    70     0015                     	;# 
    71     0015                     	;# 
    72     0016                     	;# 
    73     0017                     	;# 
    74     0018                     	;# 
    75     0019                     	;# 
    76     001A                     	;# 
    77     001B                     	;# 
    78     001B                     	;# 
    79     001C                     	;# 
    80     001D                     	;# 
    81     001E                     	;# 
    82     001F                     	;# 
    83     0081                     	;# 
    84     0085                     	;# 
    85     0086                     	;# 
    86     0087                     	;# 
    87     0088                     	;# 
    88     0089                     	;# 
    89     008C                     	;# 
    90     008D                     	;# 
    91     008E                     	;# 
    92     0091                     	;# 
    93     0092                     	;# 
    94     0093                     	;# 
    95     0094                     	;# 
    96     0098                     	;# 
    97     0099                     	;# 
    98     009C                     	;# 
    99     009D                     	;# 
   100     009E                     	;# 
   101     009F                     	;# 
   102     010C                     	;# 
   103     010D                     	;# 
   104     010E                     	;# 
   105     010F                     	;# 
   106     018C                     	;# 
   107     018D                     	;# 
   108     0000                     	;# 
   109     0001                     	;# 
   110     0002                     	;# 
   111     0003                     	;# 
   112     0004                     	;# 
   113     0005                     	;# 
   114     0006                     	;# 
   115     0007                     	;# 
   116     0008                     	;# 
   117     0009                     	;# 
   118     000A                     	;# 
   119     000B                     	;# 
   120     000C                     	;# 
   121     000D                     	;# 
   122     000E                     	;# 
   123     000E                     	;# 
   124     000F                     	;# 
   125     0010                     	;# 
   126     0011                     	;# 
   127     0012                     	;# 
   128     0013                     	;# 
   129     0014                     	;# 
   130     0015                     	;# 
   131     0015                     	;# 
   132     0016                     	;# 
   133     0017                     	;# 
   134     0018                     	;# 
   135     0019                     	;# 
   136     001A                     	;# 
   137     001B                     	;# 
   138     001B                     	;# 
   139     001C                     	;# 
   140     001D                     	;# 
   141     001E                     	;# 
   142     001F                     	;# 
   143     0081                     	;# 
   144     0085                     	;# 
   145     0086                     	;# 
   146     0087                     	;# 
   147     0088                     	;# 
   148     0089                     	;# 
   149     008C                     	;# 
   150     008D                     	;# 
   151     008E                     	;# 
   152     0091                     	;# 
   153     0092                     	;# 
   154     0093                     	;# 
   155     0094                     	;# 
   156     0098                     	;# 
   157     0099                     	;# 
   158     009C                     	;# 
   159     009D                     	;# 
   160     009E                     	;# 
   161     009F                     	;# 
   162     010C                     	;# 
   163     010D                     	;# 
   164     010E                     	;# 
   165     010F                     	;# 
   166     018C                     	;# 
   167     018D                     	;# 
   168     0013                     _SSPBUF	set	19
   169     000C                     _PIR1	set	12
   170     000B                     _INTCON	set	11
   171     0014                     _SSPCON	set	20
   172     0006                     _PORTB	set	6
   173     008C                     _PIE1	set	140
   174     0085                     _TRISA	set	133
   175     009F                     _ADCON1	set	159
   176     0087                     _TRISC	set	135
   177     0094                     _SSPSTAT	set	148
   178     0086                     _TRISB	set	134
   179                           
   180                           	psect	cinit
   181     0011                     start_initialization:	
   182                           ; #config settings
   183                           
   184     0011                     __initialization:
   185                           
   186                           ; Clear objects allocated to COMMON
   187     0011  01F3               	clrf	__pbssCOMMON& (0+127)
   188     0012                     end_of_initialization:	
   189                           ;End of C runtime variable initialization code
   190                           
   191     0012                     __end_of__initialization:
   192     0012  0183               	clrf	3
   193     0013  120A  118A  283D   	ljmp	_main	;jump to C main() function
   194                           
   195                           	psect	bssCOMMON
   196     0073                     __pbssCOMMON:
   197     0073                     _data:
   198     0073                     	ds	1
   199                           
   200                           	psect	cstackCOMMON
   201     0070                     __pcstackCOMMON:
   202     0070                     ?_SPI_slave:
   203     0070                     ?_main:	
   204                           ; 1 bytes @ 0x0
   205                           
   206     0070                     ?_ISR:	
   207                           ; 1 bytes @ 0x0
   208                           
   209     0070                     ??_ISR:	
   210                           ; 1 bytes @ 0x0
   211                           
   212                           
   213                           ; 1 bytes @ 0x0
   214     0070                     	ds	3
   215     0073                     ??_SPI_slave:
   216     0073                     ??_main:	
   217                           ; 1 bytes @ 0x3
   218                           
   219                           
   220                           	psect	maintext
   221     003D                     __pmaintext:	
   222                           ; 1 bytes @ 0x3
   223 ;;
   224 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   225 ;;
   226 ;; *************** function _main *****************
   227 ;; Defined at:
   228 ;;		line 21 in file "SPI_class.c"
   229 ;; Parameters:    Size  Location     Type
   230 ;;		None
   231 ;; Auto vars:     Size  Location     Type
   232 ;;		None
   233 ;; Return value:  Size  Location     Type
   234 ;;                  1    wreg      void 
   235 ;; Registers used:
   236 ;;		wreg, status,2, status,0, pclath, cstack
   237 ;; Tracked objects:
   238 ;;		On entry : B00/0
   239 ;;		On exit  : 0/0
   240 ;;		Unchanged: 0/0
   241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   242 ;;      Params:         0       0       0       0       0
   243 ;;      Locals:         0       0       0       0       0
   244 ;;      Temps:          0       0       0       0       0
   245 ;;      Totals:         0       0       0       0       0
   246 ;;Total ram usage:        0 bytes
   247 ;; Hardware stack levels required when called: 2
   248 ;; This function calls:
   249 ;;		_SPI_slave
   250 ;; This function is called by:
   251 ;;		Startup code after reset
   252 ;; This function uses a non-reentrant model
   253 ;;
   254                           
   255     003D                     _main:	
   256                           ;psect for function _main
   257                           
   258     003D                     l601:	
   259                           ;incstack = 0
   260                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   261                           
   262                           
   263                           ;SPI_class.c: 23:     SPI_slave();
   264     003D  120A  118A  202B  120A  118A  	fcall	_SPI_slave
   265     0042                     l603:
   266                           
   267                           ;SPI_class.c: 24:     TRISB= 0x00;
   268     0042  1683               	bsf	3,5	;RP0=1, select bank1
   269     0043  1303               	bcf	3,6	;RP1=0, select bank1
   270     0044  0186               	clrf	6	;volatile
   271     0045                     l605:
   272                           
   273                           ;SPI_class.c: 25:     PORTB = 0x00;
   274     0045  1283               	bcf	3,5	;RP0=0, select bank0
   275     0046  1303               	bcf	3,6	;RP1=0, select bank0
   276     0047  0186               	clrf	6	;volatile
   277     0048                     l607:
   278                           
   279                           ;SPI_class.c: 27:     {;SPI_class.c: 28:         PORTB= data;
   280     0048  0873               	movf	_data,w
   281     0049  0086               	movwf	6	;volatile
   282     004A  2848               	goto	l607
   283     004B  120A  118A  280E   	ljmp	start
   284     004E                     __end_of_main:
   285                           
   286                           	psect	text1
   287     002B                     __ptext1:	
   288 ;; *************** function _SPI_slave *****************
   289 ;; Defined at:
   290 ;;		line 32 in file "SPI_class.c"
   291 ;; Parameters:    Size  Location     Type
   292 ;;		None
   293 ;; Auto vars:     Size  Location     Type
   294 ;;		None
   295 ;; Return value:  Size  Location     Type
   296 ;;                  1    wreg      void 
   297 ;; Registers used:
   298 ;;		wreg, status,2
   299 ;; Tracked objects:
   300 ;;		On entry : 0/0
   301 ;;		On exit  : 0/0
   302 ;;		Unchanged: 0/0
   303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   304 ;;      Params:         0       0       0       0       0
   305 ;;      Locals:         0       0       0       0       0
   306 ;;      Temps:          0       0       0       0       0
   307 ;;      Totals:         0       0       0       0       0
   308 ;;Total ram usage:        0 bytes
   309 ;; Hardware stack levels used: 1
   310 ;; Hardware stack levels required when called: 1
   311 ;; This function calls:
   312 ;;		Nothing
   313 ;; This function is called by:
   314 ;;		_main
   315 ;; This function uses a non-reentrant model
   316 ;;
   317                           
   318     002B                     _SPI_slave:	
   319                           ;psect for function _SPI_slave
   320                           
   321     002B                     l587:	
   322                           ;incstack = 0
   323                           ; Regs used in _SPI_slave: [wreg+status,2]
   324                           
   325                           
   326                           ;SPI_class.c: 34:     SSPCON = 0x24;
   327     002B  3024               	movlw	36
   328     002C  1283               	bcf	3,5	;RP0=0, select bank0
   329     002D  1303               	bcf	3,6	;RP1=0, select bank0
   330     002E  0094               	movwf	20	;volatile
   331     002F                     l589:
   332                           
   333                           ;SPI_class.c: 35:     SSPSTAT = 0x00;
   334     002F  1683               	bsf	3,5	;RP0=1, select bank1
   335     0030  1303               	bcf	3,6	;RP1=0, select bank1
   336     0031  0194               	clrf	20	;volatile
   337     0032                     l591:
   338                           
   339                           ;SPI_class.c: 36:     TRISC = 0x18;
   340     0032  3018               	movlw	24
   341     0033  0087               	movwf	7	;volatile
   342     0034                     l593:
   343                           
   344                           ;SPI_class.c: 37:     ADCON1 = 0x04;
   345     0034  3004               	movlw	4
   346     0035  009F               	movwf	31	;volatile
   347     0036                     l595:
   348                           
   349                           ;SPI_class.c: 38:     TRISA = 0x20;
   350     0036  3020               	movlw	32
   351     0037  0085               	movwf	5	;volatile
   352     0038                     l597:
   353                           
   354                           ;SPI_class.c: 39:     PIE1 = 0x08;
   355     0038  3008               	movlw	8
   356     0039  008C               	movwf	12	;volatile
   357     003A                     l599:
   358                           
   359                           ;SPI_class.c: 40:     INTCON = 0xC0;
   360     003A  30C0               	movlw	192
   361     003B  008B               	movwf	11	;volatile
   362     003C                     l37:
   363     003C  0008               	return
   364     003D                     __end_of_SPI_slave:
   365                           
   366                           	psect	text2
   367     0016                     __ptext2:	
   368 ;; *************** function _ISR *****************
   369 ;; Defined at:
   370 ;;		line 44 in file "SPI_class.c"
   371 ;; Parameters:    Size  Location     Type
   372 ;;		None
   373 ;; Auto vars:     Size  Location     Type
   374 ;;		None
   375 ;; Return value:  Size  Location     Type
   376 ;;                  1    wreg      void 
   377 ;; Registers used:
   378 ;;		wreg, status,2, status,0, btemp+1
   379 ;; Tracked objects:
   380 ;;		On entry : 0/0
   381 ;;		On exit  : 0/0
   382 ;;		Unchanged: 0/0
   383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   384 ;;      Params:         0       0       0       0       0
   385 ;;      Locals:         0       0       0       0       0
   386 ;;      Temps:          3       0       0       0       0
   387 ;;      Totals:         3       0       0       0       0
   388 ;;Total ram usage:        3 bytes
   389 ;; Hardware stack levels used: 1
   390 ;; This function calls:
   391 ;;		Nothing
   392 ;; This function is called by:
   393 ;;		Interrupt level 1
   394 ;; This function uses a non-reentrant model
   395 ;;
   396                           
   397     0016                     _ISR:	
   398                           ;psect for function _ISR
   399                           
   400     0016                     i1l609:
   401                           
   402                           ;SPI_class.c: 46:     if (PIR1 & 0x08)
   403     0016  1283               	bcf	3,5	;RP0=0, select bank0
   404     0017  1303               	bcf	3,6	;RP1=0, select bank0
   405     0018  1D8C               	btfss	12,3	;volatile
   406     0019  281B               	goto	u1_21
   407     001A  281C               	goto	u1_20
   408     001B                     u1_21:
   409     001B  2822               	goto	i1l43
   410     001C                     u1_20:
   411     001C                     i1l611:
   412                           
   413                           ;SPI_class.c: 47:     {;SPI_class.c: 48:         data= SSPBUF;
   414     001C  0813               	movf	19,w	;volatile
   415     001D  00F3               	movwf	_data
   416     001E                     i1l613:
   417                           
   418                           ;SPI_class.c: 49:         PIR1 &=~0x08;
   419     001E  30F7               	movlw	247
   420     001F  00FF               	movwf	btemp+1
   421     0020  087F               	movf	btemp+1,w
   422     0021  058C               	andwf	12,f	;volatile
   423     0022                     i1l43:
   424     0022  0872               	movf	??_ISR+2,w
   425     0023  00FF               	movwf	btemp+1
   426     0024  0871               	movf	??_ISR+1,w
   427     0025  008A               	movwf	10
   428     0026  0E70               	swapf	??_ISR,w
   429     0027  0083               	movwf	3
   430     0028  0EFE               	swapf	btemp,f
   431     0029  0E7E               	swapf	btemp,w
   432     002A  0009               	retfie
   433     002B                     __end_of_ISR:
   434     007E                     btemp	set	126	;btemp
   435     007E                     wtemp0	set	126
   436                           
   437                           	psect	intentry
   438     0004                     __pintentry:	
   439                           ;incstack = 0
   440                           ; Regs used in _ISR: [wreg+status,2+status,0+btemp+1]
   441                           
   442     0004                     interrupt_function:
   443     007E                     saved_w	set	btemp
   444     0004  00FE               	movwf	btemp
   445     0005  0E03               	swapf	3,w
   446     0006  00F0               	movwf	??_ISR
   447     0007  080A               	movf	10,w
   448     0008  00F1               	movwf	??_ISR+1
   449     0009  087F               	movf	btemp+1,w
   450     000A  00F2               	movwf	??_ISR+2
   451     000B  120A  118A  2816   	ljmp	_ISR
   452                           
   453                           	psect	config
   454                           
   455                           ;Config register CONFIG @ 0x2007
   456                           ;	Oscillator Selection bits
   457                           ;	FOSC = EXTRC, RC oscillator
   458                           ;	Watchdog Timer Enable bit
   459                           ;	WDTE = OFF, WDT disabled
   460                           ;	Power-up Timer Enable bit
   461                           ;	PWRTE = OFF, PWRT disabled
   462                           ;	Brown-out Reset Enable bit
   463                           ;	BOREN = OFF, BOR disabled
   464                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   465                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   466                           ;	Data EEPROM Memory Code Protection bit
   467                           ;	CPD = OFF, Data EEPROM code protection off
   468                           ;	Flash Program Memory Write Enable bits
   469                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   470                           ;	In-Circuit Debugger Mode bit
   471                           ;	DEBUG = 0x1, unprogrammed default
   472                           ;	Flash Program Memory Code Protection bit
   473                           ;	CP = OFF, Code protection off
   474     2007                     	org	8199
   475     2007  3F3B               	dw	16187

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3       4
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                          _SPI_slave
 ---------------------------------------------------------------------------------
 (1) _SPI_slave                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SPI_slave

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      3       4       1       28.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       4       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       4      12        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Fri Dec 27 23:31:16 2024

                     l37 003C                      l601 003D                      l603 0042  
                    l605 0045                      l607 0048                      l591 0032  
                    l593 0034                      l595 0036                      l587 002B  
                    l597 0038                      l589 002F                      l599 003A  
                    _ISR 0016                     ?_ISR 0070                     _PIE1 008C  
                   i1l43 0022                     _PIR1 000C                     u1_20 001C  
                   u1_21 001B                     _data 0073                     _main 003D  
                   btemp 007E                     start 000E                    ??_ISR 0070  
                  ?_main 0070                    i1l611 001C                    i1l613 001E  
                  i1l609 0016                    _PORTB 0006                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 0011  
           __end_of_main 004E                   ??_main 0073                   _ADCON1 009F  
                 _INTCON 000B                   _SSPCON 0014                   _SSPBUF 0013  
                 saved_w 007E        __end_of_SPI_slave 003D  __end_of__initialization 0012  
         __pcstackCOMMON 0070               __pmaintext 003D               __pintentry 0004  
                _SSPSTAT 0094                  __ptext1 002B                  __ptext2 0016  
   end_of_initialization 0012                _SPI_slave 002B      start_initialization 0011  
            __end_of_ISR 002B               ?_SPI_slave 0070              __pbssCOMMON 0073  
              ___latbits 0002              ??_SPI_slave 0073        interrupt_function 0004  
               intlevel1 0000  
