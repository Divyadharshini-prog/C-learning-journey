

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Thu Jul 11 22:52:44 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15     0000                     
    16                           ; Generated 12/10/2023 GMT
    17                           ; 
    18                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution. Publication is not required when
    32                           ;        this file is used in an embedded application.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F877A Definitions
    48                           ; 
    49                           ; SFR Addresses
    50     0000                     	;# 
    51     0001                     	;# 
    52     0002                     	;# 
    53     0003                     	;# 
    54     0004                     	;# 
    55     0005                     	;# 
    56     0006                     	;# 
    57     0007                     	;# 
    58     0008                     	;# 
    59     0009                     	;# 
    60     000A                     	;# 
    61     000B                     	;# 
    62     000C                     	;# 
    63     000D                     	;# 
    64     000E                     	;# 
    65     000E                     	;# 
    66     000F                     	;# 
    67     0010                     	;# 
    68     0011                     	;# 
    69     0012                     	;# 
    70     0013                     	;# 
    71     0014                     	;# 
    72     0015                     	;# 
    73     0015                     	;# 
    74     0016                     	;# 
    75     0017                     	;# 
    76     0018                     	;# 
    77     0019                     	;# 
    78     001A                     	;# 
    79     001B                     	;# 
    80     001B                     	;# 
    81     001C                     	;# 
    82     001D                     	;# 
    83     001E                     	;# 
    84     001F                     	;# 
    85     0081                     	;# 
    86     0085                     	;# 
    87     0086                     	;# 
    88     0087                     	;# 
    89     0088                     	;# 
    90     0089                     	;# 
    91     008C                     	;# 
    92     008D                     	;# 
    93     008E                     	;# 
    94     0091                     	;# 
    95     0092                     	;# 
    96     0093                     	;# 
    97     0094                     	;# 
    98     0098                     	;# 
    99     0099                     	;# 
   100     009C                     	;# 
   101     009D                     	;# 
   102     009E                     	;# 
   103     009F                     	;# 
   104     010C                     	;# 
   105     010D                     	;# 
   106     010E                     	;# 
   107     010F                     	;# 
   108     018C                     	;# 
   109     018D                     	;# 
   110     0000                     	;# 
   111     0001                     	;# 
   112     0002                     	;# 
   113     0003                     	;# 
   114     0004                     	;# 
   115     0005                     	;# 
   116     0006                     	;# 
   117     0007                     	;# 
   118     0008                     	;# 
   119     0009                     	;# 
   120     000A                     	;# 
   121     000B                     	;# 
   122     000C                     	;# 
   123     000D                     	;# 
   124     000E                     	;# 
   125     000E                     	;# 
   126     000F                     	;# 
   127     0010                     	;# 
   128     0011                     	;# 
   129     0012                     	;# 
   130     0013                     	;# 
   131     0014                     	;# 
   132     0015                     	;# 
   133     0015                     	;# 
   134     0016                     	;# 
   135     0017                     	;# 
   136     0018                     	;# 
   137     0019                     	;# 
   138     001A                     	;# 
   139     001B                     	;# 
   140     001B                     	;# 
   141     001C                     	;# 
   142     001D                     	;# 
   143     001E                     	;# 
   144     001F                     	;# 
   145     0081                     	;# 
   146     0085                     	;# 
   147     0086                     	;# 
   148     0087                     	;# 
   149     0088                     	;# 
   150     0089                     	;# 
   151     008C                     	;# 
   152     008D                     	;# 
   153     008E                     	;# 
   154     0091                     	;# 
   155     0092                     	;# 
   156     0093                     	;# 
   157     0094                     	;# 
   158     0098                     	;# 
   159     0099                     	;# 
   160     009C                     	;# 
   161     009D                     	;# 
   162     009E                     	;# 
   163     009F                     	;# 
   164     010C                     	;# 
   165     010D                     	;# 
   166     010E                     	;# 
   167     010F                     	;# 
   168     018C                     	;# 
   169     018D                     	;# 
   170                           
   171                           	psect	idataCOMMON
   172     0705                     __pidataCOMMON:
   173                           
   174                           ;initializer for _ar
   175     0705  3444               	retlw	68
   176     0706  3449               	retlw	73
   177     0707  3456               	retlw	86
   178     0708  3459               	retlw	89
   179     0709  3441               	retlw	65
   180     0008                     _PORTD	set	8
   181     0007                     _PORTC	set	7
   182     0088                     _TRISD	set	136
   183     0087                     _TRISC	set	135
   184                           
   185                           	psect	cinit
   186     07DA                     start_initialization:	
   187                           ; #config settings
   188                           
   189     07DA                     __initialization:
   190                           
   191                           ; Initialize objects allocated to COMMON
   192     07DA  120A  118A  2705  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   193     07DF  00F0               	movwf	__pdataCOMMON& (0+127)
   194     07E0  120A  118A  2706  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   195     07E5  00F1               	movwf	(__pdataCOMMON+1)& (0+127)
   196     07E6  120A  118A  2707  120A  118A  	fcall	__pidataCOMMON+2	;fetch initializer
   197     07EB  00F2               	movwf	(__pdataCOMMON+2)& (0+127)
   198     07EC  120A  118A  2708  120A  118A  	fcall	__pidataCOMMON+3	;fetch initializer
   199     07F1  00F3               	movwf	(__pdataCOMMON+3)& (0+127)
   200     07F2  120A  118A  2709  120A  118A  	fcall	__pidataCOMMON+4	;fetch initializer
   201     07F7  00F4               	movwf	(__pdataCOMMON+4)& (0+127)
   202                           
   203                           ; Clear objects allocated to COMMON
   204     07F8  01FA               	clrf	__pbssCOMMON& (0+127)
   205     07F9  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   206     07FA  01FC               	clrf	(__pbssCOMMON+2)& (0+127)
   207     07FB  01FD               	clrf	(__pbssCOMMON+3)& (0+127)
   208     07FC                     end_of_initialization:	
   209                           ;End of C runtime variable initialization code
   210                           
   211     07FC                     __end_of__initialization:
   212     07FC  0183               	clrf	3
   213     07FD  120A  118A  2F35   	ljmp	_main	;jump to C main() function
   214                           
   215                           	psect	bssCOMMON
   216     007A                     __pbssCOMMON:
   217     007A                     _i:
   218     007A                     	ds	1
   219     007B                     _m:
   220     007B                     	ds	1
   221     007C                     _n:
   222     007C                     	ds	1
   223     007D                     _x:
   224     007D                     	ds	1
   225                           
   226                           	psect	dataCOMMON
   227     0070                     __pdataCOMMON:
   228     0070                     _ar:
   229     0070                     	ds	5
   230                           
   231                           	psect	cstackCOMMON
   232     0075                     __pcstackCOMMON:
   233     0075                     ?_init:
   234     0075                     ?_Lcd_command:	
   235                           ; 1 bytes @ 0x0
   236                           
   237     0075                     ??_Lcd_command:	
   238                           ; 1 bytes @ 0x0
   239                           
   240     0075                     ?_Lcd_data:	
   241                           ; 1 bytes @ 0x0
   242                           
   243     0075                     ??_Lcd_data:	
   244                           ; 1 bytes @ 0x0
   245                           
   246     0075                     ?_main:	
   247                           ; 1 bytes @ 0x0
   248                           
   249                           
   250                           ; 1 bytes @ 0x0
   251     0075                     	ds	2
   252     0077                     Lcd_data@i:
   253     0077                     Lcd_command@i:	
   254                           ; 1 bytes @ 0x2
   255                           
   256                           
   257                           ; 1 bytes @ 0x2
   258     0077                     	ds	1
   259     0078                     ??_init:
   260                           
   261                           ; 1 bytes @ 0x3
   262     0078                     	ds	2
   263     007A                     ??_main:
   264                           
   265                           	psect	maintext
   266     0735                     __pmaintext:	
   267                           ; 1 bytes @ 0x5
   268 ;;
   269 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   270 ;;
   271 ;; *************** function _main *****************
   272 ;; Defined at:
   273 ;;		line 31 in file "Task3_pgm.c"
   274 ;; Parameters:    Size  Location     Type
   275 ;;		None
   276 ;; Auto vars:     Size  Location     Type
   277 ;;		None
   278 ;; Return value:  Size  Location     Type
   279 ;;                  1    wreg      void 
   280 ;; Registers used:
   281 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   282 ;; Tracked objects:
   283 ;;		On entry : B00/0
   284 ;;		On exit  : 0/0
   285 ;;		Unchanged: 0/0
   286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   287 ;;      Params:         0       0       0       0       0
   288 ;;      Locals:         0       0       0       0       0
   289 ;;      Temps:          0       0       0       0       0
   290 ;;      Totals:         0       0       0       0       0
   291 ;;Total ram usage:        0 bytes
   292 ;; Hardware stack levels required when called: 2
   293 ;; This function calls:
   294 ;;		_Lcd_command
   295 ;;		_Lcd_data
   296 ;;		_init
   297 ;; This function is called by:
   298 ;;		Startup code after reset
   299 ;; This function uses a non-reentrant model
   300 ;;
   301                           
   302     0735                     _main:	
   303                           ;psect for function _main
   304                           
   305     0735                     l639:	
   306                           ;incstack = 0
   307                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   308                           
   309                           
   310                           ;Task3_pgm.c: 33: init();
   311     0735  120A  118A  2773  120A  118A  	fcall	_init
   312                           
   313                           ;Task3_pgm.c: 34: Lcd_command(0x82);
   314     073A  3082               	movlw	130
   315     073B  120A  118A  271E  120A  118A  	fcall	_Lcd_command
   316     0740                     l641:
   317                           
   318                           ;Task3_pgm.c: 35: for(x=0; x<=5 ; x++)
   319     0740  01FD               	clrf	_x
   320     0741                     l647:
   321                           
   322                           ;Task3_pgm.c: 36: {;Task3_pgm.c: 37: Lcd_data(ar[x]);
   323     0741  087D               	movf	_x,w
   324     0742  3E70               	addlw	(low (_ar| 0))& (0+255)
   325     0743  0084               	movwf	4
   326     0744  0800               	movf	0,w
   327     0745  120A  118A  270A  120A  118A  	fcall	_Lcd_data
   328     074A                     l649:
   329                           
   330                           ;Task3_pgm.c: 38: }
   331     074A  3001               	movlw	1
   332     074B  00FF               	movwf	btemp+1
   333     074C  087F               	movf	btemp+1,w
   334     074D  07FD               	addwf	_x,f
   335     074E                     l651:
   336     074E  3006               	movlw	6
   337     074F  027D               	subwf	_x,w
   338     0750  1C03               	skipc
   339     0751  2F53               	goto	u11
   340     0752  2F54               	goto	u10
   341     0753                     u11:
   342     0753  2F41               	goto	l647
   343     0754                     u10:
   344     0754                     l653:
   345                           
   346                           ;Task3_pgm.c: 39:     for(x=0; x<=5; x++)
   347     0754  01FD               	clrf	_x
   348     0755                     l659:
   349                           
   350                           ;Task3_pgm.c: 40:     {;Task3_pgm.c: 41:         Lcd_command(0xCE -x);
   351     0755  087D               	movf	_x,w
   352     0756  3CCE               	sublw	206
   353     0757  120A  118A  271E  120A  118A  	fcall	_Lcd_command
   354     075C                     l661:
   355                           
   356                           ;Task3_pgm.c: 42:         Lcd_data(ar[x]);
   357     075C  087D               	movf	_x,w
   358     075D  3E70               	addlw	(low (_ar| 0))& (0+255)
   359     075E  0084               	movwf	4
   360     075F  0800               	movf	0,w
   361     0760  120A  118A  270A  120A  118A  	fcall	_Lcd_data
   362     0765                     l663:
   363                           
   364                           ;Task3_pgm.c: 43:     }
   365     0765  3001               	movlw	1
   366     0766  00FF               	movwf	btemp+1
   367     0767  087F               	movf	btemp+1,w
   368     0768  07FD               	addwf	_x,f
   369     0769                     l665:
   370     0769  3006               	movlw	6
   371     076A  027D               	subwf	_x,w
   372     076B  1C03               	skipc
   373     076C  2F6E               	goto	u21
   374     076D  2F6F               	goto	u20
   375     076E                     u21:
   376     076E  2F55               	goto	l659
   377     076F                     u20:
   378     076F                     l35:	
   379                           ;Task3_pgm.c: 45: while(1);
   380                           
   381     076F  2F6F               	goto	l35
   382     0770  120A  118A  2800   	ljmp	start
   383     0773                     __end_of_main:
   384                           
   385                           	psect	text1
   386     0773                     __ptext1:	
   387 ;; *************** function _init *****************
   388 ;; Defined at:
   389 ;;		line 48 in file "Task3_pgm.c"
   390 ;; Parameters:    Size  Location     Type
   391 ;;		None
   392 ;; Auto vars:     Size  Location     Type
   393 ;;		None
   394 ;; Return value:  Size  Location     Type
   395 ;;                  1    wreg      void 
   396 ;; Registers used:
   397 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   398 ;; Tracked objects:
   399 ;;		On entry : 0/0
   400 ;;		On exit  : 0/0
   401 ;;		Unchanged: 0/0
   402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   403 ;;      Params:         0       0       0       0       0
   404 ;;      Locals:         0       0       0       0       0
   405 ;;      Temps:          2       0       0       0       0
   406 ;;      Totals:         2       0       0       0       0
   407 ;;Total ram usage:        2 bytes
   408 ;; Hardware stack levels used: 1
   409 ;; Hardware stack levels required when called: 1
   410 ;; This function calls:
   411 ;;		_Lcd_command
   412 ;; This function is called by:
   413 ;;		_main
   414 ;; This function uses a non-reentrant model
   415 ;;
   416                           
   417     0773                     _init:	
   418                           ;psect for function _init
   419                           
   420     0773                     l599:	
   421                           ;incstack = 0
   422                           ; Regs used in _init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   423                           
   424                           
   425                           ;Task3_pgm.c: 50: TRISC = 0X00;
   426     0773  1683               	bsf	3,5	;RP0=1, select bank1
   427     0774  1303               	bcf	3,6	;RP1=0, select bank1
   428     0775  0187               	clrf	7	;volatile
   429                           
   430                           ;Task3_pgm.c: 51: TRISD = 0X00;
   431     0776  0188               	clrf	8	;volatile
   432     0777                     l601:
   433                           
   434                           ;Task3_pgm.c: 52: Lcd_command(0x30);
   435     0777  3030               	movlw	48
   436     0778  120A  118A  271E  120A  118A  	fcall	_Lcd_command
   437     077D                     l603:
   438                           
   439                           ;Task3_pgm.c: 53: _delay((unsigned long)((100)*(6000000/4000.0)));
   440     077D  30C3               	movlw	195
   441     077E  00F9               	movwf	??_init+1
   442     077F  30CD               	movlw	205
   443     0780  00F8               	movwf	??_init
   444     0781                     u37:
   445     0781  0BF8               	decfsz	??_init,f
   446     0782  2F81               	goto	u37
   447     0783  0BF9               	decfsz	??_init+1,f
   448     0784  2F81               	goto	u37
   449     0785                     l605:
   450                           
   451                           ;Task3_pgm.c: 54: Lcd_command(0x30);
   452     0785  3030               	movlw	48
   453     0786  120A  118A  271E  120A  118A  	fcall	_Lcd_command
   454     078B                     l607:
   455                           
   456                           ;Task3_pgm.c: 55: _delay((unsigned long)((100)*(6000000/4000.0)));
   457     078B  30C3               	movlw	195
   458     078C  00F9               	movwf	??_init+1
   459     078D  30CD               	movlw	205
   460     078E  00F8               	movwf	??_init
   461     078F                     u47:
   462     078F  0BF8               	decfsz	??_init,f
   463     0790  2F8F               	goto	u47
   464     0791  0BF9               	decfsz	??_init+1,f
   465     0792  2F8F               	goto	u47
   466     0793                     l609:
   467                           
   468                           ;Task3_pgm.c: 56: Lcd_command(0x30);
   469     0793  3030               	movlw	48
   470     0794  120A  118A  271E  120A  118A  	fcall	_Lcd_command
   471     0799                     l611:
   472                           
   473                           ;Task3_pgm.c: 57: _delay((unsigned long)((100)*(6000000/4000.0)));
   474     0799  30C3               	movlw	195
   475     079A  00F9               	movwf	??_init+1
   476     079B  30CD               	movlw	205
   477     079C  00F8               	movwf	??_init
   478     079D                     u57:
   479     079D  0BF8               	decfsz	??_init,f
   480     079E  2F9D               	goto	u57
   481     079F  0BF9               	decfsz	??_init+1,f
   482     07A0  2F9D               	goto	u57
   483     07A1                     l613:
   484                           
   485                           ;Task3_pgm.c: 58: Lcd_command(0x38);
   486     07A1  3038               	movlw	56
   487     07A2  120A  118A  271E  120A  118A  	fcall	_Lcd_command
   488     07A7                     l615:
   489                           
   490                           ;Task3_pgm.c: 59: _delay((unsigned long)((100)*(6000000/4000.0)));
   491     07A7  30C3               	movlw	195
   492     07A8  00F9               	movwf	??_init+1
   493     07A9  30CD               	movlw	205
   494     07AA  00F8               	movwf	??_init
   495     07AB                     u67:
   496     07AB  0BF8               	decfsz	??_init,f
   497     07AC  2FAB               	goto	u67
   498     07AD  0BF9               	decfsz	??_init+1,f
   499     07AE  2FAB               	goto	u67
   500     07AF                     l617:
   501                           
   502                           ;Task3_pgm.c: 60: Lcd_command(0x06);
   503     07AF  3006               	movlw	6
   504     07B0  120A  118A  271E  120A  118A  	fcall	_Lcd_command
   505     07B5                     l619:
   506                           
   507                           ;Task3_pgm.c: 61: _delay((unsigned long)((100)*(6000000/4000.0)));
   508     07B5  30C3               	movlw	195
   509     07B6  00F9               	movwf	??_init+1
   510     07B7  30CD               	movlw	205
   511     07B8  00F8               	movwf	??_init
   512     07B9                     u77:
   513     07B9  0BF8               	decfsz	??_init,f
   514     07BA  2FB9               	goto	u77
   515     07BB  0BF9               	decfsz	??_init+1,f
   516     07BC  2FB9               	goto	u77
   517     07BD                     l621:
   518                           
   519                           ;Task3_pgm.c: 62: Lcd_command(0x0C);
   520     07BD  300C               	movlw	12
   521     07BE  120A  118A  271E  120A  118A  	fcall	_Lcd_command
   522     07C3                     l623:
   523                           
   524                           ;Task3_pgm.c: 63: _delay((unsigned long)((100)*(6000000/4000.0)));
   525     07C3  30C3               	movlw	195
   526     07C4  00F9               	movwf	??_init+1
   527     07C5  30CD               	movlw	205
   528     07C6  00F8               	movwf	??_init
   529     07C7                     u87:
   530     07C7  0BF8               	decfsz	??_init,f
   531     07C8  2FC7               	goto	u87
   532     07C9  0BF9               	decfsz	??_init+1,f
   533     07CA  2FC7               	goto	u87
   534     07CB                     l625:
   535                           
   536                           ;Task3_pgm.c: 64: Lcd_command(0x01);
   537     07CB  3001               	movlw	1
   538     07CC  120A  118A  271E  120A  118A  	fcall	_Lcd_command
   539     07D1                     l627:
   540                           
   541                           ;Task3_pgm.c: 65: _delay((unsigned long)((100)*(6000000/4000.0)));
   542     07D1  30C3               	movlw	195
   543     07D2  00F9               	movwf	??_init+1
   544     07D3  30CD               	movlw	205
   545     07D4  00F8               	movwf	??_init
   546     07D5                     u97:
   547     07D5  0BF8               	decfsz	??_init,f
   548     07D6  2FD5               	goto	u97
   549     07D7  0BF9               	decfsz	??_init+1,f
   550     07D8  2FD5               	goto	u97
   551     07D9                     l41:
   552     07D9  0008               	return
   553     07DA                     __end_of_init:
   554                           
   555                           	psect	text2
   556     071E                     __ptext2:	
   557 ;; *************** function _Lcd_command *****************
   558 ;; Defined at:
   559 ;;		line 76 in file "Task3_pgm.c"
   560 ;; Parameters:    Size  Location     Type
   561 ;;  i               1    wreg     unsigned char 
   562 ;; Auto vars:     Size  Location     Type
   563 ;;  i               1    2[COMMON] unsigned char 
   564 ;; Return value:  Size  Location     Type
   565 ;;                  1    wreg      void 
   566 ;; Registers used:
   567 ;;		wreg, status,2, status,0, btemp+1
   568 ;; Tracked objects:
   569 ;;		On entry : 0/0
   570 ;;		On exit  : 0/0
   571 ;;		Unchanged: 0/0
   572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   573 ;;      Params:         0       0       0       0       0
   574 ;;      Locals:         1       0       0       0       0
   575 ;;      Temps:          2       0       0       0       0
   576 ;;      Totals:         3       0       0       0       0
   577 ;;Total ram usage:        3 bytes
   578 ;; Hardware stack levels used: 1
   579 ;; This function calls:
   580 ;;		Nothing
   581 ;; This function is called by:
   582 ;;		_main
   583 ;;		_init
   584 ;; This function uses a non-reentrant model
   585 ;;
   586                           
   587     071E                     _Lcd_command:	
   588                           ;psect for function _Lcd_command
   589                           
   590                           
   591                           ;incstack = 0
   592                           ; Regs used in _Lcd_command: [wreg+status,2+status,0+btemp+1]
   593                           ;Lcd_command@i stored from wreg
   594     071E  00F7               	movwf	Lcd_command@i
   595     071F                     l591:
   596                           
   597                           ;Task3_pgm.c: 76: void Lcd_command(unsigned char i);Task3_pgm.c: 77: {;Task3_pgm.c: 78: 
      +                          PORTC&=~0X08;
   598     071F  30F7               	movlw	247
   599     0720  00FF               	movwf	btemp+1
   600     0721  087F               	movf	btemp+1,w
   601     0722  1283               	bcf	3,5	;RP0=0, select bank0
   602     0723  1303               	bcf	3,6	;RP1=0, select bank0
   603     0724  0587               	andwf	7,f	;volatile
   604     0725                     l593:
   605                           
   606                           ;Task3_pgm.c: 79: PORTD=i;
   607     0725  0877               	movf	Lcd_command@i,w
   608     0726  0088               	movwf	8	;volatile
   609     0727                     l595:
   610                           
   611                           ;Task3_pgm.c: 80: PORTC|=0X01;
   612     0727  1407               	bsf	7,0	;volatile
   613     0728                     l597:
   614                           
   615                           ;Task3_pgm.c: 81: PORTC&=~0X01;
   616     0728  30FE               	movlw	254
   617     0729  00FF               	movwf	btemp+1
   618     072A  087F               	movf	btemp+1,w
   619     072B  0587               	andwf	7,f	;volatile
   620                           
   621                           ;Task3_pgm.c: 82: _delay((unsigned long)((100)*(6000000/4000.0)));
   622     072C  30C3               	movlw	195
   623     072D  00F6               	movwf	??_Lcd_command+1
   624     072E  30CD               	movlw	205
   625     072F  00F5               	movwf	??_Lcd_command
   626     0730                     u107:
   627     0730  0BF5               	decfsz	??_Lcd_command,f
   628     0731  2F30               	goto	u107
   629     0732  0BF6               	decfsz	??_Lcd_command+1,f
   630     0733  2F30               	goto	u107
   631     0734                     l47:
   632     0734  0008               	return
   633     0735                     __end_of_Lcd_command:
   634                           
   635                           	psect	text3
   636     070A                     __ptext3:	
   637 ;; *************** function _Lcd_data *****************
   638 ;; Defined at:
   639 ;;		line 67 in file "Task3_pgm.c"
   640 ;; Parameters:    Size  Location     Type
   641 ;;  i               1    wreg     unsigned char 
   642 ;; Auto vars:     Size  Location     Type
   643 ;;  i               1    2[COMMON] unsigned char 
   644 ;; Return value:  Size  Location     Type
   645 ;;                  1    wreg      void 
   646 ;; Registers used:
   647 ;;		wreg, status,2, status,0, btemp+1
   648 ;; Tracked objects:
   649 ;;		On entry : 0/0
   650 ;;		On exit  : 0/0
   651 ;;		Unchanged: 0/0
   652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   653 ;;      Params:         0       0       0       0       0
   654 ;;      Locals:         1       0       0       0       0
   655 ;;      Temps:          2       0       0       0       0
   656 ;;      Totals:         3       0       0       0       0
   657 ;;Total ram usage:        3 bytes
   658 ;; Hardware stack levels used: 1
   659 ;; This function calls:
   660 ;;		Nothing
   661 ;; This function is called by:
   662 ;;		_main
   663 ;; This function uses a non-reentrant model
   664 ;;
   665                           
   666     070A                     _Lcd_data:	
   667                           ;psect for function _Lcd_data
   668                           
   669                           
   670                           ;incstack = 0
   671                           ; Regs used in _Lcd_data: [wreg+status,2+status,0+btemp+1]
   672                           ;Lcd_data@i stored from wreg
   673     070A  00F7               	movwf	Lcd_data@i
   674     070B                     l629:
   675                           
   676                           ;Task3_pgm.c: 67: void Lcd_data(unsigned char i);Task3_pgm.c: 68: {;Task3_pgm.c: 69: POR
      +                          TC|=0X08;
   677     070B  1283               	bcf	3,5	;RP0=0, select bank0
   678     070C  1303               	bcf	3,6	;RP1=0, select bank0
   679     070D  1587               	bsf	7,3	;volatile
   680     070E                     l631:
   681                           
   682                           ;Task3_pgm.c: 70: PORTD=i;
   683     070E  0877               	movf	Lcd_data@i,w
   684     070F  0088               	movwf	8	;volatile
   685     0710                     l633:
   686                           
   687                           ;Task3_pgm.c: 71: PORTC|=0X01;
   688     0710  1407               	bsf	7,0	;volatile
   689     0711                     l635:
   690                           
   691                           ;Task3_pgm.c: 72: PORTC&= ~0X01;
   692     0711  30FE               	movlw	254
   693     0712  00FF               	movwf	btemp+1
   694     0713  087F               	movf	btemp+1,w
   695     0714  0587               	andwf	7,f	;volatile
   696     0715                     l637:
   697                           
   698                           ;Task3_pgm.c: 73: _delay((unsigned long)((100)*(6000000/4000.0)));
   699     0715  30C3               	movlw	195
   700     0716  00F6               	movwf	??_Lcd_data+1
   701     0717  30CD               	movlw	205
   702     0718  00F5               	movwf	??_Lcd_data
   703     0719                     u117:
   704     0719  0BF5               	decfsz	??_Lcd_data,f
   705     071A  2F19               	goto	u117
   706     071B  0BF6               	decfsz	??_Lcd_data+1,f
   707     071C  2F19               	goto	u117
   708     071D                     l44:
   709     071D  0008               	return
   710     071E                     __end_of_Lcd_data:
   711     007E                     btemp	set	126	;btemp
   712     007E                     wtemp0	set	126
   713                           
   714                           	psect	config
   715                           
   716                           ;Config register CONFIG @ 0x2007
   717                           ;	Oscillator Selection bits
   718                           ;	FOSC = EXTRC, RC oscillator
   719                           ;	Watchdog Timer Enable bit
   720                           ;	WDTE = OFF, WDT disabled
   721                           ;	Power-up Timer Enable bit
   722                           ;	PWRTE = OFF, PWRT disabled
   723                           ;	Brown-out Reset Enable bit
   724                           ;	BOREN = OFF, BOR disabled
   725                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   726                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   727                           ;	Data EEPROM Memory Code Protection bit
   728                           ;	CPD = OFF, Data EEPROM code protection off
   729                           ;	Flash Program Memory Write Enable bits
   730                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   731                           ;	In-Circuit Debugger Mode bit
   732                           ;	DEBUG = 0x1, unprogrammed default
   733                           ;	Flash Program Memory Code Protection bit
   734                           ;	CP = OFF, Code protection off
   735     2007                     	org	8199
   736     2007  3F3B               	dw	16187

Data Sizes:
    Strings     0
    Constant    0
    Data        5
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      14
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_init
    _init->_Lcd_command

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      45
                        _Lcd_command
                           _Lcd_data
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 2     2      0      15
                                              3 COMMON     2     2      0
                        _Lcd_command
 ---------------------------------------------------------------------------------
 (2) _Lcd_command                                          3     3      0      15
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_data                                             3     3      0      15
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_command
   _Lcd_data
   _init
     _Lcd_command

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       0       5        0.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      5       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       E      12        0.0%
ABS                  0      0       E       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Thu Jul 11 22:52:44 2024

                      _i 007A                        _m 007B                        _n 007C  
                      _x 007D                       l41 07D9                       l35 076F  
                     l44 071D                       l47 0734                       u10 0754  
                     u11 0753                       u20 076F                       u21 076E  
                     u37 0781                       u47 078F                       u57 079D  
                     u67 07AB                       u77 07B9                       u87 07C7  
                     u97 07D5                       _ar 0070                      l601 0777  
                    l611 0799                      l603 077D                      l621 07BD  
                    l613 07A1                      l605 0785                      l631 070E  
                    l623 07C3                      l615 07A7                      l607 078B  
                    l633 0710                      l625 07CB                      l617 07AF  
                    l609 0793                      l641 0740                      l635 0711  
                    l627 07D1                      l619 07B5                      l651 074E  
                    l637 0715                      l629 070B                      l661 075C  
                    l653 0754                      l591 071F                      l663 0765  
                    l647 0741                      l639 0735                      l593 0725  
                    l665 0769                      l649 074A                      l595 0727  
                    l659 0755                      l597 0728                      l599 0773  
                    u107 0730                      u117 0719                      fsr0 0004  
                    indf 0000                     _main 0735                     _init 0773  
                   btemp 007E                     start 0000      __end_of_Lcd_command 0735  
                  ?_main 0075                    ?_init 0075                    _PORTC 0007  
                  _PORTD 0008                    _TRISC 0087                    _TRISD 0088  
                  status 0003                    wtemp0 007E         __end_of_Lcd_data 071E  
        __initialization 07DA             __end_of_main 0773             __end_of_init 07DA  
                 ??_main 007A                   ??_init 0078              _Lcd_command 071E  
           __pdataCOMMON 0070  __end_of__initialization 07FC           __pcstackCOMMON 0075  
              ?_Lcd_data 0075               __pmaintext 0735               ??_Lcd_data 0075  
                __ptext1 0773                  __ptext2 071E                  __ptext3 070A  
   end_of_initialization 07FC             ?_Lcd_command 0075                Lcd_data@i 0077  
          __pidataCOMMON 0705      start_initialization 07DA              __pbssCOMMON 007A  
              ___latbits 0002                 _Lcd_data 070A             Lcd_command@i 0077  
          ??_Lcd_command 0075  
