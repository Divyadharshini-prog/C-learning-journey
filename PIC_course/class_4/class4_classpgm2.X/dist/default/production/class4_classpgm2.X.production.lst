

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Fri Jul 26 17:21:57 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    22                           	dabs	1,0x7E,2
    23     0000                     
    24                           ; Generated 12/10/2023 GMT
    25                           ; 
    26                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution. Publication is not required when
    40                           ;        this file is used in an embedded application.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F877A Definitions
    56                           ; 
    57                           ; SFR Addresses
    58     0000                     	;# 
    59     0001                     	;# 
    60     0002                     	;# 
    61     0003                     	;# 
    62     0004                     	;# 
    63     0005                     	;# 
    64     0006                     	;# 
    65     0007                     	;# 
    66     0008                     	;# 
    67     0009                     	;# 
    68     000A                     	;# 
    69     000B                     	;# 
    70     000C                     	;# 
    71     000D                     	;# 
    72     000E                     	;# 
    73     000E                     	;# 
    74     000F                     	;# 
    75     0010                     	;# 
    76     0011                     	;# 
    77     0012                     	;# 
    78     0013                     	;# 
    79     0014                     	;# 
    80     0015                     	;# 
    81     0015                     	;# 
    82     0016                     	;# 
    83     0017                     	;# 
    84     0018                     	;# 
    85     0019                     	;# 
    86     001A                     	;# 
    87     001B                     	;# 
    88     001B                     	;# 
    89     001C                     	;# 
    90     001D                     	;# 
    91     001E                     	;# 
    92     001F                     	;# 
    93     0081                     	;# 
    94     0085                     	;# 
    95     0086                     	;# 
    96     0087                     	;# 
    97     0088                     	;# 
    98     0089                     	;# 
    99     008C                     	;# 
   100     008D                     	;# 
   101     008E                     	;# 
   102     0091                     	;# 
   103     0092                     	;# 
   104     0093                     	;# 
   105     0094                     	;# 
   106     0098                     	;# 
   107     0099                     	;# 
   108     009C                     	;# 
   109     009D                     	;# 
   110     009E                     	;# 
   111     009F                     	;# 
   112     010C                     	;# 
   113     010D                     	;# 
   114     010E                     	;# 
   115     010F                     	;# 
   116     018C                     	;# 
   117     018D                     	;# 
   118     0000                     	;# 
   119     0001                     	;# 
   120     0002                     	;# 
   121     0003                     	;# 
   122     0004                     	;# 
   123     0005                     	;# 
   124     0006                     	;# 
   125     0007                     	;# 
   126     0008                     	;# 
   127     0009                     	;# 
   128     000A                     	;# 
   129     000B                     	;# 
   130     000C                     	;# 
   131     000D                     	;# 
   132     000E                     	;# 
   133     000E                     	;# 
   134     000F                     	;# 
   135     0010                     	;# 
   136     0011                     	;# 
   137     0012                     	;# 
   138     0013                     	;# 
   139     0014                     	;# 
   140     0015                     	;# 
   141     0015                     	;# 
   142     0016                     	;# 
   143     0017                     	;# 
   144     0018                     	;# 
   145     0019                     	;# 
   146     001A                     	;# 
   147     001B                     	;# 
   148     001B                     	;# 
   149     001C                     	;# 
   150     001D                     	;# 
   151     001E                     	;# 
   152     001F                     	;# 
   153     0081                     	;# 
   154     0085                     	;# 
   155     0086                     	;# 
   156     0087                     	;# 
   157     0088                     	;# 
   158     0089                     	;# 
   159     008C                     	;# 
   160     008D                     	;# 
   161     008E                     	;# 
   162     0091                     	;# 
   163     0092                     	;# 
   164     0093                     	;# 
   165     0094                     	;# 
   166     0098                     	;# 
   167     0099                     	;# 
   168     009C                     	;# 
   169     009D                     	;# 
   170     009E                     	;# 
   171     009F                     	;# 
   172     010C                     	;# 
   173     010D                     	;# 
   174     010E                     	;# 
   175     010F                     	;# 
   176     018C                     	;# 
   177     018D                     	;# 
   178                           
   179                           	psect	idataBANK0
   180     0565                     __pidataBANK0:
   181                           
   182                           ;initializer for _array
   183     0565  3453               	retlw	83
   184     0566  3445               	retlw	69
   185     0567  3454               	retlw	84
   186     0568  3420               	retlw	32
   187     0569  3453               	retlw	83
   188     056A  3450               	retlw	80
   189     056B  3444               	retlw	68
   190     056C  343A               	retlw	58
   191     056D  3420               	retlw	32
   192     056E  3420               	retlw	32
   193     056F  3420               	retlw	32
   194     0570  3420               	retlw	32
   195     0571  3472               	retlw	114
   196     0572  3470               	retlw	112
   197     0573  346D               	retlw	109
   198     0574  3400               	retlw	0
   199     0575  3400               	retlw	0
   200     0576  3400               	retlw	0
   201     0577  3400               	retlw	0
   202     0578  3400               	retlw	0
   203     0579  3400               	retlw	0
   204     057A  3400               	retlw	0
   205     057B  3400               	retlw	0
   206     057C  3400               	retlw	0
   207     057D  3400               	retlw	0
   208     057E  3400               	retlw	0
   209     057F  3400               	retlw	0
   210     0580  3400               	retlw	0
   211     0581  3400               	retlw	0
   212     0582  3400               	retlw	0
   213     0008                     _PORTD	set	8
   214     0007                     _PORTC	set	7
   215     0006                     _PORTB	set	6
   216     0081                     _OPTION_REG	set	129
   217     0088                     _TRISD	set	136
   218     0086                     _TRISB	set	134
   219     0087                     _TRISC	set	135
   220                           
   221                           	psect	cinit
   222     07DE                     start_initialization:	
   223                           ; #config settings
   224                           
   225     07DE                     __initialization:
   226                           
   227                           ; Initialize objects allocated to BANK0
   228     07DE  1383               	bcf	3,7	;select IRP bank0
   229     07DF  303E               	movlw	low (__pdataBANK0+30)
   230     07E0  00FD               	movwf	btemp+-1
   231     07E1  3005               	movlw	high __pidataBANK0
   232     07E2  00FE               	movwf	btemp
   233     07E3  3065               	movlw	low __pidataBANK0
   234     07E4  00FF               	movwf	btemp+1
   235     07E5  3020               	movlw	low __pdataBANK0
   236     07E6  0084               	movwf	4
   237     07E7  120A  118A  2516  120A  118A  	fcall	init_ram0
   238                           
   239                           ; Clear objects allocated to BANK0
   240     07EC  01BE               	clrf	__pbssBANK0& (0+127)
   241     07ED  01BF               	clrf	(__pbssBANK0+1)& (0+127)
   242     07EE  01C0               	clrf	(__pbssBANK0+2)& (0+127)
   243     07EF  01C1               	clrf	(__pbssBANK0+3)& (0+127)
   244     07F0  01C2               	clrf	(__pbssBANK0+4)& (0+127)
   245     07F1  01C3               	clrf	(__pbssBANK0+5)& (0+127)
   246     07F2  01C4               	clrf	(__pbssBANK0+6)& (0+127)
   247     07F3  01C5               	clrf	(__pbssBANK0+7)& (0+127)
   248     07F4  01C6               	clrf	(__pbssBANK0+8)& (0+127)
   249     07F5  01C7               	clrf	(__pbssBANK0+9)& (0+127)
   250     07F6  01C8               	clrf	(__pbssBANK0+10)& (0+127)
   251     07F7  01C9               	clrf	(__pbssBANK0+11)& (0+127)
   252     07F8  01CA               	clrf	(__pbssBANK0+12)& (0+127)
   253     07F9  01CB               	clrf	(__pbssBANK0+13)& (0+127)
   254     07FA  01CC               	clrf	(__pbssBANK0+14)& (0+127)
   255                           
   256                           ; Clear objects allocated to COMMON
   257     07FB  01FD               	clrf	__pbssCOMMON& (0+127)
   258     07FC                     end_of_initialization:	
   259                           ;End of C runtime variable initialization code
   260                           
   261     07FC                     __end_of__initialization:
   262     07FC  0183               	clrf	3
   263     07FD  120A  118A  2D04   	ljmp	_main	;jump to C main() function
   264                           
   265                           	psect	bssCOMMON
   266     007D                     __pbssCOMMON:
   267     007D                     _m:
   268     007D                     	ds	1
   269                           
   270                           	psect	bssBANK0
   271     003E                     __pbssBANK0:
   272     003E                     _i:
   273     003E                     	ds	2
   274     0040                     _j:
   275     0040                     	ds	2
   276     0042                     _d1:
   277     0042                     	ds	2
   278     0044                     _d2:
   279     0044                     	ds	2
   280     0046                     _d3:
   281     0046                     	ds	2
   282     0048                     _d4:
   283     0048                     	ds	2
   284     004A                     _value:
   285     004A                     	ds	1
   286     004B                     _n:
   287     004B                     	ds	1
   288     004C                     _x:
   289     004C                     	ds	1
   290                           
   291                           	psect	dataBANK0
   292     0020                     __pdataBANK0:
   293     0020                     _array:
   294     0020                     	ds	30
   295                           
   296                           	psect	inittext
   297     0512                     init_fetch0:	
   298                           ;	Called with low address in FSR and high address in W
   299                           
   300     0512  087E               	movf	btemp,w
   301     0513  008A               	movwf	10
   302     0514  087F               	movf	btemp+1,w
   303     0515  0082               	movwf	2
   304     0516                     init_ram0:	
   305                           ;Called with:
   306                           ;	high address of idata address in btemp 
   307                           ;	low address of idata address in btemp+1 
   308                           ;	low address of data in FSR
   309                           ;	high address + 1 of data in btemp-1
   310                           
   311     0516  120A  118A  2512  120A  118A  	fcall	init_fetch0
   312     051B  0080               	movwf	0
   313     051C  0A84               	incf	4,f
   314     051D  0804               	movf	4,w
   315     051E  067D               	xorwf	btemp+-1,w
   316     051F  1903               	btfsc	3,2
   317     0520  3400               	retlw	0
   318     0521  0AFF               	incf	btemp+1,f
   319     0522  1903               	btfsc	3,2
   320     0523  0AFE               	incf	btemp,f
   321     0524  2D16               	goto	init_ram0
   322                           
   323                           	psect	cstackCOMMON
   324     0070                     __pcstackCOMMON:
   325     0070                     ?_init:
   326     0070                     ?_keyscan:	
   327                           ; 1 bytes @ 0x0
   328                           
   329     0070                     ?_Lcd_command:	
   330                           ; 1 bytes @ 0x0
   331                           
   332     0070                     ??_Lcd_command:	
   333                           ; 1 bytes @ 0x0
   334                           
   335     0070                     ?_Lcd_data:	
   336                           ; 1 bytes @ 0x0
   337                           
   338     0070                     ??_Lcd_data:	
   339                           ; 1 bytes @ 0x0
   340                           
   341     0070                     ?_main:	
   342                           ; 1 bytes @ 0x0
   343                           
   344     0070                     ?___bmul:	
   345                           ; 1 bytes @ 0x0
   346                           
   347     0070                     ?___wmul:	
   348                           ; 1 bytes @ 0x0
   349                           
   350     0070                     ___bmul@multiplicand:	
   351                           ; 2 bytes @ 0x0
   352                           
   353     0070                     ___wmul@multiplier:	
   354                           ; 1 bytes @ 0x0
   355                           
   356                           
   357                           ; 2 bytes @ 0x0
   358     0070                     	ds	1
   359     0071                     ??___bmul:
   360     0071                     ___bmul@product:	
   361                           ; 1 bytes @ 0x1
   362                           
   363                           
   364                           ; 1 bytes @ 0x1
   365     0071                     	ds	1
   366     0072                     Lcd_command@i:
   367     0072                     Lcd_data@i:	
   368                           ; 1 bytes @ 0x2
   369                           
   370     0072                     ___bmul@multiplier:	
   371                           ; 1 bytes @ 0x2
   372                           
   373     0072                     ___wmul@multiplicand:	
   374                           ; 1 bytes @ 0x2
   375                           
   376                           
   377                           ; 2 bytes @ 0x2
   378     0072                     	ds	1
   379     0073                     ??_init:
   380                           
   381                           ; 1 bytes @ 0x3
   382     0073                     	ds	1
   383     0074                     ??___wmul:
   384     0074                     ___wmul@product:	
   385                           ; 1 bytes @ 0x4
   386                           
   387                           
   388                           ; 2 bytes @ 0x4
   389     0074                     	ds	2
   390     0076                     ?___lwdiv:
   391     0076                     ___lwdiv@divisor:	
   392                           ; 2 bytes @ 0x6
   393                           
   394                           
   395                           ; 2 bytes @ 0x6
   396     0076                     	ds	2
   397     0078                     ___lwdiv@dividend:
   398                           
   399                           ; 2 bytes @ 0x8
   400     0078                     	ds	2
   401     007A                     ??___lwdiv:
   402     007A                     ___lwdiv@quotient:	
   403                           ; 1 bytes @ 0xA
   404                           
   405                           
   406                           ; 2 bytes @ 0xA
   407     007A                     	ds	2
   408     007C                     ___lwdiv@counter:
   409                           
   410                           ; 1 bytes @ 0xC
   411     007C                     	ds	1
   412     007D                     ??_keyscan:
   413     007D                     ??_main:	
   414                           ; 1 bytes @ 0xD
   415                           
   416                           
   417                           	psect	cstackBANK0
   418     004D                     __pcstackBANK0:	
   419                           ; 1 bytes @ 0xD
   420                           
   421     004D                     ?_Lcd_output:
   422     004D                     Lcd_output@i:	
   423                           ; 1 bytes @ 0x0
   424                           
   425                           
   426                           ; 2 bytes @ 0x0
   427     004D                     	ds	2
   428     004F                     ??_Lcd_output:
   429                           
   430                           ; 1 bytes @ 0x2
   431     004F                     	ds	6
   432                           
   433                           	psect	maintext
   434     0504                     __pmaintext:	
   435 ;;
   436 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   437 ;;
   438 ;; *************** function _main *****************
   439 ;; Defined at:
   440 ;;		line 31 in file "class4_class1pgm.c"
   441 ;; Parameters:    Size  Location     Type
   442 ;;		None
   443 ;; Auto vars:     Size  Location     Type
   444 ;;		None
   445 ;; Return value:  Size  Location     Type
   446 ;;                  1    wreg      void 
   447 ;; Registers used:
   448 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   449 ;; Tracked objects:
   450 ;;		On entry : B00/0
   451 ;;		On exit  : 0/0
   452 ;;		Unchanged: 0/0
   453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   454 ;;      Params:         0       0       0       0       0
   455 ;;      Locals:         0       0       0       0       0
   456 ;;      Temps:          0       0       0       0       0
   457 ;;      Totals:         0       0       0       0       0
   458 ;;Total ram usage:        0 bytes
   459 ;; Hardware stack levels required when called: 3
   460 ;; This function calls:
   461 ;;		_init
   462 ;;		_keyscan
   463 ;; This function is called by:
   464 ;;		Startup code after reset
   465 ;; This function uses a non-reentrant model
   466 ;;
   467                           
   468     0504                     _main:	
   469                           ;psect for function _main
   470                           
   471     0504                     l983:	
   472                           ;incstack = 0
   473                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   474                           
   475                           
   476                           ;class4_class1pgm.c: 33:     init();
   477     0504  120A  118A  25EC  120A  118A  	fcall	_init
   478     0509                     l985:
   479                           
   480                           ;class4_class1pgm.c: 35:     {;class4_class1pgm.c: 36:         keyscan();
   481     0509  120A  118A  2662  120A  118A  	fcall	_keyscan
   482     050E  2D09               	goto	l985
   483     050F  120A  118A  2800   	ljmp	start
   484     0512                     __end_of_main:
   485                           
   486                           	psect	text1
   487     0662                     __ptext1:	
   488 ;; *************** function _keyscan *****************
   489 ;; Defined at:
   490 ;;		line 66 in file "class4_class1pgm.c"
   491 ;; Parameters:    Size  Location     Type
   492 ;;		None
   493 ;; Auto vars:     Size  Location     Type
   494 ;;		None
   495 ;; Return value:  Size  Location     Type
   496 ;;                  1    wreg      void 
   497 ;; Registers used:
   498 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   499 ;; Tracked objects:
   500 ;;		On entry : 0/0
   501 ;;		On exit  : 0/0
   502 ;;		Unchanged: 0/0
   503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   504 ;;      Params:         0       0       0       0       0
   505 ;;      Locals:         0       0       0       0       0
   506 ;;      Temps:          0       0       0       0       0
   507 ;;      Totals:         0       0       0       0       0
   508 ;;Total ram usage:        0 bytes
   509 ;; Hardware stack levels used: 1
   510 ;; Hardware stack levels required when called: 2
   511 ;; This function calls:
   512 ;;		_Lcd_command
   513 ;;		_Lcd_data
   514 ;;		_Lcd_output
   515 ;; This function is called by:
   516 ;;		_main
   517 ;; This function uses a non-reentrant model
   518 ;;
   519                           
   520     0662                     _keyscan:	
   521                           ;psect for function _keyscan
   522                           
   523     0662                     l923:	
   524                           ;incstack = 0
   525                           ; Regs used in _keyscan: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   526                           
   527                           
   528                           ;class4_class1pgm.c: 68:     value = PORTB & 0xF0;
   529     0662  1283               	bcf	3,5	;RP0=0, select bank0
   530     0663  1303               	bcf	3,6	;RP1=0, select bank0
   531     0664  0806               	movf	6,w	;volatile
   532     0665  39F0               	andlw	240
   533     0666  00CA               	movwf	_value
   534                           
   535                           ;class4_class1pgm.c: 70:     switch (value)
   536     0667  2EFE               	goto	l981
   537     0668                     l925:
   538                           
   539                           ;class4_class1pgm.c: 73:             Lcd_command(0x80);
   540     0668  3080               	movlw	128
   541     0669  120A  118A  254E  120A  118A  	fcall	_Lcd_command
   542     066E                     l927:
   543                           
   544                           ;class4_class1pgm.c: 74:             for (x = 0; x < 8; x++)
   545     066E  1283               	bcf	3,5	;RP0=0, select bank0
   546     066F  1303               	bcf	3,6	;RP1=0, select bank0
   547     0670  01CC               	clrf	_x
   548     0671                     l933:
   549                           
   550                           ;class4_class1pgm.c: 75:             {;class4_class1pgm.c: 76:                 Lcd_data(
      +                          array[x]);
   551     0671  084C               	movf	_x,w
   552     0672  3E20               	addlw	(low (_array| 0))& (0+255)
   553     0673  0084               	movwf	4
   554     0674  1383               	bcf	3,7	;select IRP bank0
   555     0675  0800               	movf	0,w
   556     0676  120A  118A  2525  120A  118A  	fcall	_Lcd_data
   557     067B                     l935:
   558                           
   559                           ;class4_class1pgm.c: 77:             }
   560     067B  3001               	movlw	1
   561     067C  00FF               	movwf	btemp+1
   562     067D  087F               	movf	btemp+1,w
   563     067E  1283               	bcf	3,5	;RP0=0, select bank0
   564     067F  1303               	bcf	3,6	;RP1=0, select bank0
   565     0680  07CC               	addwf	_x,f
   566     0681                     l937:
   567     0681  3008               	movlw	8
   568     0682  024C               	subwf	_x,w
   569     0683  1C03               	skipc
   570     0684  2E86               	goto	u311
   571     0685  2E87               	goto	u310
   572     0686                     u311:
   573     0686  2E71               	goto	l933
   574     0687                     u310:
   575     0687                     l939:
   576                           
   577                           ;class4_class1pgm.c: 78:             Lcd_command(0x8C);
   578     0687  308C               	movlw	140
   579     0688  120A  118A  254E  120A  118A  	fcall	_Lcd_command
   580     068D                     l941:
   581                           
   582                           ;class4_class1pgm.c: 79:             for (x = 12; x < 15; x++)
   583     068D  300C               	movlw	12
   584     068E  1283               	bcf	3,5	;RP0=0, select bank0
   585     068F  1303               	bcf	3,6	;RP1=0, select bank0
   586     0690  00CC               	movwf	_x
   587     0691                     l947:
   588                           
   589                           ;class4_class1pgm.c: 80:             {;class4_class1pgm.c: 81:                 Lcd_data(
      +                          array[x]);
   590     0691  084C               	movf	_x,w
   591     0692  3E20               	addlw	(low (_array| 0))& (0+255)
   592     0693  0084               	movwf	4
   593     0694  1383               	bcf	3,7	;select IRP bank0
   594     0695  0800               	movf	0,w
   595     0696  120A  118A  2525  120A  118A  	fcall	_Lcd_data
   596     069B                     l949:
   597                           
   598                           ;class4_class1pgm.c: 82:             }
   599     069B  3001               	movlw	1
   600     069C  00FF               	movwf	btemp+1
   601     069D  087F               	movf	btemp+1,w
   602     069E  1283               	bcf	3,5	;RP0=0, select bank0
   603     069F  1303               	bcf	3,6	;RP1=0, select bank0
   604     06A0  07CC               	addwf	_x,f
   605     06A1                     l951:
   606     06A1  300F               	movlw	15
   607     06A2  024C               	subwf	_x,w
   608     06A3  1C03               	skipc
   609     06A4  2EA6               	goto	u321
   610     06A5  2EA7               	goto	u320
   611     06A6                     u321:
   612     06A6  2E91               	goto	l947
   613     06A7                     u320:
   614     06A7                     l953:
   615                           
   616                           ;class4_class1pgm.c: 83:             Lcd_command(0x88);
   617     06A7  3088               	movlw	136
   618     06A8  120A  118A  254E  120A  118A  	fcall	_Lcd_command
   619                           
   620                           ;class4_class1pgm.c: 84:             Lcd_output(j);
   621     06AD  1283               	bcf	3,5	;RP0=0, select bank0
   622     06AE  1303               	bcf	3,6	;RP1=0, select bank0
   623     06AF  0841               	movf	_j+1,w
   624     06B0  00CE               	movwf	Lcd_output@i+1
   625     06B1  0840               	movf	_j,w
   626     06B2  00CD               	movwf	Lcd_output@i
   627     06B3  120A  118A  270D  120A  118A  	fcall	_Lcd_output
   628                           
   629                           ;class4_class1pgm.c: 85:             break;
   630     06B8  2F0C               	goto	l74
   631     06B9                     l955:
   632                           
   633                           ;class4_class1pgm.c: 88:             j++;
   634     06B9  3001               	movlw	1
   635     06BA  07C0               	addwf	_j,f
   636     06BB  1803               	skipnc
   637     06BC  0AC1               	incf	_j+1,f
   638     06BD  3000               	movlw	0
   639     06BE  07C1               	addwf	_j+1,f
   640                           
   641                           ;class4_class1pgm.c: 89:             if (j > 5000)
   642     06BF  3013               	movlw	19
   643     06C0  0241               	subwf	_j+1,w
   644     06C1  3089               	movlw	137
   645     06C2  1903               	skipnz
   646     06C3  0240               	subwf	_j,w
   647     06C4  1C03               	skipc
   648     06C5  2EC7               	goto	u331
   649     06C6  2EC8               	goto	u330
   650     06C7                     u331:
   651     06C7  2ECC               	goto	l959
   652     06C8                     u330:
   653     06C8                     l957:
   654                           
   655                           ;class4_class1pgm.c: 90:             {;class4_class1pgm.c: 91:                 j = 5000;
   656     06C8  3088               	movlw	136
   657     06C9  00C0               	movwf	_j
   658     06CA  3013               	movlw	19
   659     06CB  00C1               	movwf	_j+1
   660     06CC                     l959:
   661                           
   662                           ;class4_class1pgm.c: 93:             Lcd_command(0x88);
   663     06CC  3088               	movlw	136
   664     06CD  120A  118A  254E  120A  118A  	fcall	_Lcd_command
   665     06D2                     l961:
   666                           
   667                           ;class4_class1pgm.c: 94:             Lcd_output(j);
   668     06D2  1283               	bcf	3,5	;RP0=0, select bank0
   669     06D3  1303               	bcf	3,6	;RP1=0, select bank0
   670     06D4  0841               	movf	_j+1,w
   671     06D5  00CE               	movwf	Lcd_output@i+1
   672     06D6  0840               	movf	_j,w
   673     06D7  00CD               	movwf	Lcd_output@i
   674     06D8  120A  118A  270D  120A  118A  	fcall	_Lcd_output
   675                           
   676                           ;class4_class1pgm.c: 95:             break;
   677     06DD  2F0C               	goto	l74
   678     06DE                     l963:
   679                           
   680                           ;class4_class1pgm.c: 98:             j--;
   681     06DE  3001               	movlw	1
   682     06DF  02C0               	subwf	_j,f
   683     06E0  3000               	movlw	0
   684     06E1  1C03               	skipc
   685     06E2  03C1               	decf	_j+1,f
   686     06E3  02C1               	subwf	_j+1,f
   687     06E4                     l965:
   688                           
   689                           ;class4_class1pgm.c: 99:             if (j < 1)
   690     06E4  0840               	movf	_j,w
   691     06E5  0441               	iorwf	_j+1,w
   692     06E6  1D03               	btfss	3,2
   693     06E7  2EE9               	goto	u341
   694     06E8  2EEA               	goto	u340
   695     06E9                     u341:
   696     06E9  2EEE               	goto	l969
   697     06EA                     u340:
   698     06EA                     l967:
   699                           
   700                           ;class4_class1pgm.c: 100:             {;class4_class1pgm.c: 101:                 j = 1;
   701     06EA  3001               	movlw	1
   702     06EB  00C0               	movwf	_j
   703     06EC  3000               	movlw	0
   704     06ED  00C1               	movwf	_j+1
   705     06EE                     l969:
   706                           
   707                           ;class4_class1pgm.c: 103:             Lcd_command(0x88);
   708     06EE  3088               	movlw	136
   709     06EF  120A  118A  254E  120A  118A  	fcall	_Lcd_command
   710     06F4  2ED2               	goto	l961
   711     06F5                     l973:
   712                           
   713                           ;class4_class1pgm.c: 108:             j = 0;
   714     06F5  01C0               	clrf	_j
   715     06F6  01C1               	clrf	_j+1
   716     06F7                     l975:
   717                           
   718                           ;class4_class1pgm.c: 109:             Lcd_command(0x88);
   719     06F7  3088               	movlw	136
   720     06F8  120A  118A  254E  120A  118A  	fcall	_Lcd_command
   721     06FD  2ED2               	goto	l961
   722     06FE                     l981:
   723     06FE  084A               	movf	_value,w
   724                           
   725                           ; Switch size 1, requested type "simple"
   726                           ; Number of cases is 4, Range of values is 112 to 224
   727                           ; switch strategies available:
   728                           ; Name         Instructions Cycles
   729                           ; simple_byte           13     7 (average)
   730                           ; jumptable            263     9 (fixed)
   731                           ;	Chosen strategy is simple_byte
   732     06FF  3A70               	xorlw	112	; case 112
   733     0700  1903               	skipnz
   734     0701  2EF5               	goto	l973
   735     0702  3AC0               	xorlw	192	; case 176
   736     0703  1903               	skipnz
   737     0704  2EDE               	goto	l963
   738     0705  3A60               	xorlw	96	; case 208
   739     0706  1903               	skipnz
   740     0707  2EB9               	goto	l955
   741     0708  3A30               	xorlw	48	; case 224
   742     0709  1903               	skipnz
   743     070A  2E68               	goto	l925
   744     070B  2F0C               	goto	l74
   745     070C                     l74:
   746     070C  0008               	return
   747     070D                     __end_of_keyscan:
   748                           
   749                           	psect	text2
   750     070D                     __ptext2:	
   751 ;; *************** function _Lcd_output *****************
   752 ;; Defined at:
   753 ;;		line 132 in file "class4_class1pgm.c"
   754 ;; Parameters:    Size  Location     Type
   755 ;;  i               2    0[BANK0 ] unsigned int 
   756 ;; Auto vars:     Size  Location     Type
   757 ;;		None
   758 ;; Return value:  Size  Location     Type
   759 ;;                  1    wreg      void 
   760 ;; Registers used:
   761 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   762 ;; Tracked objects:
   763 ;;		On entry : 0/0
   764 ;;		On exit  : 0/0
   765 ;;		Unchanged: 0/0
   766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   767 ;;      Params:         0       2       0       0       0
   768 ;;      Locals:         0       0       0       0       0
   769 ;;      Temps:          0       6       0       0       0
   770 ;;      Totals:         0       8       0       0       0
   771 ;;Total ram usage:        8 bytes
   772 ;; Hardware stack levels used: 1
   773 ;; Hardware stack levels required when called: 1
   774 ;; This function calls:
   775 ;;		_Lcd_data
   776 ;;		___bmul
   777 ;;		___lwdiv
   778 ;;		___wmul
   779 ;; This function is called by:
   780 ;;		_keyscan
   781 ;; This function uses a non-reentrant model
   782 ;;
   783                           
   784     070D                     _Lcd_output:	
   785                           ;psect for function _Lcd_output
   786                           
   787     070D                     l881:	
   788                           ;incstack = 0
   789                           ; Regs used in _Lcd_output: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   790                           
   791                           
   792                           ;class4_class1pgm.c: 133:     d4 = (unsigned char) (i / 1000);
   793     070D  30E8               	movlw	232
   794     070E  00F6               	movwf	___lwdiv@divisor
   795     070F  3003               	movlw	3
   796     0710  00F7               	movwf	___lwdiv@divisor+1
   797     0711  1283               	bcf	3,5	;RP0=0, select bank0
   798     0712  1303               	bcf	3,6	;RP1=0, select bank0
   799     0713  084E               	movf	Lcd_output@i+1,w
   800     0714  00F9               	movwf	___lwdiv@dividend+1
   801     0715  084D               	movf	Lcd_output@i,w
   802     0716  00F8               	movwf	___lwdiv@dividend
   803     0717  120A  118A  25A8  120A  118A  	fcall	___lwdiv
   804     071C  0876               	movf	?___lwdiv,w
   805     071D  1283               	bcf	3,5	;RP0=0, select bank0
   806     071E  1303               	bcf	3,6	;RP1=0, select bank0
   807     071F  00CF               	movwf	??_Lcd_output
   808     0720  01D0               	clrf	??_Lcd_output+1
   809     0721  084F               	movf	??_Lcd_output,w
   810     0722  00C8               	movwf	_d4
   811     0723  0850               	movf	??_Lcd_output+1,w
   812     0724  00C9               	movwf	_d4+1
   813                           
   814                           ;class4_class1pgm.c: 134:     d3 = (unsigned char) ((i - (d4 * 1000)) / 100);
   815     0725  3064               	movlw	100
   816     0726  00F6               	movwf	___lwdiv@divisor
   817     0727  3000               	movlw	0
   818     0728  00F7               	movwf	___lwdiv@divisor+1
   819     0729  0849               	movf	_d4+1,w
   820     072A  00F1               	movwf	___wmul@multiplier+1
   821     072B  0848               	movf	_d4,w
   822     072C  00F0               	movwf	___wmul@multiplier
   823     072D  3018               	movlw	24
   824     072E  00F2               	movwf	___wmul@multiplicand
   825     072F  30FC               	movlw	252
   826     0730  00F3               	movwf	___wmul@multiplicand+1
   827     0731  120A  118A  2583  120A  118A  	fcall	___wmul
   828     0736  1283               	bcf	3,5	;RP0=0, select bank0
   829     0737  1303               	bcf	3,6	;RP1=0, select bank0
   830     0738  084D               	movf	Lcd_output@i,w
   831     0739  0770               	addwf	?___wmul,w
   832     073A  00F8               	movwf	___lwdiv@dividend
   833     073B  084E               	movf	Lcd_output@i+1,w
   834     073C  1803               	skipnc
   835     073D  0A4E               	incf	Lcd_output@i+1,w
   836     073E  0771               	addwf	?___wmul+1,w
   837     073F  00F9               	movwf	___lwdiv@dividend+1
   838     0740  120A  118A  25A8  120A  118A  	fcall	___lwdiv
   839     0745  0876               	movf	?___lwdiv,w
   840     0746  1283               	bcf	3,5	;RP0=0, select bank0
   841     0747  1303               	bcf	3,6	;RP1=0, select bank0
   842     0748  00CF               	movwf	??_Lcd_output
   843     0749  01D0               	clrf	??_Lcd_output+1
   844     074A  084F               	movf	??_Lcd_output,w
   845     074B  00C6               	movwf	_d3
   846     074C  0850               	movf	??_Lcd_output+1,w
   847     074D  00C7               	movwf	_d3+1
   848                           
   849                           ;class4_class1pgm.c: 135:     d2 = (unsigned char) ((i - (d4 * 1000) - (d3 * 100)) / 10)
      +                          ;
   850     074E  300A               	movlw	10
   851     074F  00F6               	movwf	___lwdiv@divisor
   852     0750  3000               	movlw	0
   853     0751  00F7               	movwf	___lwdiv@divisor+1
   854     0752  0849               	movf	_d4+1,w
   855     0753  00F1               	movwf	___wmul@multiplier+1
   856     0754  0848               	movf	_d4,w
   857     0755  00F0               	movwf	___wmul@multiplier
   858     0756  3018               	movlw	24
   859     0757  00F2               	movwf	___wmul@multiplicand
   860     0758  30FC               	movlw	252
   861     0759  00F3               	movwf	___wmul@multiplicand+1
   862     075A  120A  118A  2583  120A  118A  	fcall	___wmul
   863     075F  0870               	movf	?___wmul,w
   864     0760  1283               	bcf	3,5	;RP0=0, select bank0
   865     0761  1303               	bcf	3,6	;RP1=0, select bank0
   866     0762  00CF               	movwf	??_Lcd_output
   867     0763  0871               	movf	?___wmul+1,w
   868     0764  00D0               	movwf	??_Lcd_output+1
   869     0765  0847               	movf	_d3+1,w
   870     0766  00F1               	movwf	___wmul@multiplier+1
   871     0767  0846               	movf	_d3,w
   872     0768  00F0               	movwf	___wmul@multiplier
   873     0769  309C               	movlw	156
   874     076A  00F2               	movwf	___wmul@multiplicand
   875     076B  30FF               	movlw	255
   876     076C  00F3               	movwf	___wmul@multiplicand+1
   877     076D  120A  118A  2583  120A  118A  	fcall	___wmul
   878     0772  0870               	movf	?___wmul,w
   879     0773  1283               	bcf	3,5	;RP0=0, select bank0
   880     0774  1303               	bcf	3,6	;RP1=0, select bank0
   881     0775  074F               	addwf	??_Lcd_output,w
   882     0776  00D1               	movwf	??_Lcd_output+2
   883     0777  0871               	movf	?___wmul+1,w
   884     0778  1803               	skipnc
   885     0779  0A71               	incf	?___wmul+1,w
   886     077A  0750               	addwf	??_Lcd_output+1,w
   887     077B  00D2               	movwf	??_Lcd_output+3
   888     077C  084D               	movf	Lcd_output@i,w
   889     077D  0751               	addwf	??_Lcd_output+2,w
   890     077E  00F8               	movwf	___lwdiv@dividend
   891     077F  084E               	movf	Lcd_output@i+1,w
   892     0780  1803               	skipnc
   893     0781  0A4E               	incf	Lcd_output@i+1,w
   894     0782  0752               	addwf	??_Lcd_output+3,w
   895     0783  00F9               	movwf	___lwdiv@dividend+1
   896     0784  120A  118A  25A8  120A  118A  	fcall	___lwdiv
   897     0789  0876               	movf	?___lwdiv,w
   898     078A  1283               	bcf	3,5	;RP0=0, select bank0
   899     078B  1303               	bcf	3,6	;RP1=0, select bank0
   900     078C  00D3               	movwf	??_Lcd_output+4
   901     078D  01D4               	clrf	??_Lcd_output+5
   902     078E  0853               	movf	??_Lcd_output+4,w
   903     078F  00C4               	movwf	_d2
   904     0790  0854               	movf	??_Lcd_output+5,w
   905     0791  00C5               	movwf	_d2+1
   906                           
   907                           ;class4_class1pgm.c: 136:     d1 = (unsigned char) (i - (d4 * 1000) - (d3 * 100) - (d2 *
      +                           10));
   908     0792  3018               	movlw	24
   909     0793  00F0               	movwf	___bmul@multiplicand
   910     0794  0848               	movf	_d4,w
   911     0795  120A  118A  2539  120A  118A  	fcall	___bmul
   912     079A  1283               	bcf	3,5	;RP0=0, select bank0
   913     079B  1303               	bcf	3,6	;RP1=0, select bank0
   914     079C  00CF               	movwf	??_Lcd_output
   915     079D  309C               	movlw	156
   916     079E  00F0               	movwf	___bmul@multiplicand
   917     079F  0846               	movf	_d3,w
   918     07A0  120A  118A  2539  120A  118A  	fcall	___bmul
   919     07A5  1283               	bcf	3,5	;RP0=0, select bank0
   920     07A6  1303               	bcf	3,6	;RP1=0, select bank0
   921     07A7  00D0               	movwf	??_Lcd_output+1
   922     07A8  30F6               	movlw	246
   923     07A9  00F0               	movwf	___bmul@multiplicand
   924     07AA  0844               	movf	_d2,w
   925     07AB  120A  118A  2539  120A  118A  	fcall	___bmul
   926     07B0  1283               	bcf	3,5	;RP0=0, select bank0
   927     07B1  1303               	bcf	3,6	;RP1=0, select bank0
   928     07B2  0750               	addwf	??_Lcd_output+1,w
   929     07B3  074F               	addwf	??_Lcd_output,w
   930     07B4  074D               	addwf	Lcd_output@i,w
   931     07B5  00D1               	movwf	??_Lcd_output+2
   932     07B6  01D2               	clrf	??_Lcd_output+3
   933     07B7  0851               	movf	??_Lcd_output+2,w
   934     07B8  00C2               	movwf	_d1
   935     07B9  0852               	movf	??_Lcd_output+3,w
   936     07BA  00C3               	movwf	_d1+1
   937                           
   938                           ;class4_class1pgm.c: 138:     Lcd_data(0x30 + d4);
   939     07BB  0848               	movf	_d4,w
   940     07BC  3E30               	addlw	48
   941     07BD  120A  118A  2525  120A  118A  	fcall	_Lcd_data
   942                           
   943                           ;class4_class1pgm.c: 139:     Lcd_data(0x30 + d3);
   944     07C2  1283               	bcf	3,5	;RP0=0, select bank0
   945     07C3  1303               	bcf	3,6	;RP1=0, select bank0
   946     07C4  0846               	movf	_d3,w
   947     07C5  3E30               	addlw	48
   948     07C6  120A  118A  2525  120A  118A  	fcall	_Lcd_data
   949                           
   950                           ;class4_class1pgm.c: 140:     Lcd_data(0x30 + d2);
   951     07CB  1283               	bcf	3,5	;RP0=0, select bank0
   952     07CC  1303               	bcf	3,6	;RP1=0, select bank0
   953     07CD  0844               	movf	_d2,w
   954     07CE  3E30               	addlw	48
   955     07CF  120A  118A  2525  120A  118A  	fcall	_Lcd_data
   956                           
   957                           ;class4_class1pgm.c: 141:     Lcd_data(0x30 + d1);
   958     07D4  1283               	bcf	3,5	;RP0=0, select bank0
   959     07D5  1303               	bcf	3,6	;RP1=0, select bank0
   960     07D6  0842               	movf	_d1,w
   961     07D7  3E30               	addlw	48
   962     07D8  120A  118A  2525  120A  118A  	fcall	_Lcd_data
   963     07DD                     l83:
   964     07DD  0008               	return
   965     07DE                     __end_of_Lcd_output:
   966                           
   967                           	psect	text3
   968     0583                     __ptext3:	
   969 ;; *************** function ___wmul *****************
   970 ;; Defined at:
   971 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul16.c"
   972 ;; Parameters:    Size  Location     Type
   973 ;;  multiplier      2    0[COMMON] unsigned int 
   974 ;;  multiplicand    2    2[COMMON] unsigned int 
   975 ;; Auto vars:     Size  Location     Type
   976 ;;  product         2    4[COMMON] unsigned int 
   977 ;; Return value:  Size  Location     Type
   978 ;;                  2    0[COMMON] unsigned int 
   979 ;; Registers used:
   980 ;;		wreg, status,2, status,0
   981 ;; Tracked objects:
   982 ;;		On entry : 0/0
   983 ;;		On exit  : 0/0
   984 ;;		Unchanged: 0/0
   985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   986 ;;      Params:         4       0       0       0       0
   987 ;;      Locals:         2       0       0       0       0
   988 ;;      Temps:          0       0       0       0       0
   989 ;;      Totals:         6       0       0       0       0
   990 ;;Total ram usage:        6 bytes
   991 ;; Hardware stack levels used: 1
   992 ;; This function calls:
   993 ;;		Nothing
   994 ;; This function is called by:
   995 ;;		_Lcd_output
   996 ;; This function uses a non-reentrant model
   997 ;;
   998                           
   999     0583                     ___wmul:	
  1000                           ;psect for function ___wmul
  1001                           
  1002     0583                     l817:	
  1003                           ;incstack = 0
  1004                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1005                           
  1006     0583  01F4               	clrf	___wmul@product
  1007     0584  01F5               	clrf	___wmul@product+1
  1008     0585                     l819:
  1009     0585  1C70               	btfss	___wmul@multiplier,0
  1010     0586  2D88               	goto	u181
  1011     0587  2D89               	goto	u180
  1012     0588                     u181:
  1013     0588  2D8F               	goto	l169
  1014     0589                     u180:
  1015     0589                     l821:
  1016     0589  0872               	movf	___wmul@multiplicand,w
  1017     058A  07F4               	addwf	___wmul@product,f
  1018     058B  1803               	skipnc
  1019     058C  0AF5               	incf	___wmul@product+1,f
  1020     058D  0873               	movf	___wmul@multiplicand+1,w
  1021     058E  07F5               	addwf	___wmul@product+1,f
  1022     058F                     l169:
  1023     058F  3001               	movlw	1
  1024     0590                     u195:
  1025     0590  1003               	clrc
  1026     0591  0DF2               	rlf	___wmul@multiplicand,f
  1027     0592  0DF3               	rlf	___wmul@multiplicand+1,f
  1028     0593  3EFF               	addlw	-1
  1029     0594  1D03               	skipz
  1030     0595  2D90               	goto	u195
  1031     0596                     l823:
  1032     0596  3001               	movlw	1
  1033     0597                     u205:
  1034     0597  1003               	clrc
  1035     0598  0CF1               	rrf	___wmul@multiplier+1,f
  1036     0599  0CF0               	rrf	___wmul@multiplier,f
  1037     059A  3EFF               	addlw	-1
  1038     059B  1D03               	skipz
  1039     059C  2D97               	goto	u205
  1040     059D                     l825:
  1041     059D  0870               	movf	___wmul@multiplier,w
  1042     059E  0471               	iorwf	___wmul@multiplier+1,w
  1043     059F  1D03               	btfss	3,2
  1044     05A0  2DA2               	goto	u211
  1045     05A1  2DA3               	goto	u210
  1046     05A2                     u211:
  1047     05A2  2D85               	goto	l819
  1048     05A3                     u210:
  1049     05A3                     l827:
  1050     05A3  0875               	movf	___wmul@product+1,w
  1051     05A4  00F1               	movwf	?___wmul+1
  1052     05A5  0874               	movf	___wmul@product,w
  1053     05A6  00F0               	movwf	?___wmul
  1054     05A7                     l171:
  1055     05A7  0008               	return
  1056     05A8                     __end_of___wmul:
  1057                           
  1058                           	psect	text4
  1059     05A8                     __ptext4:	
  1060 ;; *************** function ___lwdiv *****************
  1061 ;; Defined at:
  1062 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwdiv.c"
  1063 ;; Parameters:    Size  Location     Type
  1064 ;;  divisor         2    6[COMMON] unsigned int 
  1065 ;;  dividend        2    8[COMMON] unsigned int 
  1066 ;; Auto vars:     Size  Location     Type
  1067 ;;  quotient        2   10[COMMON] unsigned int 
  1068 ;;  counter         1   12[COMMON] unsigned char 
  1069 ;; Return value:  Size  Location     Type
  1070 ;;                  2    6[COMMON] unsigned int 
  1071 ;; Registers used:
  1072 ;;		wreg, status,2, status,0, btemp+1
  1073 ;; Tracked objects:
  1074 ;;		On entry : 0/0
  1075 ;;		On exit  : 0/0
  1076 ;;		Unchanged: 0/0
  1077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1078 ;;      Params:         4       0       0       0       0
  1079 ;;      Locals:         3       0       0       0       0
  1080 ;;      Temps:          0       0       0       0       0
  1081 ;;      Totals:         7       0       0       0       0
  1082 ;;Total ram usage:        7 bytes
  1083 ;; Hardware stack levels used: 1
  1084 ;; This function calls:
  1085 ;;		Nothing
  1086 ;; This function is called by:
  1087 ;;		_Lcd_output
  1088 ;; This function uses a non-reentrant model
  1089 ;;
  1090                           
  1091     05A8                     ___lwdiv:	
  1092                           ;psect for function ___lwdiv
  1093                           
  1094     05A8                     l847:	
  1095                           ;incstack = 0
  1096                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  1097                           
  1098     05A8  01FA               	clrf	___lwdiv@quotient
  1099     05A9  01FB               	clrf	___lwdiv@quotient+1
  1100     05AA                     l849:
  1101     05AA  0876               	movf	___lwdiv@divisor,w
  1102     05AB  0477               	iorwf	___lwdiv@divisor+1,w
  1103     05AC  1903               	btfsc	3,2
  1104     05AD  2DAF               	goto	u241
  1105     05AE  2DB0               	goto	u240
  1106     05AF                     u241:
  1107     05AF  2DE7               	goto	l869
  1108     05B0                     u240:
  1109     05B0                     l851:
  1110     05B0  01FC               	clrf	___lwdiv@counter
  1111     05B1  0AFC               	incf	___lwdiv@counter,f
  1112     05B2  2DBE               	goto	l857
  1113     05B3                     l853:
  1114     05B3  3001               	movlw	1
  1115     05B4                     u255:
  1116     05B4  1003               	clrc
  1117     05B5  0DF6               	rlf	___lwdiv@divisor,f
  1118     05B6  0DF7               	rlf	___lwdiv@divisor+1,f
  1119     05B7  3EFF               	addlw	-1
  1120     05B8  1D03               	skipz
  1121     05B9  2DB4               	goto	u255
  1122     05BA                     l855:
  1123     05BA  3001               	movlw	1
  1124     05BB  00FF               	movwf	btemp+1
  1125     05BC  087F               	movf	btemp+1,w
  1126     05BD  07FC               	addwf	___lwdiv@counter,f
  1127     05BE                     l857:
  1128     05BE  1FF7               	btfss	___lwdiv@divisor+1,7
  1129     05BF  2DC1               	goto	u261
  1130     05C0  2DC2               	goto	u260
  1131     05C1                     u261:
  1132     05C1  2DB3               	goto	l853
  1133     05C2                     u260:
  1134     05C2                     l859:
  1135     05C2  3001               	movlw	1
  1136     05C3                     u275:
  1137     05C3  1003               	clrc
  1138     05C4  0DFA               	rlf	___lwdiv@quotient,f
  1139     05C5  0DFB               	rlf	___lwdiv@quotient+1,f
  1140     05C6  3EFF               	addlw	-1
  1141     05C7  1D03               	skipz
  1142     05C8  2DC3               	goto	u275
  1143     05C9  0877               	movf	___lwdiv@divisor+1,w
  1144     05CA  0279               	subwf	___lwdiv@dividend+1,w
  1145     05CB  1D03               	skipz
  1146     05CC  2DCF               	goto	u285
  1147     05CD  0876               	movf	___lwdiv@divisor,w
  1148     05CE  0278               	subwf	___lwdiv@dividend,w
  1149     05CF                     u285:
  1150     05CF  1C03               	skipc
  1151     05D0  2DD2               	goto	u281
  1152     05D1  2DD3               	goto	u280
  1153     05D2                     u281:
  1154     05D2  2DDA               	goto	l865
  1155     05D3                     u280:
  1156     05D3                     l861:
  1157     05D3  0876               	movf	___lwdiv@divisor,w
  1158     05D4  02F8               	subwf	___lwdiv@dividend,f
  1159     05D5  0877               	movf	___lwdiv@divisor+1,w
  1160     05D6  1C03               	skipc
  1161     05D7  03F9               	decf	___lwdiv@dividend+1,f
  1162     05D8  02F9               	subwf	___lwdiv@dividend+1,f
  1163     05D9                     l863:
  1164     05D9  147A               	bsf	___lwdiv@quotient,0
  1165     05DA                     l865:
  1166     05DA  3001               	movlw	1
  1167     05DB                     u295:
  1168     05DB  1003               	clrc
  1169     05DC  0CF7               	rrf	___lwdiv@divisor+1,f
  1170     05DD  0CF6               	rrf	___lwdiv@divisor,f
  1171     05DE  3EFF               	addlw	-1
  1172     05DF  1D03               	skipz
  1173     05E0  2DDB               	goto	u295
  1174     05E1                     l867:
  1175     05E1  3001               	movlw	1
  1176     05E2  02FC               	subwf	___lwdiv@counter,f
  1177     05E3  1D03               	btfss	3,2
  1178     05E4  2DE6               	goto	u301
  1179     05E5  2DE7               	goto	u300
  1180     05E6                     u301:
  1181     05E6  2DC2               	goto	l859
  1182     05E7                     u300:
  1183     05E7                     l869:
  1184     05E7  087B               	movf	___lwdiv@quotient+1,w
  1185     05E8  00F7               	movwf	?___lwdiv+1
  1186     05E9  087A               	movf	___lwdiv@quotient,w
  1187     05EA  00F6               	movwf	?___lwdiv
  1188     05EB                     l449:
  1189     05EB  0008               	return
  1190     05EC                     __end_of___lwdiv:
  1191                           
  1192                           	psect	text5
  1193     0539                     __ptext5:	
  1194 ;; *************** function ___bmul *****************
  1195 ;; Defined at:
  1196 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul8.c"
  1197 ;; Parameters:    Size  Location     Type
  1198 ;;  multiplier      1    wreg     unsigned char 
  1199 ;;  multiplicand    1    0[COMMON] unsigned char 
  1200 ;; Auto vars:     Size  Location     Type
  1201 ;;  multiplier      1    2[COMMON] unsigned char 
  1202 ;;  product         1    1[COMMON] unsigned char 
  1203 ;; Return value:  Size  Location     Type
  1204 ;;                  1    wreg      unsigned char 
  1205 ;; Registers used:
  1206 ;;		wreg, status,2, status,0, btemp+1
  1207 ;; Tracked objects:
  1208 ;;		On entry : 0/0
  1209 ;;		On exit  : 0/0
  1210 ;;		Unchanged: 0/0
  1211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1212 ;;      Params:         1       0       0       0       0
  1213 ;;      Locals:         2       0       0       0       0
  1214 ;;      Temps:          0       0       0       0       0
  1215 ;;      Totals:         3       0       0       0       0
  1216 ;;Total ram usage:        3 bytes
  1217 ;; Hardware stack levels used: 1
  1218 ;; This function calls:
  1219 ;;		Nothing
  1220 ;; This function is called by:
  1221 ;;		_Lcd_output
  1222 ;; This function uses a non-reentrant model
  1223 ;;
  1224                           
  1225     0539                     ___bmul:	
  1226                           ;psect for function ___bmul
  1227                           
  1228                           
  1229                           ;incstack = 0
  1230                           ; Regs used in ___bmul: [wreg+status,2+status,0+btemp+1]
  1231                           ;___bmul@multiplier stored from wreg
  1232     0539  00F2               	movwf	___bmul@multiplier
  1233     053A                     l831:
  1234     053A  01F1               	clrf	___bmul@product
  1235     053B                     l833:
  1236     053B  1C72               	btfss	___bmul@multiplier,0
  1237     053C  2D3E               	goto	u221
  1238     053D  2D3F               	goto	u220
  1239     053E                     u221:
  1240     053E  2D43               	goto	l837
  1241     053F                     u220:
  1242     053F                     l835:
  1243     053F  0870               	movf	___bmul@multiplicand,w
  1244     0540  00FF               	movwf	btemp+1
  1245     0541  087F               	movf	btemp+1,w
  1246     0542  07F1               	addwf	___bmul@product,f
  1247     0543                     l837:
  1248     0543  1003               	clrc
  1249     0544  0DF0               	rlf	___bmul@multiplicand,f
  1250     0545                     l839:
  1251     0545  1003               	clrc
  1252     0546  0CF2               	rrf	___bmul@multiplier,f
  1253     0547                     l841:
  1254     0547  0872               	movf	___bmul@multiplier,w
  1255     0548  1D03               	btfss	3,2
  1256     0549  2D4B               	goto	u231
  1257     054A  2D4C               	goto	u230
  1258     054B                     u231:
  1259     054B  2D3B               	goto	l833
  1260     054C                     u230:
  1261     054C                     l843:
  1262     054C  0871               	movf	___bmul@product,w
  1263     054D                     l195:
  1264     054D  0008               	return
  1265     054E                     __end_of___bmul:
  1266                           
  1267                           	psect	text6
  1268     0525                     __ptext6:	
  1269 ;; *************** function _Lcd_data *****************
  1270 ;; Defined at:
  1271 ;;		line 124 in file "class4_class1pgm.c"
  1272 ;; Parameters:    Size  Location     Type
  1273 ;;  i               1    wreg     unsigned char 
  1274 ;; Auto vars:     Size  Location     Type
  1275 ;;  i               1    2[COMMON] unsigned char 
  1276 ;; Return value:  Size  Location     Type
  1277 ;;                  1    wreg      void 
  1278 ;; Registers used:
  1279 ;;		wreg, status,2, status,0, btemp+1
  1280 ;; Tracked objects:
  1281 ;;		On entry : 0/0
  1282 ;;		On exit  : 0/0
  1283 ;;		Unchanged: 0/0
  1284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1285 ;;      Params:         0       0       0       0       0
  1286 ;;      Locals:         1       0       0       0       0
  1287 ;;      Temps:          2       0       0       0       0
  1288 ;;      Totals:         3       0       0       0       0
  1289 ;;Total ram usage:        3 bytes
  1290 ;; Hardware stack levels used: 1
  1291 ;; This function calls:
  1292 ;;		Nothing
  1293 ;; This function is called by:
  1294 ;;		_keyscan
  1295 ;;		_Lcd_output
  1296 ;; This function uses a non-reentrant model
  1297 ;;
  1298                           
  1299     0525                     _Lcd_data:	
  1300                           ;psect for function _Lcd_data
  1301                           
  1302                           
  1303                           ;incstack = 0
  1304                           ; Regs used in _Lcd_data: [wreg+status,2+status,0+btemp+1]
  1305                           ;Lcd_data@i stored from wreg
  1306     0525  00F2               	movwf	Lcd_data@i
  1307     0526                     l807:
  1308                           
  1309                           ;class4_class1pgm.c: 125:     PORTC |= 0x08;
  1310     0526  1283               	bcf	3,5	;RP0=0, select bank0
  1311     0527  1303               	bcf	3,6	;RP1=0, select bank0
  1312     0528  1587               	bsf	7,3	;volatile
  1313     0529                     l809:
  1314                           
  1315                           ;class4_class1pgm.c: 126:     PORTD = i;
  1316     0529  0872               	movf	Lcd_data@i,w
  1317     052A  0088               	movwf	8	;volatile
  1318     052B                     l811:
  1319                           
  1320                           ;class4_class1pgm.c: 127:     PORTC |= 0x01;
  1321     052B  1407               	bsf	7,0	;volatile
  1322     052C                     l813:
  1323                           
  1324                           ;class4_class1pgm.c: 128:     PORTC &= ~0x01;
  1325     052C  30FE               	movlw	254
  1326     052D  00FF               	movwf	btemp+1
  1327     052E  087F               	movf	btemp+1,w
  1328     052F  0587               	andwf	7,f	;volatile
  1329     0530                     l815:
  1330                           
  1331                           ;class4_class1pgm.c: 129:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1332     0530  30C3               	movlw	195
  1333     0531  00F1               	movwf	??_Lcd_data+1
  1334     0532  30CD               	movlw	205
  1335     0533  00F0               	movwf	??_Lcd_data
  1336     0534                     u357:
  1337     0534  0BF0               	decfsz	??_Lcd_data,f
  1338     0535  2D34               	goto	u357
  1339     0536  0BF1               	decfsz	??_Lcd_data+1,f
  1340     0537  2D34               	goto	u357
  1341     0538                     l80:
  1342     0538  0008               	return
  1343     0539                     __end_of_Lcd_data:
  1344                           
  1345                           	psect	text7
  1346     05EC                     __ptext7:	
  1347 ;; *************** function _init *****************
  1348 ;; Defined at:
  1349 ;;		line 40 in file "class4_class1pgm.c"
  1350 ;; Parameters:    Size  Location     Type
  1351 ;;		None
  1352 ;; Auto vars:     Size  Location     Type
  1353 ;;		None
  1354 ;; Return value:  Size  Location     Type
  1355 ;;                  1    wreg      void 
  1356 ;; Registers used:
  1357 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1358 ;; Tracked objects:
  1359 ;;		On entry : 0/0
  1360 ;;		On exit  : 0/0
  1361 ;;		Unchanged: 0/0
  1362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1363 ;;      Params:         0       0       0       0       0
  1364 ;;      Locals:         0       0       0       0       0
  1365 ;;      Temps:          2       0       0       0       0
  1366 ;;      Totals:         2       0       0       0       0
  1367 ;;Total ram usage:        2 bytes
  1368 ;; Hardware stack levels used: 1
  1369 ;; Hardware stack levels required when called: 1
  1370 ;; This function calls:
  1371 ;;		_Lcd_command
  1372 ;; This function is called by:
  1373 ;;		_main
  1374 ;; This function uses a non-reentrant model
  1375 ;;
  1376                           
  1377     05EC                     _init:	
  1378                           ;psect for function _init
  1379                           
  1380     05EC                     l883:	
  1381                           ;incstack = 0
  1382                           ; Regs used in _init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1383                           
  1384                           
  1385                           ;class4_class1pgm.c: 42:     TRISC = 0x00;
  1386     05EC  1683               	bsf	3,5	;RP0=1, select bank1
  1387     05ED  1303               	bcf	3,6	;RP1=0, select bank1
  1388     05EE  0187               	clrf	7	;volatile
  1389     05EF                     l885:
  1390                           
  1391                           ;class4_class1pgm.c: 43:     TRISB = 0xF0;
  1392     05EF  30F0               	movlw	240
  1393     05F0  0086               	movwf	6	;volatile
  1394     05F1                     l887:
  1395                           
  1396                           ;class4_class1pgm.c: 44:     TRISD = 0x00;
  1397     05F1  0188               	clrf	8	;volatile
  1398     05F2                     l889:
  1399                           
  1400                           ;class4_class1pgm.c: 45:     PORTB = 0x00;
  1401     05F2  1283               	bcf	3,5	;RP0=0, select bank0
  1402     05F3  1303               	bcf	3,6	;RP1=0, select bank0
  1403     05F4  0186               	clrf	6	;volatile
  1404     05F5                     l891:
  1405                           
  1406                           ;class4_class1pgm.c: 46:     OPTION_REG &= 0x7F;
  1407     05F5  307F               	movlw	127
  1408     05F6  00FF               	movwf	btemp+1
  1409     05F7  087F               	movf	btemp+1,w
  1410     05F8  1683               	bsf	3,5	;RP0=1, select bank1
  1411     05F9  1303               	bcf	3,6	;RP1=0, select bank1
  1412     05FA  0581               	andwf	1,f	;volatile
  1413     05FB                     l893:
  1414                           
  1415                           ;class4_class1pgm.c: 49:     Lcd_command(0x38);
  1416     05FB  3038               	movlw	56
  1417     05FC  120A  118A  254E  120A  118A  	fcall	_Lcd_command
  1418     0601                     l895:
  1419                           
  1420                           ;class4_class1pgm.c: 50:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1421     0601  30C3               	movlw	195
  1422     0602  00F4               	movwf	??_init+1
  1423     0603  30CD               	movlw	205
  1424     0604  00F3               	movwf	??_init
  1425     0605                     u367:
  1426     0605  0BF3               	decfsz	??_init,f
  1427     0606  2E05               	goto	u367
  1428     0607  0BF4               	decfsz	??_init+1,f
  1429     0608  2E05               	goto	u367
  1430     0609                     l897:
  1431                           
  1432                           ;class4_class1pgm.c: 51:     Lcd_command(0x38);
  1433     0609  3038               	movlw	56
  1434     060A  120A  118A  254E  120A  118A  	fcall	_Lcd_command
  1435     060F                     l899:
  1436                           
  1437                           ;class4_class1pgm.c: 52:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1438     060F  30C3               	movlw	195
  1439     0610  00F4               	movwf	??_init+1
  1440     0611  30CD               	movlw	205
  1441     0612  00F3               	movwf	??_init
  1442     0613                     u377:
  1443     0613  0BF3               	decfsz	??_init,f
  1444     0614  2E13               	goto	u377
  1445     0615  0BF4               	decfsz	??_init+1,f
  1446     0616  2E13               	goto	u377
  1447     0617                     l901:
  1448                           
  1449                           ;class4_class1pgm.c: 53:     Lcd_command(0x38);
  1450     0617  3038               	movlw	56
  1451     0618  120A  118A  254E  120A  118A  	fcall	_Lcd_command
  1452     061D                     l903:
  1453                           
  1454                           ;class4_class1pgm.c: 54:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1455     061D  30C3               	movlw	195
  1456     061E  00F4               	movwf	??_init+1
  1457     061F  30CD               	movlw	205
  1458     0620  00F3               	movwf	??_init
  1459     0621                     u387:
  1460     0621  0BF3               	decfsz	??_init,f
  1461     0622  2E21               	goto	u387
  1462     0623  0BF4               	decfsz	??_init+1,f
  1463     0624  2E21               	goto	u387
  1464     0625                     l905:
  1465                           
  1466                           ;class4_class1pgm.c: 55:     Lcd_command(0x38);
  1467     0625  3038               	movlw	56
  1468     0626  120A  118A  254E  120A  118A  	fcall	_Lcd_command
  1469     062B                     l907:
  1470                           
  1471                           ;class4_class1pgm.c: 56:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1472     062B  30C3               	movlw	195
  1473     062C  00F4               	movwf	??_init+1
  1474     062D  30CD               	movlw	205
  1475     062E  00F3               	movwf	??_init
  1476     062F                     u397:
  1477     062F  0BF3               	decfsz	??_init,f
  1478     0630  2E2F               	goto	u397
  1479     0631  0BF4               	decfsz	??_init+1,f
  1480     0632  2E2F               	goto	u397
  1481     0633                     l909:
  1482                           
  1483                           ;class4_class1pgm.c: 57:     Lcd_command(0x06);
  1484     0633  3006               	movlw	6
  1485     0634  120A  118A  254E  120A  118A  	fcall	_Lcd_command
  1486     0639                     l911:
  1487                           
  1488                           ;class4_class1pgm.c: 58:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1489     0639  30C3               	movlw	195
  1490     063A  00F4               	movwf	??_init+1
  1491     063B  30CD               	movlw	205
  1492     063C  00F3               	movwf	??_init
  1493     063D                     u407:
  1494     063D  0BF3               	decfsz	??_init,f
  1495     063E  2E3D               	goto	u407
  1496     063F  0BF4               	decfsz	??_init+1,f
  1497     0640  2E3D               	goto	u407
  1498     0641                     l913:
  1499                           
  1500                           ;class4_class1pgm.c: 59:     Lcd_command(0x0C);
  1501     0641  300C               	movlw	12
  1502     0642  120A  118A  254E  120A  118A  	fcall	_Lcd_command
  1503     0647                     l915:
  1504                           
  1505                           ;class4_class1pgm.c: 60:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1506     0647  30C3               	movlw	195
  1507     0648  00F4               	movwf	??_init+1
  1508     0649  30CD               	movlw	205
  1509     064A  00F3               	movwf	??_init
  1510     064B                     u417:
  1511     064B  0BF3               	decfsz	??_init,f
  1512     064C  2E4B               	goto	u417
  1513     064D  0BF4               	decfsz	??_init+1,f
  1514     064E  2E4B               	goto	u417
  1515     064F                     l917:
  1516                           
  1517                           ;class4_class1pgm.c: 61:     Lcd_command(0x01);
  1518     064F  3001               	movlw	1
  1519     0650  120A  118A  254E  120A  118A  	fcall	_Lcd_command
  1520     0655                     l919:
  1521                           
  1522                           ;class4_class1pgm.c: 62:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1523     0655  30C3               	movlw	195
  1524     0656  00F4               	movwf	??_init+1
  1525     0657  30CD               	movlw	205
  1526     0658  00F3               	movwf	??_init
  1527     0659                     u427:
  1528     0659  0BF3               	decfsz	??_init,f
  1529     065A  2E59               	goto	u427
  1530     065B  0BF4               	decfsz	??_init+1,f
  1531     065C  2E59               	goto	u427
  1532     065D                     l921:
  1533                           
  1534                           ;class4_class1pgm.c: 63:     j=0;
  1535     065D  1283               	bcf	3,5	;RP0=0, select bank0
  1536     065E  1303               	bcf	3,6	;RP1=0, select bank0
  1537     065F  01C0               	clrf	_j
  1538     0660  01C1               	clrf	_j+1
  1539     0661                     l59:
  1540     0661  0008               	return
  1541     0662                     __end_of_init:
  1542                           
  1543                           	psect	text8
  1544     054E                     __ptext8:	
  1545 ;; *************** function _Lcd_command *****************
  1546 ;; Defined at:
  1547 ;;		line 115 in file "class4_class1pgm.c"
  1548 ;; Parameters:    Size  Location     Type
  1549 ;;  i               1    wreg     unsigned char 
  1550 ;; Auto vars:     Size  Location     Type
  1551 ;;  i               1    2[COMMON] unsigned char 
  1552 ;; Return value:  Size  Location     Type
  1553 ;;                  1    wreg      void 
  1554 ;; Registers used:
  1555 ;;		wreg, status,2, status,0, btemp+1
  1556 ;; Tracked objects:
  1557 ;;		On entry : 0/0
  1558 ;;		On exit  : 0/0
  1559 ;;		Unchanged: 0/0
  1560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1561 ;;      Params:         0       0       0       0       0
  1562 ;;      Locals:         1       0       0       0       0
  1563 ;;      Temps:          2       0       0       0       0
  1564 ;;      Totals:         3       0       0       0       0
  1565 ;;Total ram usage:        3 bytes
  1566 ;; Hardware stack levels used: 1
  1567 ;; This function calls:
  1568 ;;		Nothing
  1569 ;; This function is called by:
  1570 ;;		_init
  1571 ;;		_keyscan
  1572 ;; This function uses a non-reentrant model
  1573 ;;
  1574                           
  1575     054E                     _Lcd_command:	
  1576                           ;psect for function _Lcd_command
  1577                           
  1578                           
  1579                           ;incstack = 0
  1580                           ; Regs used in _Lcd_command: [wreg+status,2+status,0+btemp+1]
  1581                           ;Lcd_command@i stored from wreg
  1582     054E  00F2               	movwf	Lcd_command@i
  1583     054F                     l873:
  1584                           
  1585                           ;class4_class1pgm.c: 115: void Lcd_command(unsigned char i);class4_class1pgm.c: 116: {;c
      +                          lass4_class1pgm.c: 117:     PORTC &= ~0x08;
  1586     054F  30F7               	movlw	247
  1587     0550  00FF               	movwf	btemp+1
  1588     0551  087F               	movf	btemp+1,w
  1589     0552  1283               	bcf	3,5	;RP0=0, select bank0
  1590     0553  1303               	bcf	3,6	;RP1=0, select bank0
  1591     0554  0587               	andwf	7,f	;volatile
  1592     0555                     l875:
  1593                           
  1594                           ;class4_class1pgm.c: 118:     PORTD = i;
  1595     0555  0872               	movf	Lcd_command@i,w
  1596     0556  0088               	movwf	8	;volatile
  1597     0557                     l877:
  1598                           
  1599                           ;class4_class1pgm.c: 119:     PORTC |= 0x01;
  1600     0557  1407               	bsf	7,0	;volatile
  1601     0558                     l879:
  1602                           
  1603                           ;class4_class1pgm.c: 120:     PORTC &= ~0x01;
  1604     0558  30FE               	movlw	254
  1605     0559  00FF               	movwf	btemp+1
  1606     055A  087F               	movf	btemp+1,w
  1607     055B  0587               	andwf	7,f	;volatile
  1608                           
  1609                           ;class4_class1pgm.c: 121:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1610     055C  30C3               	movlw	195
  1611     055D  00F1               	movwf	??_Lcd_command+1
  1612     055E  30CD               	movlw	205
  1613     055F  00F0               	movwf	??_Lcd_command
  1614     0560                     u437:
  1615     0560  0BF0               	decfsz	??_Lcd_command,f
  1616     0561  2D60               	goto	u437
  1617     0562  0BF1               	decfsz	??_Lcd_command+1,f
  1618     0563  2D60               	goto	u437
  1619     0564                     l77:
  1620     0564  0008               	return
  1621     0565                     __end_of_Lcd_command:
  1622     007E                     btemp	set	126	;btemp
  1623     007E                     wtemp0	set	126
  1624                           
  1625                           	psect	config
  1626                           
  1627                           ;Config register CONFIG @ 0x2007
  1628                           ;	Oscillator Selection bits
  1629                           ;	FOSC = EXTRC, RC oscillator
  1630                           ;	Watchdog Timer Enable bit
  1631                           ;	WDTE = OFF, WDT disabled
  1632                           ;	Power-up Timer Enable bit
  1633                           ;	PWRTE = OFF, PWRT disabled
  1634                           ;	Brown-out Reset Enable bit
  1635                           ;	BOREN = OFF, BOR disabled
  1636                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1637                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1638                           ;	Data EEPROM Memory Code Protection bit
  1639                           ;	CPD = OFF, Data EEPROM code protection off
  1640                           ;	Flash Program Memory Write Enable bits
  1641                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1642                           ;	In-Circuit Debugger Mode bit
  1643                           ;	DEBUG = 0x1, unprogrammed default
  1644                           ;	Flash Program Memory Code Protection bit
  1645                           ;	CP = OFF, Code protection off
  1646     2007                     	org	8199
  1647     2007  3F3B               	dw	16187

Data Sizes:
    Strings     0
    Constant    0
    Data        30
    BSS         16
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80      8      53
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _Lcd_output->___lwdiv
    ___lwdiv->___wmul
    _init->_Lcd_command

Critical Paths under _main in BANK0

    _keyscan->_Lcd_output

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1966
                               _init
                            _keyscan
 ---------------------------------------------------------------------------------
 (1) _keyscan                                              0     0      0    1944
                        _Lcd_command
                           _Lcd_data
                         _Lcd_output
 ---------------------------------------------------------------------------------
 (2) _Lcd_output                                           8     6      2    1900
                                              0 BANK0      8     6      2
                           _Lcd_data
                             ___bmul
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     548
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     618
                                              6 COMMON     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               3     2      1     320
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (3) _Lcd_data                                             3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _init                                                 2     2      0      22
                                              3 COMMON     2     2      0
                        _Lcd_command
 ---------------------------------------------------------------------------------
 (2) _Lcd_command                                          3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init
     _Lcd_command
   _keyscan
     _Lcd_command
     _Lcd_data
     _Lcd_output
       _Lcd_data
       ___bmul
       ___lwdiv
         ___wmul (ARG)
       ___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      8      35       5       66.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      D       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      43      12        0.0%
ABS                  0      0      43       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Fri Jul 26 17:21:57 2024

                      _i 003E                        _j 0040                        _m 007D  
                      _n 004B                        _x 004C                        pc 0002  
         ___bmul@product 0071                       l80 0538                       l74 070C  
                     l59 0661                       l83 07DD                       l77 0564  
                     _d1 0042                       _d2 0044                       _d3 0046  
                     _d4 0048                       fsr 0004      ___wmul@multiplicand 0072  
                    l171 05A7                      l169 058F                      l195 054D  
                    l449 05EB                      l811 052B                      l901 0617  
                    l813 052C                      l821 0589                      l911 0639  
                    l903 061D                      l815 0530                      l807 0526  
                    l831 053A                      l823 0596                      l921 065D  
                    l913 0641                      l905 0625                      l809 0529  
                    l841 0547                      l833 053B                      l825 059D  
                    l817 0583                      l915 0647                      l907 062B  
                    l843 054C                      l835 053F                      l851 05B0  
                    l827 05A3                      l819 0585                      l923 0662  
                    l917 064F                      l909 0633                      l837 0543  
                    l861 05D3                      l853 05B3                      l941 068D  
                    l933 0671                      l925 0668                      l919 0655  
                    l839 0545                      l863 05D9                      l855 05BA  
                    l847 05A8                      l951 06A1                      l935 067B  
                    l927 066E                      l873 054F                      l865 05DA  
                    l857 05BE                      l849 05AA                      l881 070D  
                    l961 06D2                      l953 06A7                      l937 0681  
                    l875 0555                      l891 05F5                      l883 05EC  
                    l867 05E1                      l859 05C2                      l963 06DE  
                    l955 06B9                      l947 0691                      l939 0687  
                    l877 0557                      l893 05FB                      l885 05EF  
                    l869 05E7                      l973 06F5                      l965 06E4  
                    l957 06C8                      l949 069B                      l981 06FE  
                    l879 0558                      l895 0601                      l887 05F1  
                    l975 06F7                      l967 06EA                      l959 06CC  
                    l983 0504                      l897 0609                      l889 05F2  
                    l969 06EE                      l985 0509                      l899 060F  
                    u210 05A3                      u211 05A2                      u220 053F  
                    u300 05E7                      u221 053E                      u301 05E6  
                    u205 0597                      u230 054C                      u310 0687  
                    u231 054B                      u311 0686                      u240 05B0  
                    u320 06A7                      u241 05AF                      u321 06A6  
                    u330 06C8                      u331 06C7                      u260 05C2  
                    u180 0589                      u340 06EA                      u261 05C1  
                    u181 0588                      u341 06E9                      u407 063D  
                    u255 05B4                      u280 05D3                      u417 064B  
                    u281 05D2                      u427 0659                      u275 05C3  
                    u195 0590                      u437 0560                      u357 0534  
                    u285 05CF                      u367 0605                      u295 05DB  
                    u377 0613                      u387 0621                      u397 062F  
                    fsr0 0004                      indf 0000                     _main 0504  
                   _init 05EC                     btemp 007E                     start 0000  
      ___bmul@multiplier 0072      __end_of_Lcd_command 0565                    ?_main 0070  
                  ?_init 0070          __end_of___lwdiv 05EC                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088               _Lcd_output 070D  
                  _array 0020          __end_of_keyscan 070D                    _value 004A  
                  pclath 000A                    status 0003                    wtemp0 007E  
       __end_of_Lcd_data 0539          __initialization 07DE             __end_of_main 0512  
           __end_of_init 0662                   ??_main 007D                   ??_init 0073  
            _Lcd_command 054E                   ___bmul 0539                   ___wmul 0583  
              ??___lwdiv 007A                ??_keyscan 007D              ?_Lcd_output 004D  
__end_of__initialization 07FC      ___bmul@multiplicand 0070           __pcstackCOMMON 0070  
           __pidataBANK0 0565                ?_Lcd_data 0070               __pbssBANK0 003E  
             __pmaintext 0504                  ?___bmul 0070                  ?___wmul 0070  
             ??_Lcd_data 0070                  ___lwdiv 05A8                  __ptext1 0662  
                __ptext2 070D                  __ptext3 0583                  __ptext4 05A8  
                __ptext5 0539                  __ptext6 0525                  __ptext7 05EC  
                __ptext8 054E                  _keyscan 0662     end_of_initialization 07FC  
           ?_Lcd_command 0070                Lcd_data@i 0072             ??_Lcd_output 004F  
         __end_of___bmul 054E       __end_of_Lcd_output 07DE           __end_of___wmul 05A8  
    start_initialization 07DE                 ??___bmul 0071                 ??___wmul 0074  
             init_fetch0 0512              __pdataBANK0 0020              __pbssCOMMON 007D  
              ___latbits 0002            __pcstackBANK0 004D         ___lwdiv@dividend 0078  
               ?___lwdiv 0076                 ?_keyscan 0070         ___lwdiv@quotient 007A  
         ___wmul@product 0074        ___wmul@multiplier 0070                 _Lcd_data 0525  
        ___lwdiv@divisor 0076          ___lwdiv@counter 007C             Lcd_command@i 0072  
               init_ram0 0516               _OPTION_REG 0081              Lcd_output@i 004D  
          ??_Lcd_command 0070  
