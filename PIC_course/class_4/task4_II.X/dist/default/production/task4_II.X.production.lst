

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Tue Jul 30 12:09:48 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    24                           	dabs	1,0x7E,2
    25     0000                     
    26                           ; Generated 12/10/2023 GMT
    27                           ; 
    28                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution. Publication is not required when
    42                           ;        this file is used in an embedded application.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC16F877A Definitions
    58                           ; 
    59                           ; SFR Addresses
    60     0000                     	;# 
    61     0001                     	;# 
    62     0002                     	;# 
    63     0003                     	;# 
    64     0004                     	;# 
    65     0005                     	;# 
    66     0006                     	;# 
    67     0007                     	;# 
    68     0008                     	;# 
    69     0009                     	;# 
    70     000A                     	;# 
    71     000B                     	;# 
    72     000C                     	;# 
    73     000D                     	;# 
    74     000E                     	;# 
    75     000E                     	;# 
    76     000F                     	;# 
    77     0010                     	;# 
    78     0011                     	;# 
    79     0012                     	;# 
    80     0013                     	;# 
    81     0014                     	;# 
    82     0015                     	;# 
    83     0015                     	;# 
    84     0016                     	;# 
    85     0017                     	;# 
    86     0018                     	;# 
    87     0019                     	;# 
    88     001A                     	;# 
    89     001B                     	;# 
    90     001B                     	;# 
    91     001C                     	;# 
    92     001D                     	;# 
    93     001E                     	;# 
    94     001F                     	;# 
    95     0081                     	;# 
    96     0085                     	;# 
    97     0086                     	;# 
    98     0087                     	;# 
    99     0088                     	;# 
   100     0089                     	;# 
   101     008C                     	;# 
   102     008D                     	;# 
   103     008E                     	;# 
   104     0091                     	;# 
   105     0092                     	;# 
   106     0093                     	;# 
   107     0094                     	;# 
   108     0098                     	;# 
   109     0099                     	;# 
   110     009C                     	;# 
   111     009D                     	;# 
   112     009E                     	;# 
   113     009F                     	;# 
   114     010C                     	;# 
   115     010D                     	;# 
   116     010E                     	;# 
   117     010F                     	;# 
   118     018C                     	;# 
   119     018D                     	;# 
   120     0000                     	;# 
   121     0001                     	;# 
   122     0002                     	;# 
   123     0003                     	;# 
   124     0004                     	;# 
   125     0005                     	;# 
   126     0006                     	;# 
   127     0007                     	;# 
   128     0008                     	;# 
   129     0009                     	;# 
   130     000A                     	;# 
   131     000B                     	;# 
   132     000C                     	;# 
   133     000D                     	;# 
   134     000E                     	;# 
   135     000E                     	;# 
   136     000F                     	;# 
   137     0010                     	;# 
   138     0011                     	;# 
   139     0012                     	;# 
   140     0013                     	;# 
   141     0014                     	;# 
   142     0015                     	;# 
   143     0015                     	;# 
   144     0016                     	;# 
   145     0017                     	;# 
   146     0018                     	;# 
   147     0019                     	;# 
   148     001A                     	;# 
   149     001B                     	;# 
   150     001B                     	;# 
   151     001C                     	;# 
   152     001D                     	;# 
   153     001E                     	;# 
   154     001F                     	;# 
   155     0081                     	;# 
   156     0085                     	;# 
   157     0086                     	;# 
   158     0087                     	;# 
   159     0088                     	;# 
   160     0089                     	;# 
   161     008C                     	;# 
   162     008D                     	;# 
   163     008E                     	;# 
   164     0091                     	;# 
   165     0092                     	;# 
   166     0093                     	;# 
   167     0094                     	;# 
   168     0098                     	;# 
   169     0099                     	;# 
   170     009C                     	;# 
   171     009D                     	;# 
   172     009E                     	;# 
   173     009F                     	;# 
   174     010C                     	;# 
   175     010D                     	;# 
   176     010E                     	;# 
   177     010F                     	;# 
   178     018C                     	;# 
   179     018D                     	;# 
   180                           
   181                           	psect	idataBANK0
   182     043B                     __pidataBANK0:
   183                           
   184                           ;initializer for _array
   185     043B  3442               	retlw	66
   186     043C  3441               	retlw	65
   187     043D  3454               	retlw	84
   188     043E  3454               	retlw	84
   189     043F  3420               	retlw	32
   190     0440  3456               	retlw	86
   191     0441  344F               	retlw	79
   192     0442  344C               	retlw	76
   193     0443  3454               	retlw	84
   194     0444  343A               	retlw	58
   195     0445  3420               	retlw	32
   196     0446  3400               	retlw	0
   197     0447  3400               	retlw	0
   198     0448  3400               	retlw	0
   199     0449  3400               	retlw	0
   200     044A  3400               	retlw	0
   201                           
   202                           ;initializer for _battery_voltage
   203     044B  34AF               	retlw	175
   204     044C  3400               	retlw	0
   205     0008                     _PORTD	set	8
   206     0007                     _PORTC	set	7
   207     0006                     _PORTB	set	6
   208     0081                     _OPTION_REG	set	129
   209     0086                     _TRISB	set	134
   210     0088                     _TRISD	set	136
   211     0087                     _TRISC	set	135
   212                           
   213                           	psect	strings
   214     0003                     __pstrings:
   215     0003                     stringtab:
   216     0003                     __stringtab:
   217     0003                     stringcode:	
   218                           ;	String table - string pointers are 1 byte each
   219                           
   220     0003                     stringdir:
   221     0003  3000               	movlw	high stringdir
   222     0004  008A               	movwf	10
   223     0005  0804               	movf	4,w
   224     0006  0A84               	incf	4,f
   225     0007  0782               	addwf	2,f
   226     0008                     __stringbase:
   227     0008  3400               	retlw	0
   228     0009                     __end_of__stringtab:
   229     0009                     STR_2:
   230     0009  3442               	retlw	66	;'B'
   231     000A  3441               	retlw	65	;'A'
   232     000B  3454               	retlw	84	;'T'
   233     000C  3454               	retlw	84	;'T'
   234     000D  3445               	retlw	69	;'E'
   235     000E  3452               	retlw	82	;'R'
   236     000F  3459               	retlw	89	;'Y'
   237     0010  3420               	retlw	32	;' '
   238     0011  344E               	retlw	78	;'N'
   239     0012  344F               	retlw	79	;'O'
   240     0013  3452               	retlw	82	;'R'
   241     0014  344D               	retlw	77	;'M'
   242     0015  3441               	retlw	65	;'A'
   243     0016  344C               	retlw	76	;'L'
   244     0017  3420               	retlw	32	;' '
   245     0018  3427               	retlw	39	;'''
   246     0019  3400               	retlw	0
   247     001A  3427               	retlw	39	;'''
   248     001B  3400               	retlw	0
   249     001C                     STR_3:
   250     001C  3442               	retlw	66	;'B'
   251     001D  3441               	retlw	65	;'A'
   252     001E  3454               	retlw	84	;'T'
   253     001F  3454               	retlw	84	;'T'
   254     0020  3445               	retlw	69	;'E'
   255     0021  3452               	retlw	82	;'R'
   256     0022  3459               	retlw	89	;'Y'
   257     0023  3420               	retlw	32	;' '
   258     0024  3448               	retlw	72	;'H'
   259     0025  3449               	retlw	73	;'I'
   260     0026  3447               	retlw	71	;'G'
   261     0027  3448               	retlw	72	;'H'
   262     0028  3420               	retlw	32	;' '
   263     0029  3420               	retlw	32	;' '
   264     002A  3427               	retlw	39	;'''
   265     002B  3400               	retlw	0
   266     002C  3427               	retlw	39	;'''
   267     002D  3400               	retlw	0
   268     002E                     STR_1:
   269     002E  3442               	retlw	66	;'B'
   270     002F  3441               	retlw	65	;'A'
   271     0030  3454               	retlw	84	;'T'
   272     0031  3454               	retlw	84	;'T'
   273     0032  3445               	retlw	69	;'E'
   274     0033  3452               	retlw	82	;'R'
   275     0034  3459               	retlw	89	;'Y'
   276     0035  3420               	retlw	32	;' '
   277     0036  344C               	retlw	76	;'L'
   278     0037  344F               	retlw	79	;'O'
   279     0038  3457               	retlw	87	;'W'
   280     0039  3420               	retlw	32	;' '
   281     003A  3420               	retlw	32	;' '
   282     003B  3427               	retlw	39	;'''
   283     003C  3400               	retlw	0
   284     003D  3427               	retlw	39	;'''
   285     003E  3400               	retlw	0
   286                           
   287                           	psect	cinit
   288     07EC                     start_initialization:	
   289                           ; #config settings
   290                           
   291     07EC                     __initialization:
   292                           
   293                           ; Initialize objects allocated to BANK0
   294     07EC  1383               	bcf	3,7	;select IRP bank0
   295     07ED  3032               	movlw	low (__pdataBANK0+18)
   296     07EE  00FD               	movwf	btemp+-1
   297     07EF  3004               	movlw	high __pidataBANK0
   298     07F0  00FE               	movwf	btemp
   299     07F1  303B               	movlw	low __pidataBANK0
   300     07F2  00FF               	movwf	btemp+1
   301     07F3  3020               	movlw	low __pdataBANK0
   302     07F4  0084               	movwf	4
   303     07F5  120A  118A  2451  120A  118A  	fcall	init_ram0
   304                           
   305                           ; Clear objects allocated to COMMON
   306     07FA  01FC               	clrf	__pbssCOMMON& (0+127)
   307     07FB  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
   308     07FC                     end_of_initialization:	
   309                           ;End of C runtime variable initialization code
   310                           
   311     07FC                     __end_of__initialization:
   312     07FC  0183               	clrf	3
   313     07FD  120A  118A  2C2D   	ljmp	_main	;jump to C main() function
   314                           
   315                           	psect	bssCOMMON
   316     007C                     __pbssCOMMON:
   317     007C                     _value:
   318     007C                     	ds	1
   319     007D                     _x:
   320     007D                     	ds	1
   321                           
   322                           	psect	dataBANK0
   323     0020                     __pdataBANK0:
   324     0020                     _array:
   325     0020                     	ds	16
   326     0030                     _battery_voltage:
   327     0030                     	ds	2
   328                           
   329                           	psect	inittext
   330     044D                     init_fetch0:	
   331                           ;	Called with low address in FSR and high address in W
   332                           
   333     044D  087E               	movf	btemp,w
   334     044E  008A               	movwf	10
   335     044F  087F               	movf	btemp+1,w
   336     0450  0082               	movwf	2
   337     0451                     init_ram0:	
   338                           ;Called with:
   339                           ;	high address of idata address in btemp 
   340                           ;	low address of idata address in btemp+1 
   341                           ;	low address of data in FSR
   342                           ;	high address + 1 of data in btemp-1
   343                           
   344     0451  120A  118A  244D  120A  118A  	fcall	init_fetch0
   345     0456  0080               	movwf	0
   346     0457  0A84               	incf	4,f
   347     0458  0804               	movf	4,w
   348     0459  067D               	xorwf	btemp+-1,w
   349     045A  1903               	btfsc	3,2
   350     045B  3400               	retlw	0
   351     045C  0AFF               	incf	btemp+1,f
   352     045D  1903               	btfsc	3,2
   353     045E  0AFE               	incf	btemp,f
   354     045F  2C51               	goto	init_ram0
   355                           
   356                           	psect	cstackCOMMON
   357     0070                     __pcstackCOMMON:
   358     0070                     ?_init:
   359     0070                     ?_keyscan:	
   360                           ; 1 bytes @ 0x0
   361                           
   362     0070                     ?_Lcd_command:	
   363                           ; 1 bytes @ 0x0
   364                           
   365     0070                     ??_Lcd_command:	
   366                           ; 1 bytes @ 0x0
   367                           
   368     0070                     ?_Lcd_data:	
   369                           ; 1 bytes @ 0x0
   370                           
   371     0070                     ??_Lcd_data:	
   372                           ; 1 bytes @ 0x0
   373                           
   374     0070                     ?_display_status:	
   375                           ; 1 bytes @ 0x0
   376                           
   377     0070                     ?_main:	
   378                           ; 1 bytes @ 0x0
   379                           
   380     0070                     ?___awdiv:	
   381                           ; 1 bytes @ 0x0
   382                           
   383     0070                     ?___awmod:	
   384                           ; 2 bytes @ 0x0
   385                           
   386     0070                     ?___lwdiv:	
   387                           ; 2 bytes @ 0x0
   388                           
   389     0070                     ?___lwmod:	
   390                           ; 2 bytes @ 0x0
   391                           
   392     0070                     ___awdiv@divisor:	
   393                           ; 2 bytes @ 0x0
   394                           
   395     0070                     ___awmod@divisor:	
   396                           ; 2 bytes @ 0x0
   397                           
   398     0070                     ___lwdiv@divisor:	
   399                           ; 2 bytes @ 0x0
   400                           
   401     0070                     ___lwmod@divisor:	
   402                           ; 2 bytes @ 0x0
   403                           
   404                           
   405                           ; 2 bytes @ 0x0
   406     0070                     	ds	2
   407     0072                     Lcd_command@i:
   408     0072                     Lcd_data@i:	
   409                           ; 1 bytes @ 0x2
   410                           
   411     0072                     ___awdiv@dividend:	
   412                           ; 1 bytes @ 0x2
   413                           
   414     0072                     ___awmod@dividend:	
   415                           ; 2 bytes @ 0x2
   416                           
   417     0072                     ___lwdiv@dividend:	
   418                           ; 2 bytes @ 0x2
   419                           
   420     0072                     ___lwmod@dividend:	
   421                           ; 2 bytes @ 0x2
   422                           
   423                           
   424                           ; 2 bytes @ 0x2
   425     0072                     	ds	1
   426     0073                     ??_init:
   427     0073                     ??_display_status:	
   428                           ; 1 bytes @ 0x3
   429                           
   430                           
   431                           ; 1 bytes @ 0x3
   432     0073                     	ds	1
   433     0074                     ??___awdiv:
   434     0074                     ??___awmod:	
   435                           ; 1 bytes @ 0x4
   436                           
   437     0074                     ??___lwdiv:	
   438                           ; 1 bytes @ 0x4
   439                           
   440     0074                     ??___lwmod:	
   441                           ; 1 bytes @ 0x4
   442                           
   443     0074                     ___awdiv@counter:	
   444                           ; 1 bytes @ 0x4
   445                           
   446     0074                     ___awmod@counter:	
   447                           ; 1 bytes @ 0x4
   448                           
   449     0074                     ___lwmod@counter:	
   450                           ; 1 bytes @ 0x4
   451                           
   452     0074                     ___lwdiv@quotient:	
   453                           ; 1 bytes @ 0x4
   454                           
   455                           
   456                           ; 2 bytes @ 0x4
   457     0074                     	ds	1
   458     0075                     ___awdiv@sign:
   459     0075                     ___awmod@sign:	
   460                           ; 1 bytes @ 0x5
   461                           
   462                           
   463                           ; 1 bytes @ 0x5
   464     0075                     	ds	1
   465     0076                     ___lwdiv@counter:
   466     0076                     ___awdiv@quotient:	
   467                           ; 1 bytes @ 0x6
   468                           
   469                           
   470                           ; 2 bytes @ 0x6
   471     0076                     	ds	2
   472     0078                     ?_Lcd_output:
   473     0078                     Lcd_output@voltage:	
   474                           ; 1 bytes @ 0x8
   475                           
   476                           
   477                           ; 2 bytes @ 0x8
   478     0078                     	ds	2
   479     007A                     ??_Lcd_output:
   480                           
   481                           ; 1 bytes @ 0xA
   482     007A                     	ds	2
   483     007C                     ??_keyscan:
   484     007C                     ??_main:	
   485                           ; 1 bytes @ 0xC
   486                           
   487                           
   488                           	psect	cstackBANK0
   489     0032                     __pcstackBANK0:	
   490                           ; 1 bytes @ 0xC
   491                           
   492     0032                     Lcd_output@tenths:
   493                           
   494                           ; 1 bytes @ 0x0
   495     0032                     	ds	1
   496     0033                     Lcd_output@hundreds:
   497                           
   498                           ; 1 bytes @ 0x1
   499     0033                     	ds	1
   500     0034                     Lcd_output@tens:
   501                           
   502                           ; 1 bytes @ 0x2
   503     0034                     	ds	1
   504                           
   505                           	psect	maintext
   506     042D                     __pmaintext:	
   507 ;;
   508 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   509 ;;
   510 ;; *************** function _main *****************
   511 ;; Defined at:
   512 ;;		line 35 in file "task4_II.c"
   513 ;; Parameters:    Size  Location     Type
   514 ;;		None
   515 ;; Auto vars:     Size  Location     Type
   516 ;;		None
   517 ;; Return value:  Size  Location     Type
   518 ;;                  1    wreg      void 
   519 ;; Registers used:
   520 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   521 ;; Tracked objects:
   522 ;;		On entry : B00/0
   523 ;;		On exit  : 0/0
   524 ;;		Unchanged: 0/0
   525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   526 ;;      Params:         0       0       0       0       0
   527 ;;      Locals:         0       0       0       0       0
   528 ;;      Temps:          0       0       0       0       0
   529 ;;      Totals:         0       0       0       0       0
   530 ;;Total ram usage:        0 bytes
   531 ;; Hardware stack levels required when called: 3
   532 ;; This function calls:
   533 ;;		_init
   534 ;;		_keyscan
   535 ;; This function is called by:
   536 ;;		Startup code after reset
   537 ;; This function uses a non-reentrant model
   538 ;;
   539                           
   540     042D                     _main:	
   541                           ;psect for function _main
   542                           
   543     042D                     l1298:	
   544                           ;incstack = 0
   545                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   546                           
   547                           
   548                           ;task4_II.c: 37:     init();
   549     042D  120A  118A  2635  120A  118A  	fcall	_init
   550     0432                     l1300:
   551                           
   552                           ;task4_II.c: 39:     {;task4_II.c: 40:         keyscan();
   553     0432  120A  118A  2730  120A  118A  	fcall	_keyscan
   554     0437  2C32               	goto	l1300
   555     0438  120A  118A  2800   	ljmp	start
   556     043B                     __end_of_main:
   557                           
   558                           	psect	text1
   559     0730                     __ptext1:	
   560 ;; *************** function _keyscan *****************
   561 ;; Defined at:
   562 ;;		line 67 in file "task4_II.c"
   563 ;; Parameters:    Size  Location     Type
   564 ;;		None
   565 ;; Auto vars:     Size  Location     Type
   566 ;;		None
   567 ;; Return value:  Size  Location     Type
   568 ;;                  1    wreg      void 
   569 ;; Registers used:
   570 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   571 ;; Tracked objects:
   572 ;;		On entry : 0/0
   573 ;;		On exit  : 0/0
   574 ;;		Unchanged: 0/0
   575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   576 ;;      Params:         0       0       0       0       0
   577 ;;      Locals:         0       0       0       0       0
   578 ;;      Temps:          0       0       0       0       0
   579 ;;      Totals:         0       0       0       0       0
   580 ;;Total ram usage:        0 bytes
   581 ;; Hardware stack levels used: 1
   582 ;; Hardware stack levels required when called: 2
   583 ;; This function calls:
   584 ;;		_Lcd_command
   585 ;;		_Lcd_data
   586 ;;		_Lcd_output
   587 ;;		_display_status
   588 ;; This function is called by:
   589 ;;		_main
   590 ;; This function uses a non-reentrant model
   591 ;;
   592                           
   593     0730                     _keyscan:	
   594                           ;psect for function _keyscan
   595                           
   596     0730                     l1210:	
   597                           ;incstack = 0
   598                           ; Regs used in _keyscan: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   599                           
   600                           
   601                           ;task4_II.c: 69:     value = PORTB & 0xF0;
   602     0730  1283               	bcf	3,5	;RP0=0, select bank0
   603     0731  1303               	bcf	3,6	;RP1=0, select bank0
   604     0732  0806               	movf	6,w	;volatile
   605     0733  39F0               	andlw	240
   606     0734  00FC               	movwf	_value
   607                           
   608                           ;task4_II.c: 70:     switch (value)
   609     0735  2FDD               	goto	l1296
   610     0736                     l1212:
   611                           
   612                           ;task4_II.c: 73:             Lcd_command(0x80);
   613     0736  3080               	movlw	128
   614     0737  120A  118A  2475  120A  118A  	fcall	_Lcd_command
   615     073C                     l1214:
   616                           
   617                           ;task4_II.c: 74:             for (x = 0; x < 10; x++)
   618     073C  01FD               	clrf	_x
   619     073D                     l1216:
   620     073D  300A               	movlw	10
   621     073E  027D               	subwf	_x,w
   622     073F  1C03               	skipc
   623     0740  2F42               	goto	u831
   624     0741  2F43               	goto	u830
   625     0742                     u831:
   626     0742  2F44               	goto	l1220
   627     0743                     u830:
   628     0743  2F53               	goto	l1226
   629     0744                     l1220:
   630                           
   631                           ;task4_II.c: 75:             {;task4_II.c: 76:                 Lcd_data(array[x]);
   632     0744  087D               	movf	_x,w
   633     0745  3E20               	addlw	(low (_array| 0))& (0+255)
   634     0746  0084               	movwf	4
   635     0747  1383               	bcf	3,7	;select IRP bank0
   636     0748  0800               	movf	0,w
   637     0749  120A  118A  2460  120A  118A  	fcall	_Lcd_data
   638     074E                     l1222:
   639                           
   640                           ;task4_II.c: 77:             }
   641     074E  3001               	movlw	1
   642     074F  00FF               	movwf	btemp+1
   643     0750  087F               	movf	btemp+1,w
   644     0751  07FD               	addwf	_x,f
   645     0752  2F3D               	goto	l1216
   646     0753                     l1226:
   647                           
   648                           ;task4_II.c: 78:             Lcd_output(battery_voltage);
   649     0753  1283               	bcf	3,5	;RP0=0, select bank0
   650     0754  1303               	bcf	3,6	;RP1=0, select bank0
   651     0755  0831               	movf	_battery_voltage+1,w
   652     0756  00F9               	movwf	Lcd_output@voltage+1
   653     0757  0830               	movf	_battery_voltage,w
   654     0758  00F8               	movwf	Lcd_output@voltage
   655     0759  120A  118A  25CB  120A  118A  	fcall	_Lcd_output
   656     075E                     l1228:
   657                           
   658                           ;task4_II.c: 79:             display_status();
   659     075E  120A  118A  26AE  120A  118A  	fcall	_display_status
   660                           
   661                           ;task4_II.c: 80:             break;
   662     0763  2FEB               	goto	l66
   663     0764                     l1230:
   664                           
   665                           ;task4_II.c: 83:             if (battery_voltage < 205)
   666     0764  3000               	movlw	0
   667     0765  0231               	subwf	_battery_voltage+1,w
   668     0766  30CD               	movlw	205
   669     0767  1903               	skipnz
   670     0768  0230               	subwf	_battery_voltage,w
   671     0769  1803               	skipnc
   672     076A  2F6C               	goto	u841
   673     076B  2F6D               	goto	u840
   674     076C                     u841:
   675     076C  2F73               	goto	l1234
   676     076D                     u840:
   677     076D                     l1232:
   678                           
   679                           ;task4_II.c: 84:             {;task4_II.c: 85:                 battery_voltage++;
   680     076D  3001               	movlw	1
   681     076E  07B0               	addwf	_battery_voltage,f
   682     076F  1803               	skipnc
   683     0770  0AB1               	incf	_battery_voltage+1,f
   684     0771  3000               	movlw	0
   685     0772  07B1               	addwf	_battery_voltage+1,f
   686     0773                     l1234:
   687                           
   688                           ;task4_II.c: 87:             Lcd_command(0x80);
   689     0773  3080               	movlw	128
   690     0774  120A  118A  2475  120A  118A  	fcall	_Lcd_command
   691     0779                     l1236:
   692                           
   693                           ;task4_II.c: 88:             for (x = 0; x < 10; x++)
   694     0779  01FD               	clrf	_x
   695     077A                     l1238:
   696     077A  300A               	movlw	10
   697     077B  027D               	subwf	_x,w
   698     077C  1C03               	skipc
   699     077D  2F7F               	goto	u851
   700     077E  2F80               	goto	u850
   701     077F                     u851:
   702     077F  2F81               	goto	l1242
   703     0780                     u850:
   704     0780  2F53               	goto	l1226
   705     0781                     l1242:
   706                           
   707                           ;task4_II.c: 89:             {;task4_II.c: 90:                 Lcd_data(array[x]);
   708     0781  087D               	movf	_x,w
   709     0782  3E20               	addlw	(low (_array| 0))& (0+255)
   710     0783  0084               	movwf	4
   711     0784  1383               	bcf	3,7	;select IRP bank0
   712     0785  0800               	movf	0,w
   713     0786  120A  118A  2460  120A  118A  	fcall	_Lcd_data
   714     078B                     l1244:
   715                           
   716                           ;task4_II.c: 91:             }
   717     078B  3001               	movlw	1
   718     078C  00FF               	movwf	btemp+1
   719     078D  087F               	movf	btemp+1,w
   720     078E  07FD               	addwf	_x,f
   721     078F  2F7A               	goto	l1238
   722     0790                     l1252:
   723                           
   724                           ;task4_II.c: 97:             if (battery_voltage > 155)
   725     0790  3000               	movlw	0
   726     0791  0231               	subwf	_battery_voltage+1,w
   727     0792  309C               	movlw	156
   728     0793  1903               	skipnz
   729     0794  0230               	subwf	_battery_voltage,w
   730     0795  1C03               	skipc
   731     0796  2F98               	goto	u861
   732     0797  2F99               	goto	u860
   733     0798                     u861:
   734     0798  2F9F               	goto	l1256
   735     0799                     u860:
   736     0799                     l1254:
   737                           
   738                           ;task4_II.c: 98:             {;task4_II.c: 99:                 battery_voltage--;
   739     0799  3001               	movlw	1
   740     079A  02B0               	subwf	_battery_voltage,f
   741     079B  3000               	movlw	0
   742     079C  1C03               	skipc
   743     079D  03B1               	decf	_battery_voltage+1,f
   744     079E  02B1               	subwf	_battery_voltage+1,f
   745     079F                     l1256:
   746                           
   747                           ;task4_II.c: 101:             Lcd_command(0x80);
   748     079F  3080               	movlw	128
   749     07A0  120A  118A  2475  120A  118A  	fcall	_Lcd_command
   750     07A5                     l1258:
   751                           
   752                           ;task4_II.c: 102:             for (x = 0; x < 10; x++)
   753     07A5  01FD               	clrf	_x
   754     07A6                     l1260:
   755     07A6  300A               	movlw	10
   756     07A7  027D               	subwf	_x,w
   757     07A8  1C03               	skipc
   758     07A9  2FAB               	goto	u871
   759     07AA  2FAC               	goto	u870
   760     07AB                     u871:
   761     07AB  2FAD               	goto	l1264
   762     07AC                     u870:
   763     07AC  2F53               	goto	l1226
   764     07AD                     l1264:
   765                           
   766                           ;task4_II.c: 103:             {;task4_II.c: 104:                 Lcd_data(array[x]);
   767     07AD  087D               	movf	_x,w
   768     07AE  3E20               	addlw	(low (_array| 0))& (0+255)
   769     07AF  0084               	movwf	4
   770     07B0  1383               	bcf	3,7	;select IRP bank0
   771     07B1  0800               	movf	0,w
   772     07B2  120A  118A  2460  120A  118A  	fcall	_Lcd_data
   773     07B7                     l1266:
   774                           
   775                           ;task4_II.c: 105:             }
   776     07B7  3001               	movlw	1
   777     07B8  00FF               	movwf	btemp+1
   778     07B9  087F               	movf	btemp+1,w
   779     07BA  07FD               	addwf	_x,f
   780     07BB  2FA6               	goto	l1260
   781     07BC                     l1274:
   782                           
   783                           ;task4_II.c: 111:             battery_voltage = 155;
   784     07BC  309B               	movlw	155
   785     07BD  00B0               	movwf	_battery_voltage
   786     07BE  3000               	movlw	0
   787     07BF  00B1               	movwf	_battery_voltage+1
   788     07C0                     l1276:
   789                           
   790                           ;task4_II.c: 112:             Lcd_command(0x80);
   791     07C0  3080               	movlw	128
   792     07C1  120A  118A  2475  120A  118A  	fcall	_Lcd_command
   793     07C6                     l1278:
   794                           
   795                           ;task4_II.c: 113:             for (x = 0; x < 10; x++)
   796     07C6  01FD               	clrf	_x
   797     07C7                     l1280:
   798     07C7  300A               	movlw	10
   799     07C8  027D               	subwf	_x,w
   800     07C9  1C03               	skipc
   801     07CA  2FCC               	goto	u881
   802     07CB  2FCD               	goto	u880
   803     07CC                     u881:
   804     07CC  2FCE               	goto	l1284
   805     07CD                     u880:
   806     07CD  2F53               	goto	l1226
   807     07CE                     l1284:
   808                           
   809                           ;task4_II.c: 114:             {;task4_II.c: 115:                 Lcd_data(array[x]);
   810     07CE  087D               	movf	_x,w
   811     07CF  3E20               	addlw	(low (_array| 0))& (0+255)
   812     07D0  0084               	movwf	4
   813     07D1  1383               	bcf	3,7	;select IRP bank0
   814     07D2  0800               	movf	0,w
   815     07D3  120A  118A  2460  120A  118A  	fcall	_Lcd_data
   816     07D8                     l1286:
   817                           
   818                           ;task4_II.c: 116:             }
   819     07D8  3001               	movlw	1
   820     07D9  00FF               	movwf	btemp+1
   821     07DA  087F               	movf	btemp+1,w
   822     07DB  07FD               	addwf	_x,f
   823     07DC  2FC7               	goto	l1280
   824     07DD                     l1296:
   825     07DD  087C               	movf	_value,w
   826                           
   827                           ; Switch size 1, requested type "simple"
   828                           ; Number of cases is 4, Range of values is 112 to 224
   829                           ; switch strategies available:
   830                           ; Name         Instructions Cycles
   831                           ; simple_byte           13     7 (average)
   832                           ; jumptable            263     9 (fixed)
   833                           ;	Chosen strategy is simple_byte
   834     07DE  3A70               	xorlw	112	; case 112
   835     07DF  1903               	skipnz
   836     07E0  2FBC               	goto	l1274
   837     07E1  3AC0               	xorlw	192	; case 176
   838     07E2  1903               	skipnz
   839     07E3  2F90               	goto	l1252
   840     07E4  3A60               	xorlw	96	; case 208
   841     07E5  1903               	skipnz
   842     07E6  2F64               	goto	l1230
   843     07E7  3A30               	xorlw	48	; case 224
   844     07E8  1903               	skipnz
   845     07E9  2F36               	goto	l1212
   846     07EA  2FEB               	goto	l66
   847     07EB                     l66:
   848     07EB  0008               	return
   849     07EC                     __end_of_keyscan:
   850                           
   851                           	psect	text2
   852     06AE                     __ptext2:	
   853 ;; *************** function _display_status *****************
   854 ;; Defined at:
   855 ;;		line 156 in file "task4_II.c"
   856 ;; Parameters:    Size  Location     Type
   857 ;;		None
   858 ;; Auto vars:     Size  Location     Type
   859 ;;		None
   860 ;; Return value:  Size  Location     Type
   861 ;;                  1    wreg      void 
   862 ;; Registers used:
   863 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   864 ;; Tracked objects:
   865 ;;		On entry : 0/0
   866 ;;		On exit  : 0/0
   867 ;;		Unchanged: 0/0
   868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   869 ;;      Params:         0       0       0       0       0
   870 ;;      Locals:         0       0       0       0       0
   871 ;;      Temps:          0       0       0       0       0
   872 ;;      Totals:         0       0       0       0       0
   873 ;;Total ram usage:        0 bytes
   874 ;; Hardware stack levels used: 1
   875 ;; Hardware stack levels required when called: 1
   876 ;; This function calls:
   877 ;;		_Lcd_command
   878 ;;		_Lcd_data
   879 ;; This function is called by:
   880 ;;		_keyscan
   881 ;; This function uses a non-reentrant model
   882 ;;
   883                           
   884     06AE                     _display_status:	
   885                           ;psect for function _display_status
   886                           
   887     06AE                     l1118:	
   888                           ;incstack = 0
   889                           ; Regs used in _display_status: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   890                           
   891                           
   892                           ;task4_II.c: 158:     Lcd_command(0xC0);
   893     06AE  30C0               	movlw	192
   894     06AF  120A  118A  2475  120A  118A  	fcall	_Lcd_command
   895     06B4                     l1120:
   896                           
   897                           ;task4_II.c: 159:     for (x = 0; x < 14; x++)
   898     06B4  01FD               	clrf	_x
   899     06B5                     l1122:
   900     06B5  300E               	movlw	14
   901     06B6  027D               	subwf	_x,w
   902     06B7  1C03               	skipc
   903     06B8  2EBA               	goto	u771
   904     06B9  2EBB               	goto	u770
   905     06BA                     u771:
   906     06BA  2EBC               	goto	l1126
   907     06BB                     u770:
   908     06BB  2EC7               	goto	l1132
   909     06BC                     l1126:
   910                           
   911                           ;task4_II.c: 160:     {;task4_II.c: 161:         Lcd_data(' ');
   912     06BC  3020               	movlw	32
   913     06BD  120A  118A  2460  120A  118A  	fcall	_Lcd_data
   914     06C2                     l1128:
   915                           
   916                           ;task4_II.c: 162:     }
   917     06C2  3001               	movlw	1
   918     06C3  00FF               	movwf	btemp+1
   919     06C4  087F               	movf	btemp+1,w
   920     06C5  07FD               	addwf	_x,f
   921     06C6  2EB5               	goto	l1122
   922     06C7                     l1132:
   923                           
   924                           ;task4_II.c: 164:     Lcd_command(0xC0);
   925     06C7  30C0               	movlw	192
   926     06C8  120A  118A  2475  120A  118A  	fcall	_Lcd_command
   927     06CD                     l1134:
   928                           
   929                           ;task4_II.c: 165:     if (battery_voltage < 175)
   930     06CD  3000               	movlw	0
   931     06CE  1283               	bcf	3,5	;RP0=0, select bank0
   932     06CF  1303               	bcf	3,6	;RP1=0, select bank0
   933     06D0  0231               	subwf	_battery_voltage+1,w
   934     06D1  30AF               	movlw	175
   935     06D2  1903               	skipnz
   936     06D3  0230               	subwf	_battery_voltage,w
   937     06D4  1803               	skipnc
   938     06D5  2ED7               	goto	u781
   939     06D6  2ED8               	goto	u780
   940     06D7                     u781:
   941     06D7  2EF2               	goto	l1148
   942     06D8                     u780:
   943     06D8                     l1136:
   944                           
   945                           ;task4_II.c: 166:     {;task4_II.c: 167:         for (x = 0; x < 12; x++)
   946     06D8  01FD               	clrf	_x
   947     06D9                     l1138:
   948     06D9  300C               	movlw	12
   949     06DA  027D               	subwf	_x,w
   950     06DB  1C03               	skipc
   951     06DC  2EDE               	goto	u791
   952     06DD  2EDF               	goto	u790
   953     06DE                     u791:
   954     06DE  2EE0               	goto	l1142
   955     06DF                     u790:
   956     06DF  2F2F               	goto	l90
   957     06E0                     l1142:
   958                           
   959                           ;task4_II.c: 168:         {;task4_II.c: 169:             Lcd_data("BATTERY LOW  '\0'"[x]
      +                          );
   960     06E0  087D               	movf	_x,w
   961     06E1  3E26               	addlw	low ((STR_1-__stringbase)| (0+32768))
   962     06E2  0084               	movwf	4
   963     06E3  120A  118A  2003  120A  118A  	fcall	stringdir
   964     06E8  120A  118A  2460  120A  118A  	fcall	_Lcd_data
   965     06ED                     l1144:
   966                           
   967                           ;task4_II.c: 170:         }
   968     06ED  3001               	movlw	1
   969     06EE  00FF               	movwf	btemp+1
   970     06EF  087F               	movf	btemp+1,w
   971     06F0  07FD               	addwf	_x,f
   972     06F1  2ED9               	goto	l1138
   973     06F2                     l1148:
   974     06F2  3000               	movlw	0
   975     06F3  0231               	subwf	_battery_voltage+1,w
   976     06F4  30C4               	movlw	196
   977     06F5  1903               	skipnz
   978     06F6  0230               	subwf	_battery_voltage,w
   979     06F7  1803               	skipnc
   980     06F8  2EFA               	goto	u801
   981     06F9  2EFB               	goto	u800
   982     06FA                     u801:
   983     06FA  2F15               	goto	l1162
   984     06FB                     u800:
   985     06FB                     l1150:
   986                           
   987                           ;task4_II.c: 173:     {;task4_II.c: 174:         for (x = 0; x < 14; x++)
   988     06FB  01FD               	clrf	_x
   989     06FC                     l1152:
   990     06FC  300E               	movlw	14
   991     06FD  027D               	subwf	_x,w
   992     06FE  1C03               	skipc
   993     06FF  2F01               	goto	u811
   994     0700  2F02               	goto	u810
   995     0701                     u811:
   996     0701  2F03               	goto	l1156
   997     0702                     u810:
   998     0702  2F2F               	goto	l90
   999     0703                     l1156:
  1000                           
  1001                           ;task4_II.c: 175:         {;task4_II.c: 176:             Lcd_data("BATTERY NORMAL '\0'"[
      +                          x]);
  1002     0703  087D               	movf	_x,w
  1003     0704  3E01               	addlw	low ((STR_2-__stringbase)| (0+32768))
  1004     0705  0084               	movwf	4
  1005     0706  120A  118A  2003  120A  118A  	fcall	stringdir
  1006     070B  120A  118A  2460  120A  118A  	fcall	_Lcd_data
  1007     0710                     l1158:
  1008                           
  1009                           ;task4_II.c: 177:         }
  1010     0710  3001               	movlw	1
  1011     0711  00FF               	movwf	btemp+1
  1012     0712  087F               	movf	btemp+1,w
  1013     0713  07FD               	addwf	_x,f
  1014     0714  2EFC               	goto	l1152
  1015     0715                     l1162:
  1016                           
  1017                           ;task4_II.c: 180:     {;task4_II.c: 181:         for (x = 0; x < 12; x++)
  1018     0715  01FD               	clrf	_x
  1019     0716                     l1164:
  1020     0716  300C               	movlw	12
  1021     0717  027D               	subwf	_x,w
  1022     0718  1C03               	skipc
  1023     0719  2F1B               	goto	u821
  1024     071A  2F1C               	goto	u820
  1025     071B                     u821:
  1026     071B  2F1D               	goto	l1168
  1027     071C                     u820:
  1028     071C  2F2F               	goto	l90
  1029     071D                     l1168:
  1030                           
  1031                           ;task4_II.c: 182:         {;task4_II.c: 183:             Lcd_data("BATTERY HIGH  '\0'"[x
      +                          ]);
  1032     071D  087D               	movf	_x,w
  1033     071E  3E14               	addlw	low ((STR_3-__stringbase)| (0+32768))
  1034     071F  0084               	movwf	4
  1035     0720  120A  118A  2003  120A  118A  	fcall	stringdir
  1036     0725  120A  118A  2460  120A  118A  	fcall	_Lcd_data
  1037     072A                     l1170:
  1038                           
  1039                           ;task4_II.c: 184:         }
  1040     072A  3001               	movlw	1
  1041     072B  00FF               	movwf	btemp+1
  1042     072C  087F               	movf	btemp+1,w
  1043     072D  07FD               	addwf	_x,f
  1044     072E  2F16               	goto	l1164
  1045     072F                     l90:
  1046     072F  0008               	return
  1047     0730                     __end_of_display_status:
  1048                           
  1049                           	psect	text3
  1050     05CB                     __ptext3:	
  1051 ;; *************** function _Lcd_output *****************
  1052 ;; Defined at:
  1053 ;;		line 141 in file "task4_II.c"
  1054 ;; Parameters:    Size  Location     Type
  1055 ;;  voltage         2    8[COMMON] unsigned int 
  1056 ;; Auto vars:     Size  Location     Type
  1057 ;;  tens            1    2[BANK0 ] unsigned char 
  1058 ;;  hundreds        1    1[BANK0 ] unsigned char 
  1059 ;;  tenths          1    0[BANK0 ] unsigned char 
  1060 ;; Return value:  Size  Location     Type
  1061 ;;                  1    wreg      void 
  1062 ;; Registers used:
  1063 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1064 ;; Tracked objects:
  1065 ;;		On entry : 0/0
  1066 ;;		On exit  : 0/0
  1067 ;;		Unchanged: 0/0
  1068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1069 ;;      Params:         2       0       0       0       0
  1070 ;;      Locals:         0       3       0       0       0
  1071 ;;      Temps:          2       0       0       0       0
  1072 ;;      Totals:         4       3       0       0       0
  1073 ;;Total ram usage:        7 bytes
  1074 ;; Hardware stack levels used: 1
  1075 ;; Hardware stack levels required when called: 1
  1076 ;; This function calls:
  1077 ;;		_Lcd_data
  1078 ;;		___awdiv
  1079 ;;		___awmod
  1080 ;;		___lwdiv
  1081 ;;		___lwmod
  1082 ;; This function is called by:
  1083 ;;		_keyscan
  1084 ;; This function uses a non-reentrant model
  1085 ;;
  1086                           
  1087     05CB                     _Lcd_output:	
  1088                           ;psect for function _Lcd_output
  1089                           
  1090     05CB                     l1116:	
  1091                           ;incstack = 0
  1092                           ; Regs used in _Lcd_output: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1093                           
  1094                           
  1095                           ;task4_II.c: 141: void Lcd_output(unsigned int voltage);task4_II.c: 142: {;task4_II.c: 1
      +                          43:     unsigned char tens = voltage / 10;
  1096     05CB  300A               	movlw	10
  1097     05CC  00F0               	movwf	___lwdiv@divisor
  1098     05CD  3000               	movlw	0
  1099     05CE  00F1               	movwf	___lwdiv@divisor+1
  1100     05CF  0879               	movf	Lcd_output@voltage+1,w
  1101     05D0  00F3               	movwf	___lwdiv@dividend+1
  1102     05D1  0878               	movf	Lcd_output@voltage,w
  1103     05D2  00F2               	movwf	___lwdiv@dividend
  1104     05D3  120A  118A  24C7  120A  118A  	fcall	___lwdiv
  1105     05D8  0870               	movf	?___lwdiv,w
  1106     05D9  1283               	bcf	3,5	;RP0=0, select bank0
  1107     05DA  1303               	bcf	3,6	;RP1=0, select bank0
  1108     05DB  00B4               	movwf	Lcd_output@tens
  1109                           
  1110                           ;task4_II.c: 144:     unsigned char tenths = voltage % 10;
  1111     05DC  300A               	movlw	10
  1112     05DD  00F0               	movwf	___lwmod@divisor
  1113     05DE  3000               	movlw	0
  1114     05DF  00F1               	movwf	___lwmod@divisor+1
  1115     05E0  0879               	movf	Lcd_output@voltage+1,w
  1116     05E1  00F3               	movwf	___lwmod@dividend+1
  1117     05E2  0878               	movf	Lcd_output@voltage,w
  1118     05E3  00F2               	movwf	___lwmod@dividend
  1119     05E4  120A  118A  248D  120A  118A  	fcall	___lwmod
  1120     05E9  0870               	movf	?___lwmod,w
  1121     05EA  1283               	bcf	3,5	;RP0=0, select bank0
  1122     05EB  1303               	bcf	3,6	;RP1=0, select bank0
  1123     05EC  00B2               	movwf	Lcd_output@tenths
  1124                           
  1125                           ;task4_II.c: 145:     unsigned char hundreds = tens / 10;
  1126     05ED  300A               	movlw	10
  1127     05EE  00F0               	movwf	___awdiv@divisor
  1128     05EF  3000               	movlw	0
  1129     05F0  00F1               	movwf	___awdiv@divisor+1
  1130     05F1  0834               	movf	Lcd_output@tens,w
  1131     05F2  00FA               	movwf	??_Lcd_output
  1132     05F3  01FB               	clrf	??_Lcd_output+1
  1133     05F4  087A               	movf	??_Lcd_output,w
  1134     05F5  00F2               	movwf	___awdiv@dividend
  1135     05F6  087B               	movf	??_Lcd_output+1,w
  1136     05F7  00F3               	movwf	___awdiv@dividend+1
  1137     05F8  120A  118A  2564  120A  118A  	fcall	___awdiv
  1138     05FD  0870               	movf	?___awdiv,w
  1139     05FE  1283               	bcf	3,5	;RP0=0, select bank0
  1140     05FF  1303               	bcf	3,6	;RP1=0, select bank0
  1141     0600  00B3               	movwf	Lcd_output@hundreds
  1142                           
  1143                           ;task4_II.c: 147:     tens = tens % 10;
  1144     0601  300A               	movlw	10
  1145     0602  00F0               	movwf	___awmod@divisor
  1146     0603  3000               	movlw	0
  1147     0604  00F1               	movwf	___awmod@divisor+1
  1148     0605  0834               	movf	Lcd_output@tens,w
  1149     0606  00FA               	movwf	??_Lcd_output
  1150     0607  01FB               	clrf	??_Lcd_output+1
  1151     0608  087A               	movf	??_Lcd_output,w
  1152     0609  00F2               	movwf	___awmod@dividend
  1153     060A  087B               	movf	??_Lcd_output+1,w
  1154     060B  00F3               	movwf	___awmod@dividend+1
  1155     060C  120A  118A  250B  120A  118A  	fcall	___awmod
  1156     0611  0870               	movf	?___awmod,w
  1157     0612  1283               	bcf	3,5	;RP0=0, select bank0
  1158     0613  1303               	bcf	3,6	;RP1=0, select bank0
  1159     0614  00B4               	movwf	Lcd_output@tens
  1160                           
  1161                           ;task4_II.c: 149:     Lcd_data(0x30 + hundreds);
  1162     0615  0833               	movf	Lcd_output@hundreds,w
  1163     0616  3E30               	addlw	48
  1164     0617  120A  118A  2460  120A  118A  	fcall	_Lcd_data
  1165                           
  1166                           ;task4_II.c: 150:     Lcd_data(0x30 + tens);
  1167     061C  1283               	bcf	3,5	;RP0=0, select bank0
  1168     061D  1303               	bcf	3,6	;RP1=0, select bank0
  1169     061E  0834               	movf	Lcd_output@tens,w
  1170     061F  3E30               	addlw	48
  1171     0620  120A  118A  2460  120A  118A  	fcall	_Lcd_data
  1172                           
  1173                           ;task4_II.c: 151:     Lcd_data('.');
  1174     0625  302E               	movlw	46
  1175     0626  120A  118A  2460  120A  118A  	fcall	_Lcd_data
  1176                           
  1177                           ;task4_II.c: 152:     Lcd_data(0x30 + tenths);
  1178     062B  1283               	bcf	3,5	;RP0=0, select bank0
  1179     062C  1303               	bcf	3,6	;RP1=0, select bank0
  1180     062D  0832               	movf	Lcd_output@tenths,w
  1181     062E  3E30               	addlw	48
  1182     062F  120A  118A  2460  120A  118A  	fcall	_Lcd_data
  1183     0634                     l75:
  1184     0634  0008               	return
  1185     0635                     __end_of_Lcd_output:
  1186                           
  1187                           	psect	text4
  1188     048D                     __ptext4:	
  1189 ;; *************** function ___lwmod *****************
  1190 ;; Defined at:
  1191 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwmod.c"
  1192 ;; Parameters:    Size  Location     Type
  1193 ;;  divisor         2    0[COMMON] unsigned int 
  1194 ;;  dividend        2    2[COMMON] unsigned int 
  1195 ;; Auto vars:     Size  Location     Type
  1196 ;;  counter         1    4[COMMON] unsigned char 
  1197 ;; Return value:  Size  Location     Type
  1198 ;;                  2    0[COMMON] unsigned int 
  1199 ;; Registers used:
  1200 ;;		wreg, status,2, status,0, btemp+1
  1201 ;; Tracked objects:
  1202 ;;		On entry : 0/0
  1203 ;;		On exit  : 0/0
  1204 ;;		Unchanged: 0/0
  1205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1206 ;;      Params:         4       0       0       0       0
  1207 ;;      Locals:         1       0       0       0       0
  1208 ;;      Temps:          0       0       0       0       0
  1209 ;;      Totals:         5       0       0       0       0
  1210 ;;Total ram usage:        5 bytes
  1211 ;; Hardware stack levels used: 1
  1212 ;; This function calls:
  1213 ;;		Nothing
  1214 ;; This function is called by:
  1215 ;;		_Lcd_output
  1216 ;; This function uses a non-reentrant model
  1217 ;;
  1218                           
  1219     048D                     ___lwmod:	
  1220                           ;psect for function ___lwmod
  1221                           
  1222     048D                     l1094:	
  1223                           ;incstack = 0
  1224                           ; Regs used in ___lwmod: [wreg+status,2+status,0+btemp+1]
  1225                           
  1226     048D  0870               	movf	___lwmod@divisor,w
  1227     048E  0471               	iorwf	___lwmod@divisor+1,w
  1228     048F  1903               	btfsc	3,2
  1229     0490  2C92               	goto	u711
  1230     0491  2C93               	goto	u710
  1231     0492                     u711:
  1232     0492  2CC2               	goto	l1112
  1233     0493                     u710:
  1234     0493                     l1096:
  1235     0493  01F4               	clrf	___lwmod@counter
  1236     0494  0AF4               	incf	___lwmod@counter,f
  1237     0495  2CA1               	goto	l1102
  1238     0496                     l1098:
  1239     0496  3001               	movlw	1
  1240     0497                     u725:
  1241     0497  1003               	clrc
  1242     0498  0DF0               	rlf	___lwmod@divisor,f
  1243     0499  0DF1               	rlf	___lwmod@divisor+1,f
  1244     049A  3EFF               	addlw	-1
  1245     049B  1D03               	skipz
  1246     049C  2C97               	goto	u725
  1247     049D                     l1100:
  1248     049D  3001               	movlw	1
  1249     049E  00FF               	movwf	btemp+1
  1250     049F  087F               	movf	btemp+1,w
  1251     04A0  07F4               	addwf	___lwmod@counter,f
  1252     04A1                     l1102:
  1253     04A1  1FF1               	btfss	___lwmod@divisor+1,7
  1254     04A2  2CA4               	goto	u731
  1255     04A3  2CA5               	goto	u730
  1256     04A4                     u731:
  1257     04A4  2C96               	goto	l1098
  1258     04A5                     u730:
  1259     04A5                     l1104:
  1260     04A5  0871               	movf	___lwmod@divisor+1,w
  1261     04A6  0273               	subwf	___lwmod@dividend+1,w
  1262     04A7  1D03               	skipz
  1263     04A8  2CAB               	goto	u745
  1264     04A9  0870               	movf	___lwmod@divisor,w
  1265     04AA  0272               	subwf	___lwmod@dividend,w
  1266     04AB                     u745:
  1267     04AB  1C03               	skipc
  1268     04AC  2CAE               	goto	u741
  1269     04AD  2CAF               	goto	u740
  1270     04AE                     u741:
  1271     04AE  2CB5               	goto	l1108
  1272     04AF                     u740:
  1273     04AF                     l1106:
  1274     04AF  0870               	movf	___lwmod@divisor,w
  1275     04B0  02F2               	subwf	___lwmod@dividend,f
  1276     04B1  0871               	movf	___lwmod@divisor+1,w
  1277     04B2  1C03               	skipc
  1278     04B3  03F3               	decf	___lwmod@dividend+1,f
  1279     04B4  02F3               	subwf	___lwmod@dividend+1,f
  1280     04B5                     l1108:
  1281     04B5  3001               	movlw	1
  1282     04B6                     u755:
  1283     04B6  1003               	clrc
  1284     04B7  0CF1               	rrf	___lwmod@divisor+1,f
  1285     04B8  0CF0               	rrf	___lwmod@divisor,f
  1286     04B9  3EFF               	addlw	-1
  1287     04BA  1D03               	skipz
  1288     04BB  2CB6               	goto	u755
  1289     04BC                     l1110:
  1290     04BC  3001               	movlw	1
  1291     04BD  02F4               	subwf	___lwmod@counter,f
  1292     04BE  1D03               	btfss	3,2
  1293     04BF  2CC1               	goto	u761
  1294     04C0  2CC2               	goto	u760
  1295     04C1                     u761:
  1296     04C1  2CA5               	goto	l1104
  1297     04C2                     u760:
  1298     04C2                     l1112:
  1299     04C2  0873               	movf	___lwmod@dividend+1,w
  1300     04C3  00F1               	movwf	?___lwmod+1
  1301     04C4  0872               	movf	___lwmod@dividend,w
  1302     04C5  00F0               	movwf	?___lwmod
  1303     04C6                     l466:
  1304     04C6  0008               	return
  1305     04C7                     __end_of___lwmod:
  1306                           
  1307                           	psect	text5
  1308     04C7                     __ptext5:	
  1309 ;; *************** function ___lwdiv *****************
  1310 ;; Defined at:
  1311 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwdiv.c"
  1312 ;; Parameters:    Size  Location     Type
  1313 ;;  divisor         2    0[COMMON] unsigned int 
  1314 ;;  dividend        2    2[COMMON] unsigned int 
  1315 ;; Auto vars:     Size  Location     Type
  1316 ;;  quotient        2    4[COMMON] unsigned int 
  1317 ;;  counter         1    6[COMMON] unsigned char 
  1318 ;; Return value:  Size  Location     Type
  1319 ;;                  2    0[COMMON] unsigned int 
  1320 ;; Registers used:
  1321 ;;		wreg, status,2, status,0, btemp+1
  1322 ;; Tracked objects:
  1323 ;;		On entry : 0/0
  1324 ;;		On exit  : 0/0
  1325 ;;		Unchanged: 0/0
  1326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1327 ;;      Params:         4       0       0       0       0
  1328 ;;      Locals:         3       0       0       0       0
  1329 ;;      Temps:          0       0       0       0       0
  1330 ;;      Totals:         7       0       0       0       0
  1331 ;;Total ram usage:        7 bytes
  1332 ;; Hardware stack levels used: 1
  1333 ;; This function calls:
  1334 ;;		Nothing
  1335 ;; This function is called by:
  1336 ;;		_Lcd_output
  1337 ;; This function uses a non-reentrant model
  1338 ;;
  1339                           
  1340     04C7                     ___lwdiv:	
  1341                           ;psect for function ___lwdiv
  1342                           
  1343     04C7                     l1068:	
  1344                           ;incstack = 0
  1345                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  1346                           
  1347     04C7  01F4               	clrf	___lwdiv@quotient
  1348     04C8  01F5               	clrf	___lwdiv@quotient+1
  1349     04C9                     l1070:
  1350     04C9  0870               	movf	___lwdiv@divisor,w
  1351     04CA  0471               	iorwf	___lwdiv@divisor+1,w
  1352     04CB  1903               	btfsc	3,2
  1353     04CC  2CCE               	goto	u641
  1354     04CD  2CCF               	goto	u640
  1355     04CE                     u641:
  1356     04CE  2D06               	goto	l1090
  1357     04CF                     u640:
  1358     04CF                     l1072:
  1359     04CF  01F6               	clrf	___lwdiv@counter
  1360     04D0  0AF6               	incf	___lwdiv@counter,f
  1361     04D1  2CDD               	goto	l1078
  1362     04D2                     l1074:
  1363     04D2  3001               	movlw	1
  1364     04D3                     u655:
  1365     04D3  1003               	clrc
  1366     04D4  0DF0               	rlf	___lwdiv@divisor,f
  1367     04D5  0DF1               	rlf	___lwdiv@divisor+1,f
  1368     04D6  3EFF               	addlw	-1
  1369     04D7  1D03               	skipz
  1370     04D8  2CD3               	goto	u655
  1371     04D9                     l1076:
  1372     04D9  3001               	movlw	1
  1373     04DA  00FF               	movwf	btemp+1
  1374     04DB  087F               	movf	btemp+1,w
  1375     04DC  07F6               	addwf	___lwdiv@counter,f
  1376     04DD                     l1078:
  1377     04DD  1FF1               	btfss	___lwdiv@divisor+1,7
  1378     04DE  2CE0               	goto	u661
  1379     04DF  2CE1               	goto	u660
  1380     04E0                     u661:
  1381     04E0  2CD2               	goto	l1074
  1382     04E1                     u660:
  1383     04E1                     l1080:
  1384     04E1  3001               	movlw	1
  1385     04E2                     u675:
  1386     04E2  1003               	clrc
  1387     04E3  0DF4               	rlf	___lwdiv@quotient,f
  1388     04E4  0DF5               	rlf	___lwdiv@quotient+1,f
  1389     04E5  3EFF               	addlw	-1
  1390     04E6  1D03               	skipz
  1391     04E7  2CE2               	goto	u675
  1392     04E8  0871               	movf	___lwdiv@divisor+1,w
  1393     04E9  0273               	subwf	___lwdiv@dividend+1,w
  1394     04EA  1D03               	skipz
  1395     04EB  2CEE               	goto	u685
  1396     04EC  0870               	movf	___lwdiv@divisor,w
  1397     04ED  0272               	subwf	___lwdiv@dividend,w
  1398     04EE                     u685:
  1399     04EE  1C03               	skipc
  1400     04EF  2CF1               	goto	u681
  1401     04F0  2CF2               	goto	u680
  1402     04F1                     u681:
  1403     04F1  2CF9               	goto	l1086
  1404     04F2                     u680:
  1405     04F2                     l1082:
  1406     04F2  0870               	movf	___lwdiv@divisor,w
  1407     04F3  02F2               	subwf	___lwdiv@dividend,f
  1408     04F4  0871               	movf	___lwdiv@divisor+1,w
  1409     04F5  1C03               	skipc
  1410     04F6  03F3               	decf	___lwdiv@dividend+1,f
  1411     04F7  02F3               	subwf	___lwdiv@dividend+1,f
  1412     04F8                     l1084:
  1413     04F8  1474               	bsf	___lwdiv@quotient,0
  1414     04F9                     l1086:
  1415     04F9  3001               	movlw	1
  1416     04FA                     u695:
  1417     04FA  1003               	clrc
  1418     04FB  0CF1               	rrf	___lwdiv@divisor+1,f
  1419     04FC  0CF0               	rrf	___lwdiv@divisor,f
  1420     04FD  3EFF               	addlw	-1
  1421     04FE  1D03               	skipz
  1422     04FF  2CFA               	goto	u695
  1423     0500                     l1088:
  1424     0500  3001               	movlw	1
  1425     0501  02F6               	subwf	___lwdiv@counter,f
  1426     0502  1D03               	btfss	3,2
  1427     0503  2D05               	goto	u701
  1428     0504  2D06               	goto	u700
  1429     0505                     u701:
  1430     0505  2CE1               	goto	l1080
  1431     0506                     u700:
  1432     0506                     l1090:
  1433     0506  0875               	movf	___lwdiv@quotient+1,w
  1434     0507  00F1               	movwf	?___lwdiv+1
  1435     0508  0874               	movf	___lwdiv@quotient,w
  1436     0509  00F0               	movwf	?___lwdiv
  1437     050A                     l456:
  1438     050A  0008               	return
  1439     050B                     __end_of___lwdiv:
  1440                           
  1441                           	psect	text6
  1442     050B                     __ptext6:	
  1443 ;; *************** function ___awmod *****************
  1444 ;; Defined at:
  1445 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
  1446 ;; Parameters:    Size  Location     Type
  1447 ;;  divisor         2    0[COMMON] int 
  1448 ;;  dividend        2    2[COMMON] int 
  1449 ;; Auto vars:     Size  Location     Type
  1450 ;;  sign            1    5[COMMON] unsigned char 
  1451 ;;  counter         1    4[COMMON] unsigned char 
  1452 ;; Return value:  Size  Location     Type
  1453 ;;                  2    0[COMMON] int 
  1454 ;; Registers used:
  1455 ;;		wreg, status,2, status,0, btemp+1
  1456 ;; Tracked objects:
  1457 ;;		On entry : 0/0
  1458 ;;		On exit  : 0/0
  1459 ;;		Unchanged: 0/0
  1460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1461 ;;      Params:         4       0       0       0       0
  1462 ;;      Locals:         2       0       0       0       0
  1463 ;;      Temps:          0       0       0       0       0
  1464 ;;      Totals:         6       0       0       0       0
  1465 ;;Total ram usage:        6 bytes
  1466 ;; Hardware stack levels used: 1
  1467 ;; This function calls:
  1468 ;;		Nothing
  1469 ;; This function is called by:
  1470 ;;		_Lcd_output
  1471 ;; This function uses a non-reentrant model
  1472 ;;
  1473                           
  1474     050B                     ___awmod:	
  1475                           ;psect for function ___awmod
  1476                           
  1477     050B                     l1030:	
  1478                           ;incstack = 0
  1479                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
  1480                           
  1481     050B  01F5               	clrf	___awmod@sign
  1482     050C                     l1032:
  1483     050C  1FF3               	btfss	___awmod@dividend+1,7
  1484     050D  2D0F               	goto	u551
  1485     050E  2D10               	goto	u550
  1486     050F                     u551:
  1487     050F  2D17               	goto	l1038
  1488     0510                     u550:
  1489     0510                     l1034:
  1490     0510  09F2               	comf	___awmod@dividend,f
  1491     0511  09F3               	comf	___awmod@dividend+1,f
  1492     0512  0AF2               	incf	___awmod@dividend,f
  1493     0513  1903               	skipnz
  1494     0514  0AF3               	incf	___awmod@dividend+1,f
  1495     0515                     l1036:
  1496     0515  01F5               	clrf	___awmod@sign
  1497     0516  0AF5               	incf	___awmod@sign,f
  1498     0517                     l1038:
  1499     0517  1FF1               	btfss	___awmod@divisor+1,7
  1500     0518  2D1A               	goto	u561
  1501     0519  2D1B               	goto	u560
  1502     051A                     u561:
  1503     051A  2D20               	goto	l1042
  1504     051B                     u560:
  1505     051B                     l1040:
  1506     051B  09F0               	comf	___awmod@divisor,f
  1507     051C  09F1               	comf	___awmod@divisor+1,f
  1508     051D  0AF0               	incf	___awmod@divisor,f
  1509     051E  1903               	skipnz
  1510     051F  0AF1               	incf	___awmod@divisor+1,f
  1511     0520                     l1042:
  1512     0520  0870               	movf	___awmod@divisor,w
  1513     0521  0471               	iorwf	___awmod@divisor+1,w
  1514     0522  1903               	btfsc	3,2
  1515     0523  2D25               	goto	u571
  1516     0524  2D26               	goto	u570
  1517     0525                     u571:
  1518     0525  2D55               	goto	l1060
  1519     0526                     u570:
  1520     0526                     l1044:
  1521     0526  01F4               	clrf	___awmod@counter
  1522     0527  0AF4               	incf	___awmod@counter,f
  1523     0528  2D34               	goto	l1050
  1524     0529                     l1046:
  1525     0529  3001               	movlw	1
  1526     052A                     u585:
  1527     052A  1003               	clrc
  1528     052B  0DF0               	rlf	___awmod@divisor,f
  1529     052C  0DF1               	rlf	___awmod@divisor+1,f
  1530     052D  3EFF               	addlw	-1
  1531     052E  1D03               	skipz
  1532     052F  2D2A               	goto	u585
  1533     0530                     l1048:
  1534     0530  3001               	movlw	1
  1535     0531  00FF               	movwf	btemp+1
  1536     0532  087F               	movf	btemp+1,w
  1537     0533  07F4               	addwf	___awmod@counter,f
  1538     0534                     l1050:
  1539     0534  1FF1               	btfss	___awmod@divisor+1,7
  1540     0535  2D37               	goto	u591
  1541     0536  2D38               	goto	u590
  1542     0537                     u591:
  1543     0537  2D29               	goto	l1046
  1544     0538                     u590:
  1545     0538                     l1052:
  1546     0538  0871               	movf	___awmod@divisor+1,w
  1547     0539  0273               	subwf	___awmod@dividend+1,w
  1548     053A  1D03               	skipz
  1549     053B  2D3E               	goto	u605
  1550     053C  0870               	movf	___awmod@divisor,w
  1551     053D  0272               	subwf	___awmod@dividend,w
  1552     053E                     u605:
  1553     053E  1C03               	skipc
  1554     053F  2D41               	goto	u601
  1555     0540  2D42               	goto	u600
  1556     0541                     u601:
  1557     0541  2D48               	goto	l1056
  1558     0542                     u600:
  1559     0542                     l1054:
  1560     0542  0870               	movf	___awmod@divisor,w
  1561     0543  02F2               	subwf	___awmod@dividend,f
  1562     0544  0871               	movf	___awmod@divisor+1,w
  1563     0545  1C03               	skipc
  1564     0546  03F3               	decf	___awmod@dividend+1,f
  1565     0547  02F3               	subwf	___awmod@dividend+1,f
  1566     0548                     l1056:
  1567     0548  3001               	movlw	1
  1568     0549                     u615:
  1569     0549  1003               	clrc
  1570     054A  0CF1               	rrf	___awmod@divisor+1,f
  1571     054B  0CF0               	rrf	___awmod@divisor,f
  1572     054C  3EFF               	addlw	-1
  1573     054D  1D03               	skipz
  1574     054E  2D49               	goto	u615
  1575     054F                     l1058:
  1576     054F  3001               	movlw	1
  1577     0550  02F4               	subwf	___awmod@counter,f
  1578     0551  1D03               	btfss	3,2
  1579     0552  2D54               	goto	u621
  1580     0553  2D55               	goto	u620
  1581     0554                     u621:
  1582     0554  2D38               	goto	l1052
  1583     0555                     u620:
  1584     0555                     l1060:
  1585     0555  0875               	movf	___awmod@sign,w
  1586     0556  1903               	btfsc	3,2
  1587     0557  2D59               	goto	u631
  1588     0558  2D5A               	goto	u630
  1589     0559                     u631:
  1590     0559  2D5F               	goto	l1064
  1591     055A                     u630:
  1592     055A                     l1062:
  1593     055A  09F2               	comf	___awmod@dividend,f
  1594     055B  09F3               	comf	___awmod@dividend+1,f
  1595     055C  0AF2               	incf	___awmod@dividend,f
  1596     055D  1903               	skipnz
  1597     055E  0AF3               	incf	___awmod@dividend+1,f
  1598     055F                     l1064:
  1599     055F  0873               	movf	___awmod@dividend+1,w
  1600     0560  00F1               	movwf	?___awmod+1
  1601     0561  0872               	movf	___awmod@dividend,w
  1602     0562  00F0               	movwf	?___awmod
  1603     0563                     l342:
  1604     0563  0008               	return
  1605     0564                     __end_of___awmod:
  1606                           
  1607                           	psect	text7
  1608     0564                     __ptext7:	
  1609 ;; *************** function ___awdiv *****************
  1610 ;; Defined at:
  1611 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
  1612 ;; Parameters:    Size  Location     Type
  1613 ;;  divisor         2    0[COMMON] int 
  1614 ;;  dividend        2    2[COMMON] int 
  1615 ;; Auto vars:     Size  Location     Type
  1616 ;;  quotient        2    6[COMMON] int 
  1617 ;;  sign            1    5[COMMON] unsigned char 
  1618 ;;  counter         1    4[COMMON] unsigned char 
  1619 ;; Return value:  Size  Location     Type
  1620 ;;                  2    0[COMMON] int 
  1621 ;; Registers used:
  1622 ;;		wreg, status,2, status,0, btemp+1
  1623 ;; Tracked objects:
  1624 ;;		On entry : 0/0
  1625 ;;		On exit  : 0/0
  1626 ;;		Unchanged: 0/0
  1627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1628 ;;      Params:         4       0       0       0       0
  1629 ;;      Locals:         4       0       0       0       0
  1630 ;;      Temps:          0       0       0       0       0
  1631 ;;      Totals:         8       0       0       0       0
  1632 ;;Total ram usage:        8 bytes
  1633 ;; Hardware stack levels used: 1
  1634 ;; This function calls:
  1635 ;;		Nothing
  1636 ;; This function is called by:
  1637 ;;		_Lcd_output
  1638 ;; This function uses a non-reentrant model
  1639 ;;
  1640                           
  1641     0564                     ___awdiv:	
  1642                           ;psect for function ___awdiv
  1643                           
  1644     0564                     l986:	
  1645                           ;incstack = 0
  1646                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  1647                           
  1648     0564  01F5               	clrf	___awdiv@sign
  1649     0565                     l988:
  1650     0565  1FF1               	btfss	___awdiv@divisor+1,7
  1651     0566  2D68               	goto	u451
  1652     0567  2D69               	goto	u450
  1653     0568                     u451:
  1654     0568  2D70               	goto	l994
  1655     0569                     u450:
  1656     0569                     l990:
  1657     0569  09F0               	comf	___awdiv@divisor,f
  1658     056A  09F1               	comf	___awdiv@divisor+1,f
  1659     056B  0AF0               	incf	___awdiv@divisor,f
  1660     056C  1903               	skipnz
  1661     056D  0AF1               	incf	___awdiv@divisor+1,f
  1662     056E                     l992:
  1663     056E  01F5               	clrf	___awdiv@sign
  1664     056F  0AF5               	incf	___awdiv@sign,f
  1665     0570                     l994:
  1666     0570  1FF3               	btfss	___awdiv@dividend+1,7
  1667     0571  2D73               	goto	u461
  1668     0572  2D74               	goto	u460
  1669     0573                     u461:
  1670     0573  2D7D               	goto	l1000
  1671     0574                     u460:
  1672     0574                     l996:
  1673     0574  09F2               	comf	___awdiv@dividend,f
  1674     0575  09F3               	comf	___awdiv@dividend+1,f
  1675     0576  0AF2               	incf	___awdiv@dividend,f
  1676     0577  1903               	skipnz
  1677     0578  0AF3               	incf	___awdiv@dividend+1,f
  1678     0579                     l998:
  1679     0579  3001               	movlw	1
  1680     057A  00FF               	movwf	btemp+1
  1681     057B  087F               	movf	btemp+1,w
  1682     057C  06F5               	xorwf	___awdiv@sign,f
  1683     057D                     l1000:
  1684     057D  01F6               	clrf	___awdiv@quotient
  1685     057E  01F7               	clrf	___awdiv@quotient+1
  1686     057F                     l1002:
  1687     057F  0870               	movf	___awdiv@divisor,w
  1688     0580  0471               	iorwf	___awdiv@divisor+1,w
  1689     0581  1903               	btfsc	3,2
  1690     0582  2D84               	goto	u471
  1691     0583  2D85               	goto	u470
  1692     0584                     u471:
  1693     0584  2DBC               	goto	l1022
  1694     0585                     u470:
  1695     0585                     l1004:
  1696     0585  01F4               	clrf	___awdiv@counter
  1697     0586  0AF4               	incf	___awdiv@counter,f
  1698     0587  2D93               	goto	l1010
  1699     0588                     l1006:
  1700     0588  3001               	movlw	1
  1701     0589                     u485:
  1702     0589  1003               	clrc
  1703     058A  0DF0               	rlf	___awdiv@divisor,f
  1704     058B  0DF1               	rlf	___awdiv@divisor+1,f
  1705     058C  3EFF               	addlw	-1
  1706     058D  1D03               	skipz
  1707     058E  2D89               	goto	u485
  1708     058F                     l1008:
  1709     058F  3001               	movlw	1
  1710     0590  00FF               	movwf	btemp+1
  1711     0591  087F               	movf	btemp+1,w
  1712     0592  07F4               	addwf	___awdiv@counter,f
  1713     0593                     l1010:
  1714     0593  1FF1               	btfss	___awdiv@divisor+1,7
  1715     0594  2D96               	goto	u491
  1716     0595  2D97               	goto	u490
  1717     0596                     u491:
  1718     0596  2D88               	goto	l1006
  1719     0597                     u490:
  1720     0597                     l1012:
  1721     0597  3001               	movlw	1
  1722     0598                     u505:
  1723     0598  1003               	clrc
  1724     0599  0DF6               	rlf	___awdiv@quotient,f
  1725     059A  0DF7               	rlf	___awdiv@quotient+1,f
  1726     059B  3EFF               	addlw	-1
  1727     059C  1D03               	skipz
  1728     059D  2D98               	goto	u505
  1729     059E  0871               	movf	___awdiv@divisor+1,w
  1730     059F  0273               	subwf	___awdiv@dividend+1,w
  1731     05A0  1D03               	skipz
  1732     05A1  2DA4               	goto	u515
  1733     05A2  0870               	movf	___awdiv@divisor,w
  1734     05A3  0272               	subwf	___awdiv@dividend,w
  1735     05A4                     u515:
  1736     05A4  1C03               	skipc
  1737     05A5  2DA7               	goto	u511
  1738     05A6  2DA8               	goto	u510
  1739     05A7                     u511:
  1740     05A7  2DAF               	goto	l1018
  1741     05A8                     u510:
  1742     05A8                     l1014:
  1743     05A8  0870               	movf	___awdiv@divisor,w
  1744     05A9  02F2               	subwf	___awdiv@dividend,f
  1745     05AA  0871               	movf	___awdiv@divisor+1,w
  1746     05AB  1C03               	skipc
  1747     05AC  03F3               	decf	___awdiv@dividend+1,f
  1748     05AD  02F3               	subwf	___awdiv@dividend+1,f
  1749     05AE                     l1016:
  1750     05AE  1476               	bsf	___awdiv@quotient,0
  1751     05AF                     l1018:
  1752     05AF  3001               	movlw	1
  1753     05B0                     u525:
  1754     05B0  1003               	clrc
  1755     05B1  0CF1               	rrf	___awdiv@divisor+1,f
  1756     05B2  0CF0               	rrf	___awdiv@divisor,f
  1757     05B3  3EFF               	addlw	-1
  1758     05B4  1D03               	skipz
  1759     05B5  2DB0               	goto	u525
  1760     05B6                     l1020:
  1761     05B6  3001               	movlw	1
  1762     05B7  02F4               	subwf	___awdiv@counter,f
  1763     05B8  1D03               	btfss	3,2
  1764     05B9  2DBB               	goto	u531
  1765     05BA  2DBC               	goto	u530
  1766     05BB                     u531:
  1767     05BB  2D97               	goto	l1012
  1768     05BC                     u530:
  1769     05BC                     l1022:
  1770     05BC  0875               	movf	___awdiv@sign,w
  1771     05BD  1903               	btfsc	3,2
  1772     05BE  2DC0               	goto	u541
  1773     05BF  2DC1               	goto	u540
  1774     05C0                     u541:
  1775     05C0  2DC6               	goto	l1026
  1776     05C1                     u540:
  1777     05C1                     l1024:
  1778     05C1  09F6               	comf	___awdiv@quotient,f
  1779     05C2  09F7               	comf	___awdiv@quotient+1,f
  1780     05C3  0AF6               	incf	___awdiv@quotient,f
  1781     05C4  1903               	skipnz
  1782     05C5  0AF7               	incf	___awdiv@quotient+1,f
  1783     05C6                     l1026:
  1784     05C6  0877               	movf	___awdiv@quotient+1,w
  1785     05C7  00F1               	movwf	?___awdiv+1
  1786     05C8  0876               	movf	___awdiv@quotient,w
  1787     05C9  00F0               	movwf	?___awdiv
  1788     05CA                     l329:
  1789     05CA  0008               	return
  1790     05CB                     __end_of___awdiv:
  1791                           
  1792                           	psect	text8
  1793     0460                     __ptext8:	
  1794 ;; *************** function _Lcd_data *****************
  1795 ;; Defined at:
  1796 ;;		line 132 in file "task4_II.c"
  1797 ;; Parameters:    Size  Location     Type
  1798 ;;  i               1    wreg     unsigned char 
  1799 ;; Auto vars:     Size  Location     Type
  1800 ;;  i               1    2[COMMON] unsigned char 
  1801 ;; Return value:  Size  Location     Type
  1802 ;;                  1    wreg      void 
  1803 ;; Registers used:
  1804 ;;		wreg, status,2, status,0, btemp+1
  1805 ;; Tracked objects:
  1806 ;;		On entry : 0/0
  1807 ;;		On exit  : 0/0
  1808 ;;		Unchanged: 0/0
  1809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1810 ;;      Params:         0       0       0       0       0
  1811 ;;      Locals:         1       0       0       0       0
  1812 ;;      Temps:          2       0       0       0       0
  1813 ;;      Totals:         3       0       0       0       0
  1814 ;;Total ram usage:        3 bytes
  1815 ;; Hardware stack levels used: 1
  1816 ;; This function calls:
  1817 ;;		Nothing
  1818 ;; This function is called by:
  1819 ;;		_keyscan
  1820 ;;		_Lcd_output
  1821 ;;		_display_status
  1822 ;; This function uses a non-reentrant model
  1823 ;;
  1824                           
  1825     0460                     _Lcd_data:	
  1826                           ;psect for function _Lcd_data
  1827                           
  1828                           
  1829                           ;incstack = 0
  1830                           ; Regs used in _Lcd_data: [wreg+status,2+status,0+btemp+1]
  1831                           ;Lcd_data@i stored from wreg
  1832     0460  00F2               	movwf	Lcd_data@i
  1833     0461                     l976:
  1834                           
  1835                           ;task4_II.c: 132: void Lcd_data(unsigned char i);task4_II.c: 133: {;task4_II.c: 134:    
      +                           PORTC |= 0X08;
  1836     0461  1283               	bcf	3,5	;RP0=0, select bank0
  1837     0462  1303               	bcf	3,6	;RP1=0, select bank0
  1838     0463  1587               	bsf	7,3	;volatile
  1839     0464                     l978:
  1840                           
  1841                           ;task4_II.c: 135:     PORTD = i;
  1842     0464  0872               	movf	Lcd_data@i,w
  1843     0465  0088               	movwf	8	;volatile
  1844     0466                     l980:
  1845                           
  1846                           ;task4_II.c: 136:     PORTC |= 0X01;
  1847     0466  1407               	bsf	7,0	;volatile
  1848     0467                     l982:
  1849                           
  1850                           ;task4_II.c: 137:     PORTC &= ~0X01;
  1851     0467  30FE               	movlw	254
  1852     0468  00FF               	movwf	btemp+1
  1853     0469  087F               	movf	btemp+1,w
  1854     046A  0587               	andwf	7,f	;volatile
  1855     046B                     l984:
  1856                           
  1857                           ;task4_II.c: 138:     _delay((unsigned long)((50)*(6000000/4000.0)));
  1858     046B  3062               	movlw	98
  1859     046C  00F1               	movwf	??_Lcd_data+1
  1860     046D  3065               	movlw	101
  1861     046E  00F0               	movwf	??_Lcd_data
  1862     046F                     u897:
  1863     046F  0BF0               	decfsz	??_Lcd_data,f
  1864     0470  2C6F               	goto	u897
  1865     0471  0BF1               	decfsz	??_Lcd_data+1,f
  1866     0472  2C6F               	goto	u897
  1867     0473  2C74               	nop2
  1868     0474                     l72:
  1869     0474  0008               	return
  1870     0475                     __end_of_Lcd_data:
  1871                           
  1872                           	psect	text9
  1873     0635                     __ptext9:	
  1874 ;; *************** function _init *****************
  1875 ;; Defined at:
  1876 ;;		line 44 in file "task4_II.c"
  1877 ;; Parameters:    Size  Location     Type
  1878 ;;		None
  1879 ;; Auto vars:     Size  Location     Type
  1880 ;;		None
  1881 ;; Return value:  Size  Location     Type
  1882 ;;                  1    wreg      void 
  1883 ;; Registers used:
  1884 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1885 ;; Tracked objects:
  1886 ;;		On entry : 0/0
  1887 ;;		On exit  : 0/0
  1888 ;;		Unchanged: 0/0
  1889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1890 ;;      Params:         0       0       0       0       0
  1891 ;;      Locals:         0       0       0       0       0
  1892 ;;      Temps:          2       0       0       0       0
  1893 ;;      Totals:         2       0       0       0       0
  1894 ;;Total ram usage:        2 bytes
  1895 ;; Hardware stack levels used: 1
  1896 ;; Hardware stack levels required when called: 1
  1897 ;; This function calls:
  1898 ;;		_Lcd_command
  1899 ;; This function is called by:
  1900 ;;		_main
  1901 ;; This function uses a non-reentrant model
  1902 ;;
  1903                           
  1904     0635                     _init:	
  1905                           ;psect for function _init
  1906                           
  1907     0635                     l1174:	
  1908                           ;incstack = 0
  1909                           ; Regs used in _init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1910                           
  1911                           
  1912                           ;task4_II.c: 46:     TRISC = 0X00;
  1913     0635  1683               	bsf	3,5	;RP0=1, select bank1
  1914     0636  1303               	bcf	3,6	;RP1=0, select bank1
  1915     0637  0187               	clrf	7	;volatile
  1916                           
  1917                           ;task4_II.c: 47:     TRISD = 0X00;
  1918     0638  0188               	clrf	8	;volatile
  1919     0639                     l1176:
  1920                           
  1921                           ;task4_II.c: 48:     TRISB = 0XF0;
  1922     0639  30F0               	movlw	240
  1923     063A  0086               	movwf	6	;volatile
  1924     063B                     l1178:
  1925                           
  1926                           ;task4_II.c: 49:     PORTB = 0X00;
  1927     063B  1283               	bcf	3,5	;RP0=0, select bank0
  1928     063C  1303               	bcf	3,6	;RP1=0, select bank0
  1929     063D  0186               	clrf	6	;volatile
  1930     063E                     l1180:
  1931                           
  1932                           ;task4_II.c: 50:     OPTION_REG &= 0X7F;
  1933     063E  307F               	movlw	127
  1934     063F  00FF               	movwf	btemp+1
  1935     0640  087F               	movf	btemp+1,w
  1936     0641  1683               	bsf	3,5	;RP0=1, select bank1
  1937     0642  1303               	bcf	3,6	;RP1=0, select bank1
  1938     0643  0581               	andwf	1,f	;volatile
  1939     0644                     l1182:
  1940                           
  1941                           ;task4_II.c: 51:     Lcd_command(0x38);
  1942     0644  3038               	movlw	56
  1943     0645  120A  118A  2475  120A  118A  	fcall	_Lcd_command
  1944     064A                     l1184:
  1945                           
  1946                           ;task4_II.c: 52:     _delay((unsigned long)((10)*(6000000/4000.0)));
  1947     064A  3014               	movlw	20
  1948     064B  00F4               	movwf	??_init+1
  1949     064C  3079               	movlw	121
  1950     064D  00F3               	movwf	??_init
  1951     064E                     u907:
  1952     064E  0BF3               	decfsz	??_init,f
  1953     064F  2E4E               	goto	u907
  1954     0650  0BF4               	decfsz	??_init+1,f
  1955     0651  2E4E               	goto	u907
  1956     0652  2E53               	nop2
  1957     0653                     l1186:
  1958                           
  1959                           ;task4_II.c: 53:     Lcd_command(0x38);
  1960     0653  3038               	movlw	56
  1961     0654  120A  118A  2475  120A  118A  	fcall	_Lcd_command
  1962     0659                     l1188:
  1963                           
  1964                           ;task4_II.c: 54:     _delay((unsigned long)((10)*(6000000/4000.0)));
  1965     0659  3014               	movlw	20
  1966     065A  00F4               	movwf	??_init+1
  1967     065B  3079               	movlw	121
  1968     065C  00F3               	movwf	??_init
  1969     065D                     u917:
  1970     065D  0BF3               	decfsz	??_init,f
  1971     065E  2E5D               	goto	u917
  1972     065F  0BF4               	decfsz	??_init+1,f
  1973     0660  2E5D               	goto	u917
  1974     0661  2E62               	nop2
  1975     0662                     l1190:
  1976                           
  1977                           ;task4_II.c: 55:     Lcd_command(0x38);
  1978     0662  3038               	movlw	56
  1979     0663  120A  118A  2475  120A  118A  	fcall	_Lcd_command
  1980     0668                     l1192:
  1981                           
  1982                           ;task4_II.c: 56:     _delay((unsigned long)((10)*(6000000/4000.0)));
  1983     0668  3014               	movlw	20
  1984     0669  00F4               	movwf	??_init+1
  1985     066A  3079               	movlw	121
  1986     066B  00F3               	movwf	??_init
  1987     066C                     u927:
  1988     066C  0BF3               	decfsz	??_init,f
  1989     066D  2E6C               	goto	u927
  1990     066E  0BF4               	decfsz	??_init+1,f
  1991     066F  2E6C               	goto	u927
  1992     0670  2E71               	nop2
  1993     0671                     l1194:
  1994                           
  1995                           ;task4_II.c: 57:     Lcd_command(0x38);
  1996     0671  3038               	movlw	56
  1997     0672  120A  118A  2475  120A  118A  	fcall	_Lcd_command
  1998     0677                     l1196:
  1999                           
  2000                           ;task4_II.c: 58:     _delay((unsigned long)((10)*(6000000/4000.0)));
  2001     0677  3014               	movlw	20
  2002     0678  00F4               	movwf	??_init+1
  2003     0679  3079               	movlw	121
  2004     067A  00F3               	movwf	??_init
  2005     067B                     u937:
  2006     067B  0BF3               	decfsz	??_init,f
  2007     067C  2E7B               	goto	u937
  2008     067D  0BF4               	decfsz	??_init+1,f
  2009     067E  2E7B               	goto	u937
  2010     067F  2E80               	nop2
  2011     0680                     l1198:
  2012                           
  2013                           ;task4_II.c: 59:     Lcd_command(0x06);
  2014     0680  3006               	movlw	6
  2015     0681  120A  118A  2475  120A  118A  	fcall	_Lcd_command
  2016     0686                     l1200:
  2017                           
  2018                           ;task4_II.c: 60:     _delay((unsigned long)((10)*(6000000/4000.0)));
  2019     0686  3014               	movlw	20
  2020     0687  00F4               	movwf	??_init+1
  2021     0688  3079               	movlw	121
  2022     0689  00F3               	movwf	??_init
  2023     068A                     u947:
  2024     068A  0BF3               	decfsz	??_init,f
  2025     068B  2E8A               	goto	u947
  2026     068C  0BF4               	decfsz	??_init+1,f
  2027     068D  2E8A               	goto	u947
  2028     068E  2E8F               	nop2
  2029     068F                     l1202:
  2030                           
  2031                           ;task4_II.c: 61:     Lcd_command(0x0C);
  2032     068F  300C               	movlw	12
  2033     0690  120A  118A  2475  120A  118A  	fcall	_Lcd_command
  2034     0695                     l1204:
  2035                           
  2036                           ;task4_II.c: 62:     _delay((unsigned long)((10)*(6000000/4000.0)));
  2037     0695  3014               	movlw	20
  2038     0696  00F4               	movwf	??_init+1
  2039     0697  3079               	movlw	121
  2040     0698  00F3               	movwf	??_init
  2041     0699                     u957:
  2042     0699  0BF3               	decfsz	??_init,f
  2043     069A  2E99               	goto	u957
  2044     069B  0BF4               	decfsz	??_init+1,f
  2045     069C  2E99               	goto	u957
  2046     069D  2E9E               	nop2
  2047     069E                     l1206:
  2048                           
  2049                           ;task4_II.c: 63:     Lcd_command(0x01);
  2050     069E  3001               	movlw	1
  2051     069F  120A  118A  2475  120A  118A  	fcall	_Lcd_command
  2052     06A4                     l1208:
  2053                           
  2054                           ;task4_II.c: 64:     _delay((unsigned long)((10)*(6000000/4000.0)));
  2055     06A4  3014               	movlw	20
  2056     06A5  00F4               	movwf	??_init+1
  2057     06A6  3079               	movlw	121
  2058     06A7  00F3               	movwf	??_init
  2059     06A8                     u967:
  2060     06A8  0BF3               	decfsz	??_init,f
  2061     06A9  2EA8               	goto	u967
  2062     06AA  0BF4               	decfsz	??_init+1,f
  2063     06AB  2EA8               	goto	u967
  2064     06AC  2EAD               	nop2
  2065     06AD                     l47:
  2066     06AD  0008               	return
  2067     06AE                     __end_of_init:
  2068                           
  2069                           	psect	text10
  2070     0475                     __ptext10:	
  2071 ;; *************** function _Lcd_command *****************
  2072 ;; Defined at:
  2073 ;;		line 123 in file "task4_II.c"
  2074 ;; Parameters:    Size  Location     Type
  2075 ;;  i               1    wreg     unsigned char 
  2076 ;; Auto vars:     Size  Location     Type
  2077 ;;  i               1    2[COMMON] unsigned char 
  2078 ;; Return value:  Size  Location     Type
  2079 ;;                  1    wreg      void 
  2080 ;; Registers used:
  2081 ;;		wreg, status,2, status,0, btemp+1
  2082 ;; Tracked objects:
  2083 ;;		On entry : 0/0
  2084 ;;		On exit  : 0/0
  2085 ;;		Unchanged: 0/0
  2086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2087 ;;      Params:         0       0       0       0       0
  2088 ;;      Locals:         1       0       0       0       0
  2089 ;;      Temps:          2       0       0       0       0
  2090 ;;      Totals:         3       0       0       0       0
  2091 ;;Total ram usage:        3 bytes
  2092 ;; Hardware stack levels used: 1
  2093 ;; This function calls:
  2094 ;;		Nothing
  2095 ;; This function is called by:
  2096 ;;		_init
  2097 ;;		_keyscan
  2098 ;;		_display_status
  2099 ;; This function uses a non-reentrant model
  2100 ;;
  2101                           
  2102     0475                     _Lcd_command:	
  2103                           ;psect for function _Lcd_command
  2104                           
  2105                           
  2106                           ;incstack = 0
  2107                           ; Regs used in _Lcd_command: [wreg+status,2+status,0+btemp+1]
  2108                           ;Lcd_command@i stored from wreg
  2109     0475  00F2               	movwf	Lcd_command@i
  2110     0476                     l968:
  2111                           
  2112                           ;task4_II.c: 123: void Lcd_command(unsigned char i);task4_II.c: 124: {;task4_II.c: 125: 
      +                              PORTC &= ~0X08;
  2113     0476  30F7               	movlw	247
  2114     0477  00FF               	movwf	btemp+1
  2115     0478  087F               	movf	btemp+1,w
  2116     0479  1283               	bcf	3,5	;RP0=0, select bank0
  2117     047A  1303               	bcf	3,6	;RP1=0, select bank0
  2118     047B  0587               	andwf	7,f	;volatile
  2119     047C                     l970:
  2120                           
  2121                           ;task4_II.c: 126:     PORTD = i;
  2122     047C  0872               	movf	Lcd_command@i,w
  2123     047D  0088               	movwf	8	;volatile
  2124     047E                     l972:
  2125                           
  2126                           ;task4_II.c: 127:     PORTC |= 0X01;
  2127     047E  1407               	bsf	7,0	;volatile
  2128     047F                     l974:
  2129                           
  2130                           ;task4_II.c: 128:     PORTC &= ~0X01;
  2131     047F  30FE               	movlw	254
  2132     0480  00FF               	movwf	btemp+1
  2133     0481  087F               	movf	btemp+1,w
  2134     0482  0587               	andwf	7,f	;volatile
  2135                           
  2136                           ;task4_II.c: 129:     _delay((unsigned long)((50)*(6000000/4000.0)));
  2137     0483  3062               	movlw	98
  2138     0484  00F1               	movwf	??_Lcd_command+1
  2139     0485  3065               	movlw	101
  2140     0486  00F0               	movwf	??_Lcd_command
  2141     0487                     u977:
  2142     0487  0BF0               	decfsz	??_Lcd_command,f
  2143     0488  2C87               	goto	u977
  2144     0489  0BF1               	decfsz	??_Lcd_command+1,f
  2145     048A  2C87               	goto	u977
  2146     048B  2C8C               	nop2
  2147     048C                     l69:
  2148     048C  0008               	return
  2149     048D                     __end_of_Lcd_command:
  2150     007E                     btemp	set	126	;btemp
  2151     007E                     wtemp0	set	126
  2152                           
  2153                           	psect	config
  2154                           
  2155                           ;Config register CONFIG @ 0x2007
  2156                           ;	Oscillator Selection bits
  2157                           ;	FOSC = EXTRC, RC oscillator
  2158                           ;	Watchdog Timer Enable bit
  2159                           ;	WDTE = OFF, WDT disabled
  2160                           ;	Power-up Timer Enable bit
  2161                           ;	PWRTE = OFF, PWRT disabled
  2162                           ;	Brown-out Reset Enable bit
  2163                           ;	BOREN = OFF, BOR disabled
  2164                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  2165                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  2166                           ;	Data EEPROM Memory Code Protection bit
  2167                           ;	CPD = OFF, Data EEPROM code protection off
  2168                           ;	Flash Program Memory Write Enable bits
  2169                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  2170                           ;	In-Circuit Debugger Mode bit
  2171                           ;	DEBUG = 0x1, unprogrammed default
  2172                           ;	Flash Program Memory Code Protection bit
  2173                           ;	CP = OFF, Code protection off
  2174     2007                     	org	8199
  2175     2007  3F3B               	dw	16187

Data Sizes:
    Strings     54
    Constant    0
    Data        18
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80      3      21
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _keyscan->_Lcd_output
    _display_status->_Lcd_command
    _display_status->_Lcd_data
    _Lcd_output->___awdiv
    _init->_Lcd_command

Critical Paths under _main in BANK0

    _keyscan->_Lcd_output

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2119
                               _init
                            _keyscan
 ---------------------------------------------------------------------------------
 (1) _keyscan                                              0     0      0    2097
                        _Lcd_command
                           _Lcd_data
                         _Lcd_output
                     _display_status
 ---------------------------------------------------------------------------------
 (2) _display_status                                       0     0      0      44
                        _Lcd_command
                           _Lcd_data
 ---------------------------------------------------------------------------------
 (2) _Lcd_output                                           7     5      2    2009
                                              8 COMMON     4     2      2
                                              0 BANK0      3     3      0
                           _Lcd_data
                            ___awdiv
                            ___awmod
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     311
                                              0 COMMON     5     1      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     314
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     448
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     452
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (3) _Lcd_data                                             3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _init                                                 2     2      0      22
                                              3 COMMON     2     2      0
                        _Lcd_command
 ---------------------------------------------------------------------------------
 (3) _Lcd_command                                          3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init
     _Lcd_command
   _keyscan
     _Lcd_command
     _Lcd_data
     _Lcd_output
       _Lcd_data
       ___awdiv
       ___awmod
       ___lwdiv
       ___lwmod
     _display_status
       _Lcd_command
       _Lcd_data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      3      15       5       26.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      C       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      23      12        0.0%
ABS                  0      0      23       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Tue Jul 30 12:09:48 2024

                      _x 007D                        pc 0002                       l47 06AD  
                     l72 0474                       l90 072F                       l66 07EB  
                     l75 0634                       l69 048C             ___awdiv@sign 0075  
                     fsr 0004                      l342 0563                      l329 05CA  
                    l456 050A                      l466 04C6                      l970 047C  
                    l972 047E                      l980 0466                      l974 047F  
                    l982 0467                      l990 0569                      l968 0476  
                    l984 046B                      l976 0461                      l992 056E  
                    l978 0464                      l994 0570                      l986 0564  
                    l996 0574                      l988 0565                      l998 0579  
                    u510 05A8                      u511 05A7                      u600 0542  
                    u505 0598                      u601 0541                      u530 05BC  
                    u450 0569                      u531 05BB                      u515 05A4  
                    u451 0568                      u540 05C1                      u460 0574  
                    u620 0555                      u700 0506                      u541 05C0  
                    u525 05B0                      u461 0573                      u621 0554  
                    u605 053E                      u701 0505                      u470 0585  
                    u630 055A                      u550 0510                      u710 0493  
                    u471 0584                      u631 0559                      u615 0549  
                    u551 050F                      u711 0492                      u560 051B  
                    u640 04CF                      u800 06FB                      u561 051A  
                    u641 04CE                      u801 06FA                      u490 0597  
                    u570 0526                      u730 04A5                      u810 0702  
                    u491 0596                      u571 0525                      u731 04A4  
                    u811 0701                      u660 04E1                      u740 04AF  
                    u820 071C                      u485 0589                      u661 04E0  
                    u741 04AE                      u725 0497                      u821 071B  
                    u590 0538                      u830 0743                      u591 0537  
                    u655 04D3                      u831 0742                      u680 04F2  
                    u760 04C2                      u840 076D                      u585 052A  
                    u681 04F1                      u761 04C1                      u745 04AB  
                    u841 076C                      u770 06BB                      u850 0780  
                    u907 064E                      u675 04E2                      u755 04B6  
                    u771 06BA                      u851 077F                      u780 06D8  
                    u860 0799                      u917 065D                      u685 04EE  
                    u781 06D7                      u861 0798                      u790 06DF  
                    u870 07AC                      u927 066C                      u695 04FA  
                    u791 06DE                      u871 07AB                      u880 07CD  
                    u937 067B                      u881 07CC                      u947 068A  
                    u957 0699                      u967 06A8                      u977 0487  
                    u897 046F                      fsr0 0004                      indf 0000  
           ___awmod@sign 0075   __end_of_display_status 0730                     l1000 057D  
                   l1010 0593                     l1002 057F                     l1020 05B6  
                   l1012 0597                     l1004 0585                     l1100 049D  
                   l1014 05A8                     l1006 0588                     l1022 05BC  
                   l1030 050B                     l1110 04BC                     l1102 04A1  
                   l1200 0686                     l1024 05C1                     l1016 05AE  
                   l1008 058F                     l1040 051B                     l1032 050C  
                   l1104 04A5                     l1112 04C2                     l1120 06B4  
                   l1202 068F                     l1026 05C6                     l1018 05AF  
                   l1050 0534                     l1042 0520                     l1034 0510  
                   l1106 04AF                     l1122 06B5                     l1210 0730  
                   l1204 0695                     l1052 0538                     l1044 0526  
                   l1060 0555                     l1036 0515                     l1108 04B5  
                   l1116 05CB                     l1132 06C7                     l1220 0744  
                   l1212 0736                     l1300 0432                     l1206 069E  
                   l1062 055A                     l1054 0542                     l1046 0529  
                   l1038 0517                     l1070 04C9                     l1150 06FB  
                   l1142 06E0                     l1134 06CD                     l1126 06BC  
                   l1118 06AE                     l1230 0764                     l1222 074E  
                   l1214 073C                     l1208 06A4                     l1064 055F  
                   l1056 0548                     l1048 0530                     l1080 04E1  
                   l1072 04CF                     l1152 06FC                     l1144 06ED  
                   l1136 06D8                     l1128 06C2                     l1232 076D  
                   l1216 073D                     l1058 054F                     l1082 04F2  
                   l1074 04D2                     l1090 0506                     l1170 072A  
                   l1162 0715                     l1138 06D9                     l1242 0781  
                   l1234 0773                     l1226 0753                     l1180 063E  
                   l1084 04F8                     l1076 04D9                     l1068 04C7  
                   l1164 0716                     l1156 0703                     l1148 06F2  
                   l1260 07A6                     l1252 0790                     l1244 078B  
                   l1236 0779                     l1228 075E                     l1190 0662  
                   l1182 0644                     l1174 0635                     l1086 04F9  
                   l1078 04DD                     l1094 048D                     l1158 0710  
                   l1254 0799                     l1238 077A                     l1192 0668  
                   l1184 064A                     l1176 0639                     l1088 0500  
                   l1096 0493                     l1168 071D                     l1280 07C7  
                   l1264 07AD                     l1256 079F                     l1194 0671  
                   l1186 0653                     l1178 063B                     l1098 0496  
                   l1274 07BC                     l1266 07B7                     l1258 07A5  
                   l1196 0677                     l1188 0659                     l1284 07CE  
                   l1276 07C0                     l1198 0680                     l1286 07D8  
                   l1278 07C6                     l1296 07DD                     l1298 042D  
                   STR_1 002E                     STR_2 0009                     STR_3 001C  
                   _main 042D                     _init 0635                     btemp 007E  
                   start 0000      __end_of_Lcd_command 048D                    ?_main 0070  
                  ?_init 0070          __end_of___awdiv 05CB          __end_of___awmod 0564  
        ___awdiv@divisor 0070          __end_of___lwdiv 050B          __end_of___lwmod 04C7  
        ___awdiv@counter 0074                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088          ?_display_status 0070               _Lcd_output 05CB  
                  _array 0020          __end_of_keyscan 07EC                    _value 007C  
                  pclath 000A                    status 0003                    wtemp0 007E  
       __end_of_Lcd_data 0475          __initialization 07EC             __end_of_main 043B  
           __end_of_init 06AE                   ??_main 007C                   ??_init 0073  
       ___awdiv@dividend 0072              _Lcd_command 0475                ??___awdiv 0074  
              ??___awmod 0074                ??___lwdiv 0074                ??___lwmod 0074  
       ___awdiv@quotient 0076          ___awmod@divisor 0070          ___awmod@counter 0074  
       Lcd_output@tenths 0032                ??_keyscan 007C              ?_Lcd_output 0078  
__end_of__initialization 07FC           __pcstackCOMMON 0070             __pidataBANK0 043B  
              ?_Lcd_data 0070               __pmaintext 042D         ??_display_status 0073  
             ??_Lcd_data 0070               __stringtab 0003                  ___awdiv 0564  
                ___awmod 050B                  ___lwdiv 04C7                  ___lwmod 048D  
                __ptext1 0730                  __ptext2 06AE                  __ptext3 05CB  
                __ptext4 048D                  __ptext5 04C7                  __ptext6 050B  
                __ptext7 0564                  __ptext8 0460                  __ptext9 0635  
                _keyscan 0730         ___awmod@dividend 0072     end_of_initialization 07FC  
           ?_Lcd_command 0070        Lcd_output@voltage 0078                Lcd_data@i 0072  
           ??_Lcd_output 007A       __end_of_Lcd_output 0635          _battery_voltage 0030  
    start_initialization 07EC               init_fetch0 044D              __pdataBANK0 0020  
            __pbssCOMMON 007C                ___latbits 0002            __pcstackBANK0 0032  
       ___lwdiv@dividend 0072                 ?___awdiv 0070                 ?___awmod 0070  
               ?___lwdiv 0070                 ?___lwmod 0070                __pstrings 0003  
               ?_keyscan 0070         ___lwdiv@quotient 0074              __stringbase 0008  
               _Lcd_data 0460           Lcd_output@tens 0034       __end_of__stringtab 0009  
        ___lwdiv@divisor 0070          ___lwdiv@counter 0076                 __ptext10 0475  
           Lcd_command@i 0072       Lcd_output@hundreds 0033                 init_ram0 0451  
       ___lwmod@dividend 0072                stringcode 0003               _OPTION_REG 0081  
        ___lwmod@divisor 0070          ___lwmod@counter 0074                 stringdir 0003  
               stringtab 0003           _display_status 06AE            ??_Lcd_command 0070  
