

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Tue Jul 30 00:15:48 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13     0000                     
    14                           ; Generated 12/10/2023 GMT
    15                           ; 
    16                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48     0000                     	;# 
    49     0001                     	;# 
    50     0002                     	;# 
    51     0003                     	;# 
    52     0004                     	;# 
    53     0005                     	;# 
    54     0006                     	;# 
    55     0007                     	;# 
    56     0008                     	;# 
    57     0009                     	;# 
    58     000A                     	;# 
    59     000B                     	;# 
    60     000C                     	;# 
    61     000D                     	;# 
    62     000E                     	;# 
    63     000E                     	;# 
    64     000F                     	;# 
    65     0010                     	;# 
    66     0011                     	;# 
    67     0012                     	;# 
    68     0013                     	;# 
    69     0014                     	;# 
    70     0015                     	;# 
    71     0015                     	;# 
    72     0016                     	;# 
    73     0017                     	;# 
    74     0018                     	;# 
    75     0019                     	;# 
    76     001A                     	;# 
    77     001B                     	;# 
    78     001B                     	;# 
    79     001C                     	;# 
    80     001D                     	;# 
    81     001E                     	;# 
    82     001F                     	;# 
    83     0081                     	;# 
    84     0085                     	;# 
    85     0086                     	;# 
    86     0087                     	;# 
    87     0088                     	;# 
    88     0089                     	;# 
    89     008C                     	;# 
    90     008D                     	;# 
    91     008E                     	;# 
    92     0091                     	;# 
    93     0092                     	;# 
    94     0093                     	;# 
    95     0094                     	;# 
    96     0098                     	;# 
    97     0099                     	;# 
    98     009C                     	;# 
    99     009D                     	;# 
   100     009E                     	;# 
   101     009F                     	;# 
   102     010C                     	;# 
   103     010D                     	;# 
   104     010E                     	;# 
   105     010F                     	;# 
   106     018C                     	;# 
   107     018D                     	;# 
   108     0000                     	;# 
   109     0001                     	;# 
   110     0002                     	;# 
   111     0003                     	;# 
   112     0004                     	;# 
   113     0005                     	;# 
   114     0006                     	;# 
   115     0007                     	;# 
   116     0008                     	;# 
   117     0009                     	;# 
   118     000A                     	;# 
   119     000B                     	;# 
   120     000C                     	;# 
   121     000D                     	;# 
   122     000E                     	;# 
   123     000E                     	;# 
   124     000F                     	;# 
   125     0010                     	;# 
   126     0011                     	;# 
   127     0012                     	;# 
   128     0013                     	;# 
   129     0014                     	;# 
   130     0015                     	;# 
   131     0015                     	;# 
   132     0016                     	;# 
   133     0017                     	;# 
   134     0018                     	;# 
   135     0019                     	;# 
   136     001A                     	;# 
   137     001B                     	;# 
   138     001B                     	;# 
   139     001C                     	;# 
   140     001D                     	;# 
   141     001E                     	;# 
   142     001F                     	;# 
   143     0081                     	;# 
   144     0085                     	;# 
   145     0086                     	;# 
   146     0087                     	;# 
   147     0088                     	;# 
   148     0089                     	;# 
   149     008C                     	;# 
   150     008D                     	;# 
   151     008E                     	;# 
   152     0091                     	;# 
   153     0092                     	;# 
   154     0093                     	;# 
   155     0094                     	;# 
   156     0098                     	;# 
   157     0099                     	;# 
   158     009C                     	;# 
   159     009D                     	;# 
   160     009E                     	;# 
   161     009F                     	;# 
   162     010C                     	;# 
   163     010D                     	;# 
   164     010E                     	;# 
   165     010F                     	;# 
   166     018C                     	;# 
   167     018D                     	;# 
   168                           
   169                           	psect	nvCOMMON
   170     0070                     __pnvCOMMON:
   171     0070                     _pwmhigh80:
   172     0070                     	ds	1
   173     0071                     _pwmhigh50:
   174     0071                     	ds	1
   175     0072                     _pwmlow10:
   176     0072                     	ds	1
   177     0073                     _pwmhigh10:
   178     0073                     	ds	1
   179     0015                     _CCPR1L	set	21
   180     0012                     _T2CON	set	18
   181     0017                     _CCP1CON	set	23
   182     0092                     _PR2	set	146
   183     0087                     _TRISC	set	135
   184                           
   185                           	psect	cinit
   186     07FA                     start_initialization:	
   187                           ; #config settings
   188                           
   189     07FA                     __initialization:
   190                           
   191                           ; Clear objects allocated to COMMON
   192     07FA  01F7               	clrf	__pbssCOMMON& (0+127)
   193     07FB  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   194     07FC                     end_of_initialization:	
   195                           ;End of C runtime variable initialization code
   196                           
   197     07FC                     __end_of__initialization:
   198     07FC  0183               	clrf	3
   199     07FD  120A  118A  2F93   	ljmp	_main	;jump to C main() function
   200                           
   201                           	psect	bssCOMMON
   202     0077                     __pbssCOMMON:
   203     0077                     _pwmlow80:
   204     0077                     	ds	1
   205     0078                     _pwmlow50:
   206     0078                     	ds	1
   207                           
   208                           	psect	cstackCOMMON
   209     0074                     __pcstackCOMMON:
   210     0074                     ?_init:
   211     0074                     ??_init:	
   212                           ; 1 bytes @ 0x0
   213                           
   214     0074                     ?_pwmchange:	
   215                           ; 1 bytes @ 0x0
   216                           
   217     0074                     ??_pwmchange:	
   218                           ; 1 bytes @ 0x0
   219                           
   220     0074                     ?_main:	
   221                           ; 1 bytes @ 0x0
   222                           
   223                           
   224                           ; 1 bytes @ 0x0
   225     0074                     	ds	3
   226     0077                     ??_main:
   227                           
   228                           	psect	maintext
   229     0793                     __pmaintext:	
   230                           ; 1 bytes @ 0x3
   231 ;;
   232 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   233 ;;
   234 ;; *************** function _main *****************
   235 ;; Defined at:
   236 ;;		line 36 in file "Class5_pwm.c"
   237 ;; Parameters:    Size  Location     Type
   238 ;;		None
   239 ;; Auto vars:     Size  Location     Type
   240 ;;		None
   241 ;; Return value:  Size  Location     Type
   242 ;;                  1    wreg      void 
   243 ;; Registers used:
   244 ;;		wreg, status,2, status,0, pclath, cstack
   245 ;; Tracked objects:
   246 ;;		On entry : B00/0
   247 ;;		On exit  : 0/0
   248 ;;		Unchanged: 0/0
   249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   250 ;;      Params:         0       0       0       0       0
   251 ;;      Locals:         0       0       0       0       0
   252 ;;      Temps:          0       0       0       0       0
   253 ;;      Totals:         0       0       0       0       0
   254 ;;Total ram usage:        0 bytes
   255 ;; Hardware stack levels required when called: 1
   256 ;; This function calls:
   257 ;;		_init
   258 ;;		_pwmchange
   259 ;; This function is called by:
   260 ;;		Startup code after reset
   261 ;; This function uses a non-reentrant model
   262 ;;
   263                           
   264     0793                     _main:	
   265                           ;psect for function _main
   266                           
   267     0793                     l606:	
   268                           ;incstack = 0
   269                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   270                           
   271                           
   272                           ;Class5_pwm.c: 38: init();
   273     0793  120A  118A  27A1  120A  118A  	fcall	_init
   274     0798                     l33:	
   275                           ;Class5_pwm.c: 39: while(1)
   276                           
   277                           
   278                           ;Class5_pwm.c: 40: {;Class5_pwm.c: 41:     pwmchange();
   279     0798  120A  118A  27BA  120A  118A  	fcall	_pwmchange
   280     079D  2F98               	goto	l33
   281     079E  120A  118A  2800   	ljmp	start
   282     07A1                     __end_of_main:
   283                           
   284                           	psect	text1
   285     07BA                     __ptext1:	
   286 ;; *************** function _pwmchange *****************
   287 ;; Defined at:
   288 ;;		line 57 in file "Class5_pwm.c"
   289 ;; Parameters:    Size  Location     Type
   290 ;;		None
   291 ;; Auto vars:     Size  Location     Type
   292 ;;		None
   293 ;; Return value:  Size  Location     Type
   294 ;;                  1    wreg      void 
   295 ;; Registers used:
   296 ;;		wreg, status,2, status,0
   297 ;; Tracked objects:
   298 ;;		On entry : 0/0
   299 ;;		On exit  : 0/0
   300 ;;		Unchanged: 0/0
   301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   302 ;;      Params:         0       0       0       0       0
   303 ;;      Locals:         0       0       0       0       0
   304 ;;      Temps:          3       0       0       0       0
   305 ;;      Totals:         3       0       0       0       0
   306 ;;Total ram usage:        3 bytes
   307 ;; Hardware stack levels used: 1
   308 ;; This function calls:
   309 ;;		Nothing
   310 ;; This function is called by:
   311 ;;		_main
   312 ;; This function uses a non-reentrant model
   313 ;;
   314                           
   315     07BA                     _pwmchange:	
   316                           ;psect for function _pwmchange
   317                           
   318     07BA                     l592:	
   319                           ;incstack = 0
   320                           ; Regs used in _pwmchange: [wreg+status,2+status,0]
   321                           
   322                           
   323                           ;Class5_pwm.c: 59:     CCPR1L=pwmhigh10;
   324     07BA  0873               	movf	_pwmhigh10,w
   325     07BB  1283               	bcf	3,5	;RP0=0, select bank0
   326     07BC  1303               	bcf	3,6	;RP1=0, select bank0
   327     07BD  0095               	movwf	21	;volatile
   328     07BE                     l594:
   329                           
   330                           ;Class5_pwm.c: 60:     CCP1CON=(CCP1CON&0xCF)|pwmlow10;
   331     07BE  0817               	movf	23,w	;volatile
   332     07BF  39CF               	andlw	207
   333     07C0  0472               	iorwf	_pwmlow10,w
   334     07C1  0097               	movwf	23	;volatile
   335     07C2                     l596:
   336                           
   337                           ;Class5_pwm.c: 61:     _delay((unsigned long)((3000)*(6000000/4000.0)));
   338     07C2  3017               	movlw	23
   339     07C3  00F6               	movwf	??_pwmchange+2
   340     07C4  30D5               	movlw	213
   341     07C5  00F5               	movwf	??_pwmchange+1
   342     07C6  3016               	movlw	22
   343     07C7  00F4               	movwf	??_pwmchange
   344     07C8                     u17:
   345     07C8  0BF4               	decfsz	??_pwmchange,f
   346     07C9  2FC8               	goto	u17
   347     07CA  0BF5               	decfsz	??_pwmchange+1,f
   348     07CB  2FC8               	goto	u17
   349     07CC  0BF6               	decfsz	??_pwmchange+2,f
   350     07CD  2FC8               	goto	u17
   351     07CE  0000               	nop
   352     07CF                     l598:
   353                           
   354                           ;Class5_pwm.c: 62:     CCPR1L= pwmhigh50;
   355     07CF  0871               	movf	_pwmhigh50,w
   356     07D0  1283               	bcf	3,5	;RP0=0, select bank0
   357     07D1  1303               	bcf	3,6	;RP1=0, select bank0
   358     07D2  0095               	movwf	21	;volatile
   359     07D3                     l600:
   360                           
   361                           ;Class5_pwm.c: 63:     CCP1CON=(CCP1CON&0xCF)|pwmlow50;
   362     07D3  0817               	movf	23,w	;volatile
   363     07D4  39CF               	andlw	207
   364     07D5  0478               	iorwf	_pwmlow50,w
   365     07D6  0097               	movwf	23	;volatile
   366                           
   367                           ;Class5_pwm.c: 64:     _delay((unsigned long)((3000)*(6000000/4000.0)));
   368     07D7  3017               	movlw	23
   369     07D8  00F6               	movwf	??_pwmchange+2
   370     07D9  30D5               	movlw	213
   371     07DA  00F5               	movwf	??_pwmchange+1
   372     07DB  3016               	movlw	22
   373     07DC  00F4               	movwf	??_pwmchange
   374     07DD                     u27:
   375     07DD  0BF4               	decfsz	??_pwmchange,f
   376     07DE  2FDD               	goto	u27
   377     07DF  0BF5               	decfsz	??_pwmchange+1,f
   378     07E0  2FDD               	goto	u27
   379     07E1  0BF6               	decfsz	??_pwmchange+2,f
   380     07E2  2FDD               	goto	u27
   381     07E3  0000               	nop
   382                           
   383                           ;Class5_pwm.c: 65:     CCPR1L= pwmhigh80;
   384     07E4  0870               	movf	_pwmhigh80,w
   385     07E5  1283               	bcf	3,5	;RP0=0, select bank0
   386     07E6  1303               	bcf	3,6	;RP1=0, select bank0
   387     07E7  0095               	movwf	21	;volatile
   388     07E8                     l602:
   389                           
   390                           ;Class5_pwm.c: 66:     CCP1CON=(CCP1CON&0xCF)|pwmlow80;
   391     07E8  0817               	movf	23,w	;volatile
   392     07E9  39CF               	andlw	207
   393     07EA  0477               	iorwf	_pwmlow80,w
   394     07EB  0097               	movwf	23	;volatile
   395     07EC                     l604:
   396                           
   397                           ;Class5_pwm.c: 67:     _delay((unsigned long)((3000)*(6000000/4000.0)));
   398     07EC  3017               	movlw	23
   399     07ED  00F6               	movwf	??_pwmchange+2
   400     07EE  30D5               	movlw	213
   401     07EF  00F5               	movwf	??_pwmchange+1
   402     07F0  3016               	movlw	22
   403     07F1  00F4               	movwf	??_pwmchange
   404     07F2                     u37:
   405     07F2  0BF4               	decfsz	??_pwmchange,f
   406     07F3  2FF2               	goto	u37
   407     07F4  0BF5               	decfsz	??_pwmchange+1,f
   408     07F5  2FF2               	goto	u37
   409     07F6  0BF6               	decfsz	??_pwmchange+2,f
   410     07F7  2FF2               	goto	u37
   411     07F8  0000               	nop
   412     07F9                     l42:
   413     07F9  0008               	return
   414     07FA                     __end_of_pwmchange:
   415                           
   416                           	psect	text2
   417     07A1                     __ptext2:	
   418 ;; *************** function _init *****************
   419 ;; Defined at:
   420 ;;		line 44 in file "Class5_pwm.c"
   421 ;; Parameters:    Size  Location     Type
   422 ;;		None
   423 ;; Auto vars:     Size  Location     Type
   424 ;;		None
   425 ;; Return value:  Size  Location     Type
   426 ;;                  1    wreg      void 
   427 ;; Registers used:
   428 ;;		wreg, status,2
   429 ;; Tracked objects:
   430 ;;		On entry : 0/0
   431 ;;		On exit  : 0/0
   432 ;;		Unchanged: 0/0
   433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   434 ;;      Params:         0       0       0       0       0
   435 ;;      Locals:         0       0       0       0       0
   436 ;;      Temps:          0       0       0       0       0
   437 ;;      Totals:         0       0       0       0       0
   438 ;;Total ram usage:        0 bytes
   439 ;; Hardware stack levels used: 1
   440 ;; This function calls:
   441 ;;		Nothing
   442 ;; This function is called by:
   443 ;;		_main
   444 ;; This function uses a non-reentrant model
   445 ;;
   446                           
   447     07A1                     _init:	
   448                           ;psect for function _init
   449                           
   450     07A1                     l586:	
   451                           ;incstack = 0
   452                           ; Regs used in _init: [wreg+status,2]
   453                           
   454                           
   455                           ;Class5_pwm.c: 46:     TRISC=0xFB;
   456     07A1  30FB               	movlw	251
   457     07A2  1683               	bsf	3,5	;RP0=1, select bank1
   458     07A3  1303               	bcf	3,6	;RP1=0, select bank1
   459     07A4  0087               	movwf	7	;volatile
   460                           
   461                           ;Class5_pwm.c: 47:     CCP1CON=0x0C;
   462     07A5  300C               	movlw	12
   463     07A6  1283               	bcf	3,5	;RP0=0, select bank0
   464     07A7  1303               	bcf	3,6	;RP1=0, select bank0
   465     07A8  0097               	movwf	23	;volatile
   466                           
   467                           ;Class5_pwm.c: 48:     T2CON=0X06;
   468     07A9  3006               	movlw	6
   469     07AA  0092               	movwf	18	;volatile
   470                           
   471                           ;Class5_pwm.c: 49:     PR2=0X5E;
   472     07AB  305E               	movlw	94
   473     07AC  1683               	bsf	3,5	;RP0=1, select bank1
   474     07AD  1303               	bcf	3,6	;RP1=0, select bank1
   475     07AE  0092               	movwf	18	;volatile
   476                           
   477                           ;Class5_pwm.c: 50:     pwmhigh10=0x09;
   478     07AF  3009               	movlw	9
   479     07B0  00F3               	movwf	_pwmhigh10
   480                           
   481                           ;Class5_pwm.c: 51:     pwmlow10=0x20;
   482     07B1  3020               	movlw	32
   483     07B2  00F2               	movwf	_pwmlow10
   484                           
   485                           ;Class5_pwm.c: 52:     pwmhigh50=0x2F;
   486     07B3  302F               	movlw	47
   487     07B4  00F1               	movwf	_pwmhigh50
   488     07B5                     l588:
   489                           
   490                           ;Class5_pwm.c: 53:     pwmlow50=0x00;
   491     07B5  01F8               	clrf	_pwmlow50
   492     07B6                     l590:
   493                           
   494                           ;Class5_pwm.c: 54:     pwmhigh80=0x4B;
   495     07B6  304B               	movlw	75
   496     07B7  00F0               	movwf	_pwmhigh80
   497                           
   498                           ;Class5_pwm.c: 55:     pwmlow80=0x00;
   499     07B8  01F7               	clrf	_pwmlow80
   500     07B9                     l39:
   501     07B9  0008               	return
   502     07BA                     __end_of_init:
   503     007E                     btemp	set	126	;btemp
   504     007E                     wtemp0	set	126
   505                           
   506                           	psect	config
   507                           
   508                           ;Config register CONFIG @ 0x2007
   509                           ;	Oscillator Selection bits
   510                           ;	FOSC = EXTRC, RC oscillator
   511                           ;	Watchdog Timer Enable bit
   512                           ;	WDTE = OFF, WDT disabled
   513                           ;	Power-up Timer Enable bit
   514                           ;	PWRTE = OFF, PWRT disabled
   515                           ;	Brown-out Reset Enable bit
   516                           ;	BOREN = OFF, BOR disabled
   517                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   518                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   519                           ;	Data EEPROM Memory Code Protection bit
   520                           ;	CPD = OFF, Data EEPROM code protection off
   521                           ;	Flash Program Memory Write Enable bits
   522                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   523                           ;	In-Circuit Debugger Mode bit
   524                           ;	DEBUG = 0x1, unprogrammed default
   525                           ;	Flash Program Memory Code Protection bit
   526                           ;	CP = OFF, Code protection off
   527     2007                     	org	8199
   528     2007  3F3B               	dw	16187

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3       9
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_pwmchange

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                               _init
                          _pwmchange
 ---------------------------------------------------------------------------------
 (1) _pwmchange                                            3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init
   _pwmchange

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      3       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       9       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       9      12        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Tue Jul 30 00:15:48 2024

                     l33 0798                       l42 07F9                       l39 07B9  
                     u17 07C8                       u27 07DD                       u37 07F2  
                    l600 07D3                      l602 07E8                      l604 07EC  
                    l606 0793                      l590 07B6                      l592 07BA  
                    l586 07A1                      l594 07BE                      l588 07B5  
                    l596 07C2                      l598 07CF                      _PR2 0092  
                   _main 0793                     _init 07A1                     btemp 007E  
                   start 0000                    ?_main 0074                    ?_init 0074  
                  _T2CON 0012                    _TRISC 0087                    status 0003  
                  wtemp0 007E          __initialization 07FA             __end_of_main 07A1  
           __end_of_init 07BA                   ??_main 0077                   ??_init 0074  
                 _CCPR1L 0015  __end_of__initialization 07FC           __pcstackCOMMON 0074  
             __pnvCOMMON 0070               __pmaintext 0793                  _CCP1CON 0017  
                __ptext1 07BA                  __ptext2 07A1     end_of_initialization 07FC  
      __end_of_pwmchange 07FA      start_initialization 07FA              __pbssCOMMON 0077  
              ___latbits 0002                _pwmchange 07BA                _pwmhigh10 0073  
              _pwmhigh50 0071                _pwmhigh80 0070               ?_pwmchange 0074  
               _pwmlow10 0072                 _pwmlow50 0078                 _pwmlow80 0077  
            ??_pwmchange 0074  
