

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Tue Sep 03 01:39:05 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21     0000                     
    22                           ; Generated 12/10/2023 GMT
    23                           ; 
    24                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution. Publication is not required when
    38                           ;        this file is used in an embedded application.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F877A Definitions
    54                           ; 
    55                           ; SFR Addresses
    56     0000                     	;# 
    57     0001                     	;# 
    58     0002                     	;# 
    59     0003                     	;# 
    60     0004                     	;# 
    61     0005                     	;# 
    62     0006                     	;# 
    63     0007                     	;# 
    64     0008                     	;# 
    65     0009                     	;# 
    66     000A                     	;# 
    67     000B                     	;# 
    68     000C                     	;# 
    69     000D                     	;# 
    70     000E                     	;# 
    71     000E                     	;# 
    72     000F                     	;# 
    73     0010                     	;# 
    74     0011                     	;# 
    75     0012                     	;# 
    76     0013                     	;# 
    77     0014                     	;# 
    78     0015                     	;# 
    79     0015                     	;# 
    80     0016                     	;# 
    81     0017                     	;# 
    82     0018                     	;# 
    83     0019                     	;# 
    84     001A                     	;# 
    85     001B                     	;# 
    86     001B                     	;# 
    87     001C                     	;# 
    88     001D                     	;# 
    89     001E                     	;# 
    90     001F                     	;# 
    91     0081                     	;# 
    92     0085                     	;# 
    93     0086                     	;# 
    94     0087                     	;# 
    95     0088                     	;# 
    96     0089                     	;# 
    97     008C                     	;# 
    98     008D                     	;# 
    99     008E                     	;# 
   100     0091                     	;# 
   101     0092                     	;# 
   102     0093                     	;# 
   103     0094                     	;# 
   104     0098                     	;# 
   105     0099                     	;# 
   106     009C                     	;# 
   107     009D                     	;# 
   108     009E                     	;# 
   109     009F                     	;# 
   110     010C                     	;# 
   111     010D                     	;# 
   112     010E                     	;# 
   113     010F                     	;# 
   114     018C                     	;# 
   115     018D                     	;# 
   116     0000                     	;# 
   117     0001                     	;# 
   118     0002                     	;# 
   119     0003                     	;# 
   120     0004                     	;# 
   121     0005                     	;# 
   122     0006                     	;# 
   123     0007                     	;# 
   124     0008                     	;# 
   125     0009                     	;# 
   126     000A                     	;# 
   127     000B                     	;# 
   128     000C                     	;# 
   129     000D                     	;# 
   130     000E                     	;# 
   131     000E                     	;# 
   132     000F                     	;# 
   133     0010                     	;# 
   134     0011                     	;# 
   135     0012                     	;# 
   136     0013                     	;# 
   137     0014                     	;# 
   138     0015                     	;# 
   139     0015                     	;# 
   140     0016                     	;# 
   141     0017                     	;# 
   142     0018                     	;# 
   143     0019                     	;# 
   144     001A                     	;# 
   145     001B                     	;# 
   146     001B                     	;# 
   147     001C                     	;# 
   148     001D                     	;# 
   149     001E                     	;# 
   150     001F                     	;# 
   151     0081                     	;# 
   152     0085                     	;# 
   153     0086                     	;# 
   154     0087                     	;# 
   155     0088                     	;# 
   156     0089                     	;# 
   157     008C                     	;# 
   158     008D                     	;# 
   159     008E                     	;# 
   160     0091                     	;# 
   161     0092                     	;# 
   162     0093                     	;# 
   163     0094                     	;# 
   164     0098                     	;# 
   165     0099                     	;# 
   166     009C                     	;# 
   167     009D                     	;# 
   168     009E                     	;# 
   169     009F                     	;# 
   170     010C                     	;# 
   171     010D                     	;# 
   172     010E                     	;# 
   173     010F                     	;# 
   174     018C                     	;# 
   175     018D                     	;# 
   176                           
   177                           	psect	idataBANK0
   178     056C                     __pidataBANK0:
   179                           
   180                           ;initializer for _msg_2
   181     056C  3441               	retlw	65
   182     056D  3444               	retlw	68
   183     056E  3443               	retlw	67
   184     056F  3420               	retlw	32
   185     0570  3463               	retlw	99
   186     0571  3461               	retlw	97
   187     0572  346C               	retlw	108
   188     0573  343A               	retlw	58
   189     0574  3420               	retlw	32
   190     0575  3400               	retlw	0
   191                           
   192                           ;initializer for _msg_1
   193     0576  3441               	retlw	65
   194     0577  3444               	retlw	68
   195     0578  3443               	retlw	67
   196     0579  3420               	retlw	32
   197     057A  3472               	retlw	114
   198     057B  3461               	retlw	97
   199     057C  3477               	retlw	119
   200     057D  343A               	retlw	58
   201     057E  3420               	retlw	32
   202     057F  3400               	retlw	0
   203     0008                     _PORTD	set	8
   204     0007                     _PORTC	set	7
   205     001E                     _ADRESH	set	30
   206     001F                     _ADCON0	set	31
   207     009F                     _ADCON1	set	159
   208     0088                     _TRISD	set	136
   209     0087                     _TRISC	set	135
   210     0085                     _TRISA	set	133
   211     009E                     _ADRESL	set	158
   212                           
   213                           	psect	cinit
   214     07E7                     start_initialization:	
   215                           ; #config settings
   216                           
   217     07E7                     __initialization:
   218                           
   219                           ; Initialize objects allocated to BANK0
   220     07E7  1383               	bcf	3,7	;select IRP bank0
   221     07E8  3034               	movlw	low (__pdataBANK0+20)
   222     07E9  00FD               	movwf	btemp+-1
   223     07EA  3005               	movlw	high __pidataBANK0
   224     07EB  00FE               	movwf	btemp
   225     07EC  306C               	movlw	low __pidataBANK0
   226     07ED  00FF               	movwf	btemp+1
   227     07EE  3020               	movlw	low __pdataBANK0
   228     07EF  0084               	movwf	4
   229     07F0  120A  118A  2549  120A  118A  	fcall	init_ram0
   230                           
   231                           ; Clear objects allocated to BANK0
   232     07F5  01C3               	clrf	__pbssBANK0& (0+127)
   233     07F6  01C4               	clrf	(__pbssBANK0+1)& (0+127)
   234     07F7  01C5               	clrf	(__pbssBANK0+2)& (0+127)
   235     07F8  01C6               	clrf	(__pbssBANK0+3)& (0+127)
   236     07F9  01C7               	clrf	(__pbssBANK0+4)& (0+127)
   237     07FA  01C8               	clrf	(__pbssBANK0+5)& (0+127)
   238     07FB  01C9               	clrf	(__pbssBANK0+6)& (0+127)
   239     07FC                     end_of_initialization:	
   240                           ;End of C runtime variable initialization code
   241                           
   242     07FC                     __end_of__initialization:
   243     07FC  0183               	clrf	3
   244     07FD  120A  118A  2F10   	ljmp	_main	;jump to C main() function
   245                           
   246                           	psect	bssBANK0
   247     0043                     __pbssBANK0:
   248     0043                     _result:
   249     0043                     	ds	2
   250     0045                     _adc_high:
   251     0045                     	ds	2
   252     0047                     _adc_low:
   253     0047                     	ds	2
   254     0049                     _volt:
   255     0049                     	ds	1
   256                           
   257                           	psect	dataBANK0
   258     0020                     __pdataBANK0:
   259     0020                     _msg_2:
   260     0020                     	ds	10
   261     002A                     _msg_1:
   262     002A                     	ds	10
   263                           
   264                           	psect	inittext
   265     0545                     init_fetch0:	
   266                           ;	Called with low address in FSR and high address in W
   267                           
   268     0545  087E               	movf	btemp,w
   269     0546  008A               	movwf	10
   270     0547  087F               	movf	btemp+1,w
   271     0548  0082               	movwf	2
   272     0549                     init_ram0:	
   273                           ;Called with:
   274                           ;	high address of idata address in btemp 
   275                           ;	low address of idata address in btemp+1 
   276                           ;	low address of data in FSR
   277                           ;	high address + 1 of data in btemp-1
   278                           
   279     0549  120A  118A  2545  120A  118A  	fcall	init_fetch0
   280     054E  0080               	movwf	0
   281     054F  0A84               	incf	4,f
   282     0550  0804               	movf	4,w
   283     0551  067D               	xorwf	btemp+-1,w
   284     0552  1903               	btfsc	3,2
   285     0553  3400               	retlw	0
   286     0554  0AFF               	incf	btemp+1,f
   287     0555  1903               	btfsc	3,2
   288     0556  0AFE               	incf	btemp,f
   289     0557  2D49               	goto	init_ram0
   290                           
   291                           	psect	cstackCOMMON
   292     0070                     __pcstackCOMMON:
   293     0070                     ?_init:
   294     0070                     ?_lcd_com:	
   295                           ; 1 bytes @ 0x0
   296                           
   297     0070                     ??_lcd_com:	
   298                           ; 1 bytes @ 0x0
   299                           
   300     0070                     ?_lcd_data:	
   301                           ; 1 bytes @ 0x0
   302                           
   303     0070                     ??_lcd_data:	
   304                           ; 1 bytes @ 0x0
   305                           
   306     0070                     ?_main:	
   307                           ; 1 bytes @ 0x0
   308                           
   309     0070                     ?___wmul:	
   310                           ; 1 bytes @ 0x0
   311                           
   312     0070                     ?___lwmod:	
   313                           ; 2 bytes @ 0x0
   314                           
   315     0070                     ___wmul@multiplier:	
   316                           ; 2 bytes @ 0x0
   317                           
   318     0070                     ___lwmod@divisor:	
   319                           ; 2 bytes @ 0x0
   320                           
   321                           
   322                           ; 2 bytes @ 0x0
   323     0070                     	ds	2
   324     0072                     lcd_com@i:
   325     0072                     lcd_data@i:	
   326                           ; 1 bytes @ 0x2
   327                           
   328     0072                     ___wmul@multiplicand:	
   329                           ; 1 bytes @ 0x2
   330                           
   331     0072                     ___lwmod@dividend:	
   332                           ; 2 bytes @ 0x2
   333                           
   334                           
   335                           ; 2 bytes @ 0x2
   336     0072                     	ds	1
   337     0073                     ??_init:
   338                           
   339                           ; 1 bytes @ 0x3
   340     0073                     	ds	1
   341     0074                     ??___wmul:
   342     0074                     ??___lwmod:	
   343                           ; 1 bytes @ 0x4
   344                           
   345     0074                     ___lwmod@counter:	
   346                           ; 1 bytes @ 0x4
   347                           
   348     0074                     ___wmul@product:	
   349                           ; 1 bytes @ 0x4
   350                           
   351                           
   352                           ; 2 bytes @ 0x4
   353     0074                     	ds	2
   354     0076                     ?___lwdiv:
   355     0076                     ___lwdiv@divisor:	
   356                           ; 2 bytes @ 0x6
   357                           
   358                           
   359                           ; 2 bytes @ 0x6
   360     0076                     	ds	2
   361     0078                     ___lwdiv@dividend:
   362                           
   363                           ; 2 bytes @ 0x8
   364     0078                     	ds	2
   365     007A                     ??___lwdiv:
   366     007A                     ___lwdiv@quotient:	
   367                           ; 1 bytes @ 0xA
   368                           
   369                           
   370                           ; 2 bytes @ 0xA
   371     007A                     	ds	2
   372     007C                     ___lwdiv@counter:
   373                           
   374                           ; 1 bytes @ 0xC
   375     007C                     	ds	1
   376     007D                     ??_lcd_output:
   377                           
   378                           	psect	cstackBANK0
   379     0034                     __pcstackBANK0:	
   380                           ; 1 bytes @ 0xD
   381                           
   382     0034                     ?_lcd_output:
   383     0034                     lcd_output@i:	
   384                           ; 1 bytes @ 0x0
   385                           
   386                           
   387                           ; 2 bytes @ 0x0
   388     0034                     	ds	2
   389     0036                     lcd_output@k:
   390                           
   391                           ; 5 bytes @ 0x2
   392     0036                     	ds	5
   393     003B                     lcd_output@s:
   394                           
   395                           ; 1 bytes @ 0x7
   396     003B                     	ds	1
   397     003C                     lcd_output@m:
   398                           
   399                           ; 2 bytes @ 0x8
   400     003C                     	ds	2
   401     003E                     lcd_output@j:
   402                           
   403                           ; 1 bytes @ 0xA
   404     003E                     	ds	1
   405     003F                     ??_main:
   406                           
   407                           ; 1 bytes @ 0xB
   408     003F                     	ds	2
   409     0041                     main@i:
   410                           
   411                           ; 2 bytes @ 0xD
   412     0041                     	ds	2
   413                           
   414                           	psect	maintext
   415     0710                     __pmaintext:	
   416 ;;
   417 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   418 ;;
   419 ;; *************** function _main *****************
   420 ;; Defined at:
   421 ;;		line 39 in file "ADC_classpgm.c"
   422 ;; Parameters:    Size  Location     Type
   423 ;;		None
   424 ;; Auto vars:     Size  Location     Type
   425 ;;  i               2   13[BANK0 ] int 
   426 ;; Return value:  Size  Location     Type
   427 ;;                  1    wreg      void 
   428 ;; Registers used:
   429 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   430 ;; Tracked objects:
   431 ;;		On entry : B00/0
   432 ;;		On exit  : 0/0
   433 ;;		Unchanged: 0/0
   434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   435 ;;      Params:         0       0       0       0       0
   436 ;;      Locals:         0       2       0       0       0
   437 ;;      Temps:          0       2       0       0       0
   438 ;;      Totals:         0       4       0       0       0
   439 ;;Total ram usage:        4 bytes
   440 ;; Hardware stack levels required when called: 2
   441 ;; This function calls:
   442 ;;		___lwdiv
   443 ;;		___wmul
   444 ;;		_init
   445 ;;		_lcd_com
   446 ;;		_lcd_data
   447 ;;		_lcd_output
   448 ;; This function is called by:
   449 ;;		Startup code after reset
   450 ;; This function uses a non-reentrant model
   451 ;;
   452                           
   453     0710                     _main:	
   454                           ;psect for function _main
   455                           
   456     0710                     l935:	
   457                           ;incstack = 0
   458                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   459                           
   460                           
   461                           ;ADC_classpgm.c: 40:     int i;;ADC_classpgm.c: 41:     init();
   462     0710  120A  118A  269F  120A  118A  	fcall	_init
   463                           
   464                           ;ADC_classpgm.c: 42:     lcd_com(0x80);
   465     0715  3080               	movlw	128
   466     0716  120A  118A  2580  120A  118A  	fcall	_lcd_com
   467     071B                     l937:
   468                           
   469                           ;ADC_classpgm.c: 43:     for(i = 0; i < 9; i++)
   470     071B  1283               	bcf	3,5	;RP0=0, select bank0
   471     071C  1303               	bcf	3,6	;RP1=0, select bank0
   472     071D  01C1               	clrf	main@i
   473     071E  01C2               	clrf	main@i+1
   474     071F                     l943:
   475                           
   476                           ;ADC_classpgm.c: 44:     {;ADC_classpgm.c: 45:         lcd_data(msg_1[i]);
   477     071F  1283               	bcf	3,5	;RP0=0, select bank0
   478     0720  1303               	bcf	3,6	;RP1=0, select bank0
   479     0721  0841               	movf	main@i,w
   480     0722  3E2A               	addlw	(low (_msg_1| 0))& (0+255)
   481     0723  0084               	movwf	4
   482     0724  1383               	bcf	3,7	;select IRP bank0
   483     0725  0800               	movf	0,w
   484     0726  120A  118A  2558  120A  118A  	fcall	_lcd_data
   485     072B                     l945:
   486                           
   487                           ;ADC_classpgm.c: 46:     }
   488     072B  3001               	movlw	1
   489     072C  1283               	bcf	3,5	;RP0=0, select bank0
   490     072D  1303               	bcf	3,6	;RP1=0, select bank0
   491     072E  07C1               	addwf	main@i,f
   492     072F  1803               	skipnc
   493     0730  0AC2               	incf	main@i+1,f
   494     0731  3000               	movlw	0
   495     0732  07C2               	addwf	main@i+1,f
   496     0733                     l947:
   497     0733  0842               	movf	main@i+1,w
   498     0734  3A80               	xorlw	128
   499     0735  00FF               	movwf	btemp+1
   500     0736  3080               	movlw	128
   501     0737  027F               	subwf	btemp+1,w
   502     0738  1D03               	skipz
   503     0739  2F3C               	goto	u465
   504     073A  3009               	movlw	9
   505     073B  0241               	subwf	main@i,w
   506     073C                     u465:
   507     073C  1C03               	skipc
   508     073D  2F3F               	goto	u461
   509     073E  2F40               	goto	u460
   510     073F                     u461:
   511     073F  2F1F               	goto	l943
   512     0740                     u460:
   513     0740                     l949:
   514                           
   515                           ;ADC_classpgm.c: 47:     lcd_com(0xc0);
   516     0740  30C0               	movlw	192
   517     0741  120A  118A  2580  120A  118A  	fcall	_lcd_com
   518     0746                     l951:
   519                           
   520                           ;ADC_classpgm.c: 48:     for(i = 0; i < 9 ; i++)
   521     0746  1283               	bcf	3,5	;RP0=0, select bank0
   522     0747  1303               	bcf	3,6	;RP1=0, select bank0
   523     0748  01C1               	clrf	main@i
   524     0749  01C2               	clrf	main@i+1
   525     074A                     l957:
   526                           
   527                           ;ADC_classpgm.c: 49:     {;ADC_classpgm.c: 50:         lcd_data(msg_2[i]);
   528     074A  1283               	bcf	3,5	;RP0=0, select bank0
   529     074B  1303               	bcf	3,6	;RP1=0, select bank0
   530     074C  0841               	movf	main@i,w
   531     074D  3E20               	addlw	(low (_msg_2| 0))& (0+255)
   532     074E  0084               	movwf	4
   533     074F  1383               	bcf	3,7	;select IRP bank0
   534     0750  0800               	movf	0,w
   535     0751  120A  118A  2558  120A  118A  	fcall	_lcd_data
   536     0756                     l959:
   537                           
   538                           ;ADC_classpgm.c: 51:     }
   539     0756  3001               	movlw	1
   540     0757  1283               	bcf	3,5	;RP0=0, select bank0
   541     0758  1303               	bcf	3,6	;RP1=0, select bank0
   542     0759  07C1               	addwf	main@i,f
   543     075A  1803               	skipnc
   544     075B  0AC2               	incf	main@i+1,f
   545     075C  3000               	movlw	0
   546     075D  07C2               	addwf	main@i+1,f
   547     075E                     l961:
   548     075E  0842               	movf	main@i+1,w
   549     075F  3A80               	xorlw	128
   550     0760  00FF               	movwf	btemp+1
   551     0761  3080               	movlw	128
   552     0762  027F               	subwf	btemp+1,w
   553     0763  1D03               	skipz
   554     0764  2F67               	goto	u475
   555     0765  3009               	movlw	9
   556     0766  0241               	subwf	main@i,w
   557     0767                     u475:
   558     0767  1C03               	skipc
   559     0768  2F6A               	goto	u471
   560     0769  2F6B               	goto	u470
   561     076A                     u471:
   562     076A  2F4A               	goto	l957
   563     076B                     u470:
   564     076B                     l963:
   565                           
   566                           ;ADC_classpgm.c: 53:     {;ADC_classpgm.c: 54:         ADCON0 = 0x81;
   567     076B  3081               	movlw	129
   568     076C  1283               	bcf	3,5	;RP0=0, select bank0
   569     076D  1303               	bcf	3,6	;RP1=0, select bank0
   570     076E  009F               	movwf	31	;volatile
   571     076F                     l965:
   572                           
   573                           ;ADC_classpgm.c: 55:         ADCON0 |= 0x04;
   574     076F  151F               	bsf	31,2	;volatile
   575     0770                     l50:	
   576                           ;ADC_classpgm.c: 56:         while (ADCON0 & 0x04);
   577                           
   578     0770  191F               	btfsc	31,2	;volatile
   579     0771  2F73               	goto	u481
   580     0772  2F74               	goto	u480
   581     0773                     u481:
   582     0773  2F70               	goto	l50
   583     0774                     u480:
   584     0774                     l967:
   585                           
   586                           ;ADC_classpgm.c: 57:         adc_high = ADRESH;
   587     0774  081E               	movf	30,w	;volatile
   588     0775  00BF               	movwf	??_main
   589     0776  01C0               	clrf	??_main+1
   590     0777  083F               	movf	??_main,w
   591     0778  00C5               	movwf	_adc_high
   592     0779  0840               	movf	??_main+1,w
   593     077A  00C6               	movwf	_adc_high+1
   594                           
   595                           ;ADC_classpgm.c: 58:         adc_low = ADRESL;
   596     077B  1683               	bsf	3,5	;RP0=1, select bank1
   597     077C  1303               	bcf	3,6	;RP1=0, select bank1
   598     077D  081E               	movf	30,w	;volatile
   599     077E  1283               	bcf	3,5	;RP0=0, select bank0
   600     077F  1303               	bcf	3,6	;RP1=0, select bank0
   601     0780  00BF               	movwf	??_main
   602     0781  01C0               	clrf	??_main+1
   603     0782  083F               	movf	??_main,w
   604     0783  00C7               	movwf	_adc_low
   605     0784  0840               	movf	??_main+1,w
   606     0785  00C8               	movwf	_adc_low+1
   607                           
   608                           ;ADC_classpgm.c: 59:         result = (adc_high << 8) | adc_low;
   609     0786  0845               	movf	_adc_high,w
   610     0787  00C0               	movwf	??_main+1
   611     0788  01BF               	clrf	??_main
   612     0789  0847               	movf	_adc_low,w
   613     078A  043F               	iorwf	??_main,w
   614     078B  00C3               	movwf	_result
   615     078C  0848               	movf	_adc_low+1,w
   616     078D  0440               	iorwf	??_main+1,w
   617     078E  00C4               	movwf	_result+1
   618     078F                     l969:
   619                           
   620                           ;ADC_classpgm.c: 60:         volt = (result * 48) / 1023;
   621     078F  30FF               	movlw	255
   622     0790  00F6               	movwf	___lwdiv@divisor
   623     0791  3003               	movlw	3
   624     0792  00F7               	movwf	___lwdiv@divisor+1
   625     0793  0844               	movf	_result+1,w
   626     0794  00F1               	movwf	___wmul@multiplier+1
   627     0795  0843               	movf	_result,w
   628     0796  00F0               	movwf	___wmul@multiplier
   629     0797  3030               	movlw	48
   630     0798  00F2               	movwf	___wmul@multiplicand
   631     0799  3000               	movlw	0
   632     079A  00F3               	movwf	___wmul@multiplicand+1
   633     079B  120A  118A  2597  120A  118A  	fcall	___wmul
   634     07A0  0871               	movf	?___wmul+1,w
   635     07A1  00F9               	movwf	___lwdiv@dividend+1
   636     07A2  0870               	movf	?___wmul,w
   637     07A3  00F8               	movwf	___lwdiv@dividend
   638     07A4  120A  118A  25F6  120A  118A  	fcall	___lwdiv
   639     07A9  0876               	movf	?___lwdiv,w
   640     07AA  1283               	bcf	3,5	;RP0=0, select bank0
   641     07AB  1303               	bcf	3,6	;RP1=0, select bank0
   642     07AC  00C9               	movwf	_volt
   643     07AD                     l971:
   644                           
   645                           ;ADC_classpgm.c: 62:         lcd_com(0x89);
   646     07AD  3089               	movlw	137
   647     07AE  120A  118A  2580  120A  118A  	fcall	_lcd_com
   648     07B3                     l973:
   649                           
   650                           ;ADC_classpgm.c: 63:         lcd_output(result);
   651     07B3  1283               	bcf	3,5	;RP0=0, select bank0
   652     07B4  1303               	bcf	3,6	;RP1=0, select bank0
   653     07B5  0844               	movf	_result+1,w
   654     07B6  00B5               	movwf	lcd_output@i+1
   655     07B7  0843               	movf	_result,w
   656     07B8  00B4               	movwf	lcd_output@i
   657     07B9  120A  118A  263A  120A  118A  	fcall	_lcd_output
   658     07BE                     l975:
   659                           
   660                           ;ADC_classpgm.c: 65:         lcd_com(0xc9);
   661     07BE  30C9               	movlw	201
   662     07BF  120A  118A  2580  120A  118A  	fcall	_lcd_com
   663     07C4                     l977:
   664                           
   665                           ;ADC_classpgm.c: 66:         lcd_output(volt);
   666     07C4  1283               	bcf	3,5	;RP0=0, select bank0
   667     07C5  1303               	bcf	3,6	;RP1=0, select bank0
   668     07C6  0849               	movf	_volt,w
   669     07C7  00BF               	movwf	??_main
   670     07C8  01C0               	clrf	??_main+1
   671     07C9  083F               	movf	??_main,w
   672     07CA  00B4               	movwf	lcd_output@i
   673     07CB  0840               	movf	??_main+1,w
   674     07CC  00B5               	movwf	lcd_output@i+1
   675     07CD  120A  118A  263A  120A  118A  	fcall	_lcd_output
   676     07D2                     l979:
   677                           
   678                           ;ADC_classpgm.c: 67:         lcd_data('V');
   679     07D2  3056               	movlw	86
   680     07D3  120A  118A  2558  120A  118A  	fcall	_lcd_data
   681                           
   682                           ;ADC_classpgm.c: 69:         _delay((unsigned long)((100)*(6000000/4000.0)));
   683     07D8  30C3               	movlw	195
   684     07D9  1283               	bcf	3,5	;RP0=0, select bank0
   685     07DA  1303               	bcf	3,6	;RP1=0, select bank0
   686     07DB  00C0               	movwf	??_main+1
   687     07DC  30CC               	movlw	204
   688     07DD  00BF               	movwf	??_main
   689     07DE                     u497:
   690     07DE  0BBF               	decfsz	??_main,f
   691     07DF  2FDE               	goto	u497
   692     07E0  0BC0               	decfsz	??_main+1,f
   693     07E1  2FDE               	goto	u497
   694     07E2  0000               	nop
   695     07E3  2F6B               	goto	l963
   696     07E4  120A  118A  2800   	ljmp	start
   697     07E7                     __end_of_main:
   698                           
   699                           	psect	text1
   700     063A                     __ptext1:	
   701 ;; *************** function _lcd_output *****************
   702 ;; Defined at:
   703 ;;		line 73 in file "ADC_classpgm.c"
   704 ;; Parameters:    Size  Location     Type
   705 ;;  i               2    0[BANK0 ] unsigned int 
   706 ;; Auto vars:     Size  Location     Type
   707 ;;  k               5    2[BANK0 ] unsigned char [5]
   708 ;;  m               2    8[BANK0 ] unsigned int 
   709 ;;  j               1   10[BANK0 ] unsigned char 
   710 ;;  s               1    7[BANK0 ] unsigned char 
   711 ;; Return value:  Size  Location     Type
   712 ;;                  1    wreg      void 
   713 ;; Registers used:
   714 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   715 ;; Tracked objects:
   716 ;;		On entry : 0/0
   717 ;;		On exit  : 0/0
   718 ;;		Unchanged: 0/0
   719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   720 ;;      Params:         0       2       0       0       0
   721 ;;      Locals:         0       9       0       0       0
   722 ;;      Temps:          0       0       0       0       0
   723 ;;      Totals:         0      11       0       0       0
   724 ;;Total ram usage:       11 bytes
   725 ;; Hardware stack levels used: 1
   726 ;; Hardware stack levels required when called: 1
   727 ;; This function calls:
   728 ;;		___lwdiv
   729 ;;		___lwmod
   730 ;;		_lcd_data
   731 ;; This function is called by:
   732 ;;		_main
   733 ;; This function uses a non-reentrant model
   734 ;;
   735                           
   736     063A                     _lcd_output:	
   737                           ;psect for function _lcd_output
   738                           
   739     063A                     l891:	
   740                           ;incstack = 0
   741                           ; Regs used in _lcd_output: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   742                           
   743                           
   744                           ;ADC_classpgm.c: 73: void lcd_output(unsigned int i);ADC_classpgm.c: 74: {;ADC_classpgm.
      +                          c: 75:     unsigned char s, j = 0;
   745     063A  1283               	bcf	3,5	;RP0=0, select bank0
   746     063B  1303               	bcf	3,6	;RP1=0, select bank0
   747     063C  01BE               	clrf	lcd_output@j
   748     063D                     l893:
   749                           
   750                           ;ADC_classpgm.c: 76:     unsigned int m;;ADC_classpgm.c: 77:     unsigned char k[5];;ADC
      +                          _classpgm.c: 79:     m = i;
   751     063D  0835               	movf	lcd_output@i+1,w
   752     063E  00BD               	movwf	lcd_output@m+1
   753     063F  0834               	movf	lcd_output@i,w
   754     0640  00BC               	movwf	lcd_output@m
   755     0641                     l895:
   756                           
   757                           ;ADC_classpgm.c: 80:     if (m == 0)
   758     0641  083C               	movf	lcd_output@m,w
   759     0642  043D               	iorwf	lcd_output@m+1,w
   760     0643  1D03               	btfss	3,2
   761     0644  2E46               	goto	u381
   762     0645  2E47               	goto	u380
   763     0646                     u381:
   764     0646  2E7D               	goto	l909
   765     0647                     u380:
   766     0647                     l897:
   767                           
   768                           ;ADC_classpgm.c: 81:     {;ADC_classpgm.c: 82:         lcd_data('0');
   769     0647  3030               	movlw	48
   770     0648  120A  118A  2558  120A  118A  	fcall	_lcd_data
   771     064D  2E9E               	goto	l59
   772     064E                     l901:
   773                           
   774                           ;ADC_classpgm.c: 87:     {;ADC_classpgm.c: 88:         s = (m % 10);
   775     064E  300A               	movlw	10
   776     064F  00F0               	movwf	___lwmod@divisor
   777     0650  3000               	movlw	0
   778     0651  00F1               	movwf	___lwmod@divisor+1
   779     0652  083D               	movf	lcd_output@m+1,w
   780     0653  00F3               	movwf	___lwmod@dividend+1
   781     0654  083C               	movf	lcd_output@m,w
   782     0655  00F2               	movwf	___lwmod@dividend
   783     0656  120A  118A  25BC  120A  118A  	fcall	___lwmod
   784     065B  0870               	movf	?___lwmod,w
   785     065C  1283               	bcf	3,5	;RP0=0, select bank0
   786     065D  1303               	bcf	3,6	;RP1=0, select bank0
   787     065E  00BB               	movwf	lcd_output@s
   788     065F                     l903:
   789                           
   790                           ;ADC_classpgm.c: 89:         k[j++] = s + '0';
   791     065F  083E               	movf	lcd_output@j,w
   792     0660  3E36               	addlw	(low (lcd_output@k| 0))& (0+255)
   793     0661  0084               	movwf	4
   794     0662  083B               	movf	lcd_output@s,w
   795     0663  3E30               	addlw	48
   796     0664  1383               	bcf	3,7	;select IRP bank0
   797     0665  0080               	movwf	0
   798     0666                     l905:
   799     0666  3001               	movlw	1
   800     0667  00FF               	movwf	btemp+1
   801     0668  087F               	movf	btemp+1,w
   802     0669  07BE               	addwf	lcd_output@j,f
   803     066A                     l907:
   804                           
   805                           ;ADC_classpgm.c: 90:         m = m / 10;
   806     066A  300A               	movlw	10
   807     066B  00F6               	movwf	___lwdiv@divisor
   808     066C  3000               	movlw	0
   809     066D  00F7               	movwf	___lwdiv@divisor+1
   810     066E  083D               	movf	lcd_output@m+1,w
   811     066F  00F9               	movwf	___lwdiv@dividend+1
   812     0670  083C               	movf	lcd_output@m,w
   813     0671  00F8               	movwf	___lwdiv@dividend
   814     0672  120A  118A  25F6  120A  118A  	fcall	___lwdiv
   815     0677  0877               	movf	?___lwdiv+1,w
   816     0678  1283               	bcf	3,5	;RP0=0, select bank0
   817     0679  1303               	bcf	3,6	;RP1=0, select bank0
   818     067A  00BD               	movwf	lcd_output@m+1
   819     067B  0876               	movf	?___lwdiv,w
   820     067C  00BC               	movwf	lcd_output@m
   821     067D                     l909:
   822                           
   823                           ;ADC_classpgm.c: 86:     while (m != 0)
   824     067D  083C               	movf	lcd_output@m,w
   825     067E  043D               	iorwf	lcd_output@m+1,w
   826     067F  1D03               	btfss	3,2
   827     0680  2E82               	goto	u391
   828     0681  2E83               	goto	u390
   829     0682                     u391:
   830     0682  2E4E               	goto	l901
   831     0683                     u390:
   832     0683                     l911:
   833                           
   834                           ;ADC_classpgm.c: 94:     for (j--; j != 0xFF; j--)
   835     0683  3001               	movlw	1
   836     0684  02BE               	subwf	lcd_output@j,f
   837     0685  0A3E               	incf	lcd_output@j,w
   838     0686  1D03               	btfss	3,2
   839     0687  2E89               	goto	u401
   840     0688  2E8A               	goto	u400
   841     0689                     u401:
   842     0689  2E8B               	goto	l915
   843     068A                     u400:
   844     068A  2E9E               	goto	l59
   845     068B                     l915:
   846                           
   847                           ;ADC_classpgm.c: 95:     {;ADC_classpgm.c: 96:         lcd_data(k[j]);
   848     068B  083E               	movf	lcd_output@j,w
   849     068C  3E36               	addlw	(low (lcd_output@k| 0))& (0+255)
   850     068D  0084               	movwf	4
   851     068E  1383               	bcf	3,7	;select IRP bank0
   852     068F  0800               	movf	0,w
   853     0690  120A  118A  2558  120A  118A  	fcall	_lcd_data
   854     0695                     l917:
   855                           
   856                           ;ADC_classpgm.c: 97:     }
   857     0695  3001               	movlw	1
   858     0696  1283               	bcf	3,5	;RP0=0, select bank0
   859     0697  1303               	bcf	3,6	;RP1=0, select bank0
   860     0698  02BE               	subwf	lcd_output@j,f
   861     0699                     l919:
   862     0699  0A3E               	incf	lcd_output@j,w
   863     069A  1D03               	btfss	3,2
   864     069B  2E9D               	goto	u411
   865     069C  2E9E               	goto	u410
   866     069D                     u411:
   867     069D  2E8B               	goto	l915
   868     069E                     u410:
   869     069E                     l59:
   870     069E  0008               	return
   871     069F                     __end_of_lcd_output:
   872                           
   873                           	psect	text2
   874     0558                     __ptext2:	
   875 ;; *************** function _lcd_data *****************
   876 ;; Defined at:
   877 ;;		line 132 in file "ADC_classpgm.c"
   878 ;; Parameters:    Size  Location     Type
   879 ;;  i               1    wreg     unsigned char 
   880 ;; Auto vars:     Size  Location     Type
   881 ;;  i               1    2[COMMON] unsigned char 
   882 ;; Return value:  Size  Location     Type
   883 ;;                  1    wreg      void 
   884 ;; Registers used:
   885 ;;		wreg, status,2, status,0, btemp+1
   886 ;; Tracked objects:
   887 ;;		On entry : 0/0
   888 ;;		On exit  : 0/0
   889 ;;		Unchanged: 0/0
   890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   891 ;;      Params:         0       0       0       0       0
   892 ;;      Locals:         1       0       0       0       0
   893 ;;      Temps:          2       0       0       0       0
   894 ;;      Totals:         3       0       0       0       0
   895 ;;Total ram usage:        3 bytes
   896 ;; Hardware stack levels used: 1
   897 ;; This function calls:
   898 ;;		Nothing
   899 ;; This function is called by:
   900 ;;		_main
   901 ;;		_lcd_output
   902 ;; This function uses a non-reentrant model
   903 ;;
   904                           
   905     0558                     _lcd_data:	
   906                           ;psect for function _lcd_data
   907                           
   908                           
   909                           ;incstack = 0
   910                           ; Regs used in _lcd_data: [wreg+status,2+status,0+btemp+1]
   911                           ;lcd_data@i stored from wreg
   912     0558  00F2               	movwf	lcd_data@i
   913     0559                     l807:
   914                           
   915                           ;ADC_classpgm.c: 132: void lcd_data(unsigned char i);ADC_classpgm.c: 133: {;ADC_classpgm
      +                          .c: 134:     PORTC |= 0x08;
   916     0559  1283               	bcf	3,5	;RP0=0, select bank0
   917     055A  1303               	bcf	3,6	;RP1=0, select bank0
   918     055B  1587               	bsf	7,3	;volatile
   919     055C                     l809:
   920                           
   921                           ;ADC_classpgm.c: 135:     PORTD = i;
   922     055C  0872               	movf	lcd_data@i,w
   923     055D  0088               	movwf	8	;volatile
   924     055E                     l811:
   925                           
   926                           ;ADC_classpgm.c: 136:     PORTC |= 0x01;
   927     055E  1407               	bsf	7,0	;volatile
   928     055F                     l813:
   929                           
   930                           ;ADC_classpgm.c: 137:     PORTC &= ~0x01;
   931     055F  30FE               	movlw	254
   932     0560  00FF               	movwf	btemp+1
   933     0561  087F               	movf	btemp+1,w
   934     0562  0587               	andwf	7,f	;volatile
   935     0563                     l815:
   936                           
   937                           ;ADC_classpgm.c: 138:     _delay((unsigned long)((100)*(6000000/4000.0)));
   938     0563  30C3               	movlw	195
   939     0564  00F1               	movwf	??_lcd_data+1
   940     0565  30CD               	movlw	205
   941     0566  00F0               	movwf	??_lcd_data
   942     0567                     u507:
   943     0567  0BF0               	decfsz	??_lcd_data,f
   944     0568  2D67               	goto	u507
   945     0569  0BF1               	decfsz	??_lcd_data+1,f
   946     056A  2D67               	goto	u507
   947     056B                     l73:
   948     056B  0008               	return
   949     056C                     __end_of_lcd_data:
   950                           
   951                           	psect	text3
   952     05BC                     __ptext3:	
   953 ;; *************** function ___lwmod *****************
   954 ;; Defined at:
   955 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwmod.c"
   956 ;; Parameters:    Size  Location     Type
   957 ;;  divisor         2    0[COMMON] unsigned int 
   958 ;;  dividend        2    2[COMMON] unsigned int 
   959 ;; Auto vars:     Size  Location     Type
   960 ;;  counter         1    4[COMMON] unsigned char 
   961 ;; Return value:  Size  Location     Type
   962 ;;                  2    0[COMMON] unsigned int 
   963 ;; Registers used:
   964 ;;		wreg, status,2, status,0, btemp+1
   965 ;; Tracked objects:
   966 ;;		On entry : 0/0
   967 ;;		On exit  : 0/0
   968 ;;		Unchanged: 0/0
   969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   970 ;;      Params:         4       0       0       0       0
   971 ;;      Locals:         1       0       0       0       0
   972 ;;      Temps:          0       0       0       0       0
   973 ;;      Totals:         5       0       0       0       0
   974 ;;Total ram usage:        5 bytes
   975 ;; Hardware stack levels used: 1
   976 ;; This function calls:
   977 ;;		Nothing
   978 ;; This function is called by:
   979 ;;		_lcd_output
   980 ;; This function uses a non-reentrant model
   981 ;;
   982                           
   983     05BC                     ___lwmod:	
   984                           ;psect for function ___lwmod
   985                           
   986     05BC                     l843:	
   987                           ;incstack = 0
   988                           ; Regs used in ___lwmod: [wreg+status,2+status,0+btemp+1]
   989                           
   990     05BC  0870               	movf	___lwmod@divisor,w
   991     05BD  0471               	iorwf	___lwmod@divisor+1,w
   992     05BE  1903               	btfsc	3,2
   993     05BF  2DC1               	goto	u321
   994     05C0  2DC2               	goto	u320
   995     05C1                     u321:
   996     05C1  2DF1               	goto	l861
   997     05C2                     u320:
   998     05C2                     l845:
   999     05C2  01F4               	clrf	___lwmod@counter
  1000     05C3  0AF4               	incf	___lwmod@counter,f
  1001     05C4  2DD0               	goto	l851
  1002     05C5                     l847:
  1003     05C5  3001               	movlw	1
  1004     05C6                     u335:
  1005     05C6  1003               	clrc
  1006     05C7  0DF0               	rlf	___lwmod@divisor,f
  1007     05C8  0DF1               	rlf	___lwmod@divisor+1,f
  1008     05C9  3EFF               	addlw	-1
  1009     05CA  1D03               	skipz
  1010     05CB  2DC6               	goto	u335
  1011     05CC                     l849:
  1012     05CC  3001               	movlw	1
  1013     05CD  00FF               	movwf	btemp+1
  1014     05CE  087F               	movf	btemp+1,w
  1015     05CF  07F4               	addwf	___lwmod@counter,f
  1016     05D0                     l851:
  1017     05D0  1FF1               	btfss	___lwmod@divisor+1,7
  1018     05D1  2DD3               	goto	u341
  1019     05D2  2DD4               	goto	u340
  1020     05D3                     u341:
  1021     05D3  2DC5               	goto	l847
  1022     05D4                     u340:
  1023     05D4                     l853:
  1024     05D4  0871               	movf	___lwmod@divisor+1,w
  1025     05D5  0273               	subwf	___lwmod@dividend+1,w
  1026     05D6  1D03               	skipz
  1027     05D7  2DDA               	goto	u355
  1028     05D8  0870               	movf	___lwmod@divisor,w
  1029     05D9  0272               	subwf	___lwmod@dividend,w
  1030     05DA                     u355:
  1031     05DA  1C03               	skipc
  1032     05DB  2DDD               	goto	u351
  1033     05DC  2DDE               	goto	u350
  1034     05DD                     u351:
  1035     05DD  2DE4               	goto	l857
  1036     05DE                     u350:
  1037     05DE                     l855:
  1038     05DE  0870               	movf	___lwmod@divisor,w
  1039     05DF  02F2               	subwf	___lwmod@dividend,f
  1040     05E0  0871               	movf	___lwmod@divisor+1,w
  1041     05E1  1C03               	skipc
  1042     05E2  03F3               	decf	___lwmod@dividend+1,f
  1043     05E3  02F3               	subwf	___lwmod@dividend+1,f
  1044     05E4                     l857:
  1045     05E4  3001               	movlw	1
  1046     05E5                     u365:
  1047     05E5  1003               	clrc
  1048     05E6  0CF1               	rrf	___lwmod@divisor+1,f
  1049     05E7  0CF0               	rrf	___lwmod@divisor,f
  1050     05E8  3EFF               	addlw	-1
  1051     05E9  1D03               	skipz
  1052     05EA  2DE5               	goto	u365
  1053     05EB                     l859:
  1054     05EB  3001               	movlw	1
  1055     05EC  02F4               	subwf	___lwmod@counter,f
  1056     05ED  1D03               	btfss	3,2
  1057     05EE  2DF0               	goto	u371
  1058     05EF  2DF1               	goto	u370
  1059     05F0                     u371:
  1060     05F0  2DD4               	goto	l853
  1061     05F1                     u370:
  1062     05F1                     l861:
  1063     05F1  0873               	movf	___lwmod@dividend+1,w
  1064     05F2  00F1               	movwf	?___lwmod+1
  1065     05F3  0872               	movf	___lwmod@dividend,w
  1066     05F4  00F0               	movwf	?___lwmod
  1067     05F5                     l449:
  1068     05F5  0008               	return
  1069     05F6                     __end_of___lwmod:
  1070                           
  1071                           	psect	text4
  1072     05F6                     __ptext4:	
  1073 ;; *************** function ___lwdiv *****************
  1074 ;; Defined at:
  1075 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwdiv.c"
  1076 ;; Parameters:    Size  Location     Type
  1077 ;;  divisor         2    6[COMMON] unsigned int 
  1078 ;;  dividend        2    8[COMMON] unsigned int 
  1079 ;; Auto vars:     Size  Location     Type
  1080 ;;  quotient        2   10[COMMON] unsigned int 
  1081 ;;  counter         1   12[COMMON] unsigned char 
  1082 ;; Return value:  Size  Location     Type
  1083 ;;                  2    6[COMMON] unsigned int 
  1084 ;; Registers used:
  1085 ;;		wreg, status,2, status,0, btemp+1
  1086 ;; Tracked objects:
  1087 ;;		On entry : 0/0
  1088 ;;		On exit  : 0/0
  1089 ;;		Unchanged: 0/0
  1090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1091 ;;      Params:         4       0       0       0       0
  1092 ;;      Locals:         3       0       0       0       0
  1093 ;;      Temps:          0       0       0       0       0
  1094 ;;      Totals:         7       0       0       0       0
  1095 ;;Total ram usage:        7 bytes
  1096 ;; Hardware stack levels used: 1
  1097 ;; This function calls:
  1098 ;;		Nothing
  1099 ;; This function is called by:
  1100 ;;		_main
  1101 ;;		_lcd_output
  1102 ;; This function uses a non-reentrant model
  1103 ;;
  1104                           
  1105     05F6                     ___lwdiv:	
  1106                           ;psect for function ___lwdiv
  1107                           
  1108     05F6                     l817:	
  1109                           ;incstack = 0
  1110                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  1111                           
  1112     05F6  01FA               	clrf	___lwdiv@quotient
  1113     05F7  01FB               	clrf	___lwdiv@quotient+1
  1114     05F8                     l819:
  1115     05F8  0876               	movf	___lwdiv@divisor,w
  1116     05F9  0477               	iorwf	___lwdiv@divisor+1,w
  1117     05FA  1903               	btfsc	3,2
  1118     05FB  2DFD               	goto	u251
  1119     05FC  2DFE               	goto	u250
  1120     05FD                     u251:
  1121     05FD  2E35               	goto	l839
  1122     05FE                     u250:
  1123     05FE                     l821:
  1124     05FE  01FC               	clrf	___lwdiv@counter
  1125     05FF  0AFC               	incf	___lwdiv@counter,f
  1126     0600  2E0C               	goto	l827
  1127     0601                     l823:
  1128     0601  3001               	movlw	1
  1129     0602                     u265:
  1130     0602  1003               	clrc
  1131     0603  0DF6               	rlf	___lwdiv@divisor,f
  1132     0604  0DF7               	rlf	___lwdiv@divisor+1,f
  1133     0605  3EFF               	addlw	-1
  1134     0606  1D03               	skipz
  1135     0607  2E02               	goto	u265
  1136     0608                     l825:
  1137     0608  3001               	movlw	1
  1138     0609  00FF               	movwf	btemp+1
  1139     060A  087F               	movf	btemp+1,w
  1140     060B  07FC               	addwf	___lwdiv@counter,f
  1141     060C                     l827:
  1142     060C  1FF7               	btfss	___lwdiv@divisor+1,7
  1143     060D  2E0F               	goto	u271
  1144     060E  2E10               	goto	u270
  1145     060F                     u271:
  1146     060F  2E01               	goto	l823
  1147     0610                     u270:
  1148     0610                     l829:
  1149     0610  3001               	movlw	1
  1150     0611                     u285:
  1151     0611  1003               	clrc
  1152     0612  0DFA               	rlf	___lwdiv@quotient,f
  1153     0613  0DFB               	rlf	___lwdiv@quotient+1,f
  1154     0614  3EFF               	addlw	-1
  1155     0615  1D03               	skipz
  1156     0616  2E11               	goto	u285
  1157     0617  0877               	movf	___lwdiv@divisor+1,w
  1158     0618  0279               	subwf	___lwdiv@dividend+1,w
  1159     0619  1D03               	skipz
  1160     061A  2E1D               	goto	u295
  1161     061B  0876               	movf	___lwdiv@divisor,w
  1162     061C  0278               	subwf	___lwdiv@dividend,w
  1163     061D                     u295:
  1164     061D  1C03               	skipc
  1165     061E  2E20               	goto	u291
  1166     061F  2E21               	goto	u290
  1167     0620                     u291:
  1168     0620  2E28               	goto	l835
  1169     0621                     u290:
  1170     0621                     l831:
  1171     0621  0876               	movf	___lwdiv@divisor,w
  1172     0622  02F8               	subwf	___lwdiv@dividend,f
  1173     0623  0877               	movf	___lwdiv@divisor+1,w
  1174     0624  1C03               	skipc
  1175     0625  03F9               	decf	___lwdiv@dividend+1,f
  1176     0626  02F9               	subwf	___lwdiv@dividend+1,f
  1177     0627                     l833:
  1178     0627  147A               	bsf	___lwdiv@quotient,0
  1179     0628                     l835:
  1180     0628  3001               	movlw	1
  1181     0629                     u305:
  1182     0629  1003               	clrc
  1183     062A  0CF7               	rrf	___lwdiv@divisor+1,f
  1184     062B  0CF6               	rrf	___lwdiv@divisor,f
  1185     062C  3EFF               	addlw	-1
  1186     062D  1D03               	skipz
  1187     062E  2E29               	goto	u305
  1188     062F                     l837:
  1189     062F  3001               	movlw	1
  1190     0630  02FC               	subwf	___lwdiv@counter,f
  1191     0631  1D03               	btfss	3,2
  1192     0632  2E34               	goto	u311
  1193     0633  2E35               	goto	u310
  1194     0634                     u311:
  1195     0634  2E10               	goto	l829
  1196     0635                     u310:
  1197     0635                     l839:
  1198     0635  087B               	movf	___lwdiv@quotient+1,w
  1199     0636  00F7               	movwf	?___lwdiv+1
  1200     0637  087A               	movf	___lwdiv@quotient,w
  1201     0638  00F6               	movwf	?___lwdiv
  1202     0639                     l439:
  1203     0639  0008               	return
  1204     063A                     __end_of___lwdiv:
  1205                           
  1206                           	psect	text5
  1207     069F                     __ptext5:	
  1208 ;; *************** function _init *****************
  1209 ;; Defined at:
  1210 ;;		line 100 in file "ADC_classpgm.c"
  1211 ;; Parameters:    Size  Location     Type
  1212 ;;		None
  1213 ;; Auto vars:     Size  Location     Type
  1214 ;;		None
  1215 ;; Return value:  Size  Location     Type
  1216 ;;                  1    wreg      void 
  1217 ;; Registers used:
  1218 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1219 ;; Tracked objects:
  1220 ;;		On entry : 0/0
  1221 ;;		On exit  : 0/0
  1222 ;;		Unchanged: 0/0
  1223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1224 ;;      Params:         0       0       0       0       0
  1225 ;;      Locals:         0       0       0       0       0
  1226 ;;      Temps:          2       0       0       0       0
  1227 ;;      Totals:         2       0       0       0       0
  1228 ;;Total ram usage:        2 bytes
  1229 ;; Hardware stack levels used: 1
  1230 ;; Hardware stack levels required when called: 1
  1231 ;; This function calls:
  1232 ;;		_lcd_com
  1233 ;; This function is called by:
  1234 ;;		_main
  1235 ;; This function uses a non-reentrant model
  1236 ;;
  1237                           
  1238     069F                     _init:	
  1239                           ;psect for function _init
  1240                           
  1241     069F                     l865:	
  1242                           ;incstack = 0
  1243                           ; Regs used in _init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1244                           
  1245                           
  1246                           ;ADC_classpgm.c: 102:     TRISA= 0x01;
  1247     069F  3001               	movlw	1
  1248     06A0  1683               	bsf	3,5	;RP0=1, select bank1
  1249     06A1  1303               	bcf	3,6	;RP1=0, select bank1
  1250     06A2  0085               	movwf	5	;volatile
  1251     06A3                     l867:
  1252                           
  1253                           ;ADC_classpgm.c: 103:     TRISC=0x00;
  1254     06A3  0187               	clrf	7	;volatile
  1255     06A4                     l869:
  1256                           
  1257                           ;ADC_classpgm.c: 104:     TRISD= 0x00;
  1258     06A4  0188               	clrf	8	;volatile
  1259                           
  1260                           ;ADC_classpgm.c: 105:     ADCON0 = 0x81;
  1261     06A5  3081               	movlw	129
  1262     06A6  1283               	bcf	3,5	;RP0=0, select bank0
  1263     06A7  1303               	bcf	3,6	;RP1=0, select bank0
  1264     06A8  009F               	movwf	31	;volatile
  1265                           
  1266                           ;ADC_classpgm.c: 106:     ADCON1 = 0x8E;
  1267     06A9  308E               	movlw	142
  1268     06AA  1683               	bsf	3,5	;RP0=1, select bank1
  1269     06AB  1303               	bcf	3,6	;RP1=0, select bank1
  1270     06AC  009F               	movwf	31	;volatile
  1271     06AD                     l871:
  1272                           
  1273                           ;ADC_classpgm.c: 107:     lcd_com(0x30);
  1274     06AD  3030               	movlw	48
  1275     06AE  120A  118A  2580  120A  118A  	fcall	_lcd_com
  1276     06B3                     l873:
  1277                           
  1278                           ;ADC_classpgm.c: 108:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1279     06B3  30C3               	movlw	195
  1280     06B4  00F4               	movwf	??_init+1
  1281     06B5  30CD               	movlw	205
  1282     06B6  00F3               	movwf	??_init
  1283     06B7                     u517:
  1284     06B7  0BF3               	decfsz	??_init,f
  1285     06B8  2EB7               	goto	u517
  1286     06B9  0BF4               	decfsz	??_init+1,f
  1287     06BA  2EB7               	goto	u517
  1288                           
  1289                           ;ADC_classpgm.c: 109:     lcd_com(0x30);
  1290     06BB  3030               	movlw	48
  1291     06BC  120A  118A  2580  120A  118A  	fcall	_lcd_com
  1292     06C1                     l875:
  1293                           
  1294                           ;ADC_classpgm.c: 110:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1295     06C1  30C3               	movlw	195
  1296     06C2  00F4               	movwf	??_init+1
  1297     06C3  30CD               	movlw	205
  1298     06C4  00F3               	movwf	??_init
  1299     06C5                     u527:
  1300     06C5  0BF3               	decfsz	??_init,f
  1301     06C6  2EC5               	goto	u527
  1302     06C7  0BF4               	decfsz	??_init+1,f
  1303     06C8  2EC5               	goto	u527
  1304     06C9                     l877:
  1305                           
  1306                           ;ADC_classpgm.c: 111:     lcd_com(0x30);
  1307     06C9  3030               	movlw	48
  1308     06CA  120A  118A  2580  120A  118A  	fcall	_lcd_com
  1309                           
  1310                           ;ADC_classpgm.c: 112:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1311     06CF  30C3               	movlw	195
  1312     06D0  00F4               	movwf	??_init+1
  1313     06D1  30CD               	movlw	205
  1314     06D2  00F3               	movwf	??_init
  1315     06D3                     u537:
  1316     06D3  0BF3               	decfsz	??_init,f
  1317     06D4  2ED3               	goto	u537
  1318     06D5  0BF4               	decfsz	??_init+1,f
  1319     06D6  2ED3               	goto	u537
  1320     06D7                     l879:
  1321                           
  1322                           ;ADC_classpgm.c: 113:     lcd_com(0x38);
  1323     06D7  3038               	movlw	56
  1324     06D8  120A  118A  2580  120A  118A  	fcall	_lcd_com
  1325     06DD                     l881:
  1326                           
  1327                           ;ADC_classpgm.c: 114:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1328     06DD  30C3               	movlw	195
  1329     06DE  00F4               	movwf	??_init+1
  1330     06DF  30CD               	movlw	205
  1331     06E0  00F3               	movwf	??_init
  1332     06E1                     u547:
  1333     06E1  0BF3               	decfsz	??_init,f
  1334     06E2  2EE1               	goto	u547
  1335     06E3  0BF4               	decfsz	??_init+1,f
  1336     06E4  2EE1               	goto	u547
  1337                           
  1338                           ;ADC_classpgm.c: 115:     lcd_com(0x06);
  1339     06E5  3006               	movlw	6
  1340     06E6  120A  118A  2580  120A  118A  	fcall	_lcd_com
  1341     06EB                     l883:
  1342                           
  1343                           ;ADC_classpgm.c: 116:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1344     06EB  30C3               	movlw	195
  1345     06EC  00F4               	movwf	??_init+1
  1346     06ED  30CD               	movlw	205
  1347     06EE  00F3               	movwf	??_init
  1348     06EF                     u557:
  1349     06EF  0BF3               	decfsz	??_init,f
  1350     06F0  2EEF               	goto	u557
  1351     06F1  0BF4               	decfsz	??_init+1,f
  1352     06F2  2EEF               	goto	u557
  1353     06F3                     l885:
  1354                           
  1355                           ;ADC_classpgm.c: 117:     lcd_com(0x0C);
  1356     06F3  300C               	movlw	12
  1357     06F4  120A  118A  2580  120A  118A  	fcall	_lcd_com
  1358                           
  1359                           ;ADC_classpgm.c: 118:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1360     06F9  30C3               	movlw	195
  1361     06FA  00F4               	movwf	??_init+1
  1362     06FB  30CD               	movlw	205
  1363     06FC  00F3               	movwf	??_init
  1364     06FD                     u567:
  1365     06FD  0BF3               	decfsz	??_init,f
  1366     06FE  2EFD               	goto	u567
  1367     06FF  0BF4               	decfsz	??_init+1,f
  1368     0700  2EFD               	goto	u567
  1369     0701                     l887:
  1370                           
  1371                           ;ADC_classpgm.c: 119:     lcd_com(0x01);
  1372     0701  3001               	movlw	1
  1373     0702  120A  118A  2580  120A  118A  	fcall	_lcd_com
  1374     0707                     l889:
  1375                           
  1376                           ;ADC_classpgm.c: 120:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1377     0707  30C3               	movlw	195
  1378     0708  00F4               	movwf	??_init+1
  1379     0709  30CD               	movlw	205
  1380     070A  00F3               	movwf	??_init
  1381     070B                     u577:
  1382     070B  0BF3               	decfsz	??_init,f
  1383     070C  2F0B               	goto	u577
  1384     070D  0BF4               	decfsz	??_init+1,f
  1385     070E  2F0B               	goto	u577
  1386     070F                     l67:
  1387     070F  0008               	return
  1388     0710                     __end_of_init:
  1389                           
  1390                           	psect	text6
  1391     0580                     __ptext6:	
  1392 ;; *************** function _lcd_com *****************
  1393 ;; Defined at:
  1394 ;;		line 123 in file "ADC_classpgm.c"
  1395 ;; Parameters:    Size  Location     Type
  1396 ;;  i               1    wreg     unsigned char 
  1397 ;; Auto vars:     Size  Location     Type
  1398 ;;  i               1    2[COMMON] unsigned char 
  1399 ;; Return value:  Size  Location     Type
  1400 ;;                  1    wreg      void 
  1401 ;; Registers used:
  1402 ;;		wreg, status,2, status,0, btemp+1
  1403 ;; Tracked objects:
  1404 ;;		On entry : 0/0
  1405 ;;		On exit  : 0/0
  1406 ;;		Unchanged: 0/0
  1407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1408 ;;      Params:         0       0       0       0       0
  1409 ;;      Locals:         1       0       0       0       0
  1410 ;;      Temps:          2       0       0       0       0
  1411 ;;      Totals:         3       0       0       0       0
  1412 ;;Total ram usage:        3 bytes
  1413 ;; Hardware stack levels used: 1
  1414 ;; This function calls:
  1415 ;;		Nothing
  1416 ;; This function is called by:
  1417 ;;		_main
  1418 ;;		_init
  1419 ;; This function uses a non-reentrant model
  1420 ;;
  1421                           
  1422     0580                     _lcd_com:	
  1423                           ;psect for function _lcd_com
  1424                           
  1425                           
  1426                           ;incstack = 0
  1427                           ; Regs used in _lcd_com: [wreg+status,2+status,0+btemp+1]
  1428                           ;lcd_com@i stored from wreg
  1429     0580  00F2               	movwf	lcd_com@i
  1430     0581                     l799:
  1431                           
  1432                           ;ADC_classpgm.c: 123: void lcd_com(unsigned char i);ADC_classpgm.c: 124: {;ADC_classpgm.
      +                          c: 125:     PORTC &= ~0x08;
  1433     0581  30F7               	movlw	247
  1434     0582  00FF               	movwf	btemp+1
  1435     0583  087F               	movf	btemp+1,w
  1436     0584  1283               	bcf	3,5	;RP0=0, select bank0
  1437     0585  1303               	bcf	3,6	;RP1=0, select bank0
  1438     0586  0587               	andwf	7,f	;volatile
  1439     0587                     l801:
  1440                           
  1441                           ;ADC_classpgm.c: 126:     PORTD = i;
  1442     0587  0872               	movf	lcd_com@i,w
  1443     0588  0088               	movwf	8	;volatile
  1444     0589                     l803:
  1445                           
  1446                           ;ADC_classpgm.c: 127:     PORTC |= 0x01;
  1447     0589  1407               	bsf	7,0	;volatile
  1448     058A                     l805:
  1449                           
  1450                           ;ADC_classpgm.c: 128:     PORTC &= ~0x01;
  1451     058A  30FE               	movlw	254
  1452     058B  00FF               	movwf	btemp+1
  1453     058C  087F               	movf	btemp+1,w
  1454     058D  0587               	andwf	7,f	;volatile
  1455                           
  1456                           ;ADC_classpgm.c: 129:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1457     058E  30C3               	movlw	195
  1458     058F  00F1               	movwf	??_lcd_com+1
  1459     0590  30CD               	movlw	205
  1460     0591  00F0               	movwf	??_lcd_com
  1461     0592                     u587:
  1462     0592  0BF0               	decfsz	??_lcd_com,f
  1463     0593  2D92               	goto	u587
  1464     0594  0BF1               	decfsz	??_lcd_com+1,f
  1465     0595  2D92               	goto	u587
  1466     0596                     l70:
  1467     0596  0008               	return
  1468     0597                     __end_of_lcd_com:
  1469                           
  1470                           	psect	text7
  1471     0597                     __ptext7:	
  1472 ;; *************** function ___wmul *****************
  1473 ;; Defined at:
  1474 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul16.c"
  1475 ;; Parameters:    Size  Location     Type
  1476 ;;  multiplier      2    0[COMMON] unsigned int 
  1477 ;;  multiplicand    2    2[COMMON] unsigned int 
  1478 ;; Auto vars:     Size  Location     Type
  1479 ;;  product         2    4[COMMON] unsigned int 
  1480 ;; Return value:  Size  Location     Type
  1481 ;;                  2    0[COMMON] unsigned int 
  1482 ;; Registers used:
  1483 ;;		wreg, status,2, status,0
  1484 ;; Tracked objects:
  1485 ;;		On entry : 0/0
  1486 ;;		On exit  : 0/0
  1487 ;;		Unchanged: 0/0
  1488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1489 ;;      Params:         4       0       0       0       0
  1490 ;;      Locals:         2       0       0       0       0
  1491 ;;      Temps:          0       0       0       0       0
  1492 ;;      Totals:         6       0       0       0       0
  1493 ;;Total ram usage:        6 bytes
  1494 ;; Hardware stack levels used: 1
  1495 ;; This function calls:
  1496 ;;		Nothing
  1497 ;; This function is called by:
  1498 ;;		_main
  1499 ;; This function uses a non-reentrant model
  1500 ;;
  1501                           
  1502     0597                     ___wmul:	
  1503                           ;psect for function ___wmul
  1504                           
  1505     0597                     l921:	
  1506                           ;incstack = 0
  1507                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1508                           
  1509     0597  01F4               	clrf	___wmul@product
  1510     0598  01F5               	clrf	___wmul@product+1
  1511     0599                     l923:
  1512     0599  1C70               	btfss	___wmul@multiplier,0
  1513     059A  2D9C               	goto	u421
  1514     059B  2D9D               	goto	u420
  1515     059C                     u421:
  1516     059C  2DA3               	goto	l159
  1517     059D                     u420:
  1518     059D                     l925:
  1519     059D  0872               	movf	___wmul@multiplicand,w
  1520     059E  07F4               	addwf	___wmul@product,f
  1521     059F  1803               	skipnc
  1522     05A0  0AF5               	incf	___wmul@product+1,f
  1523     05A1  0873               	movf	___wmul@multiplicand+1,w
  1524     05A2  07F5               	addwf	___wmul@product+1,f
  1525     05A3                     l159:
  1526     05A3  3001               	movlw	1
  1527     05A4                     u435:
  1528     05A4  1003               	clrc
  1529     05A5  0DF2               	rlf	___wmul@multiplicand,f
  1530     05A6  0DF3               	rlf	___wmul@multiplicand+1,f
  1531     05A7  3EFF               	addlw	-1
  1532     05A8  1D03               	skipz
  1533     05A9  2DA4               	goto	u435
  1534     05AA                     l927:
  1535     05AA  3001               	movlw	1
  1536     05AB                     u445:
  1537     05AB  1003               	clrc
  1538     05AC  0CF1               	rrf	___wmul@multiplier+1,f
  1539     05AD  0CF0               	rrf	___wmul@multiplier,f
  1540     05AE  3EFF               	addlw	-1
  1541     05AF  1D03               	skipz
  1542     05B0  2DAB               	goto	u445
  1543     05B1                     l929:
  1544     05B1  0870               	movf	___wmul@multiplier,w
  1545     05B2  0471               	iorwf	___wmul@multiplier+1,w
  1546     05B3  1D03               	btfss	3,2
  1547     05B4  2DB6               	goto	u451
  1548     05B5  2DB7               	goto	u450
  1549     05B6                     u451:
  1550     05B6  2D99               	goto	l923
  1551     05B7                     u450:
  1552     05B7                     l931:
  1553     05B7  0875               	movf	___wmul@product+1,w
  1554     05B8  00F1               	movwf	?___wmul+1
  1555     05B9  0874               	movf	___wmul@product,w
  1556     05BA  00F0               	movwf	?___wmul
  1557     05BB                     l161:
  1558     05BB  0008               	return
  1559     05BC                     __end_of___wmul:
  1560     007E                     btemp	set	126	;btemp
  1561     007E                     wtemp0	set	126
  1562                           
  1563                           	psect	config
  1564                           
  1565                           ;Config register CONFIG @ 0x2007
  1566                           ;	Oscillator Selection bits
  1567                           ;	FOSC = EXTRC, RC oscillator
  1568                           ;	Watchdog Timer Enable bit
  1569                           ;	WDTE = OFF, WDT disabled
  1570                           ;	Power-up Timer Enable bit
  1571                           ;	PWRTE = OFF, PWRT disabled
  1572                           ;	Brown-out Reset Enable bit
  1573                           ;	BOREN = OFF, BOR disabled
  1574                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1575                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1576                           ;	Data EEPROM Memory Code Protection bit
  1577                           ;	CPD = OFF, Data EEPROM code protection off
  1578                           ;	Flash Program Memory Write Enable bits
  1579                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1580                           ;	In-Circuit Debugger Mode bit
  1581                           ;	DEBUG = 0x1, unprogrammed default
  1582                           ;	Flash Program Memory Code Protection bit
  1583                           ;	CP = OFF, Code protection off
  1584     2007                     	org	8199
  1585     2007  3F3B               	dw	16187

Data Sizes:
    Strings     0
    Constant    0
    Data        20
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     15      42
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___lwdiv
    _lcd_output->___lwdiv
    ___lwdiv->___wmul
    _init->_lcd_com

Critical Paths under _main in BANK0

    _main->_lcd_output

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    2137
                                             11 BANK0      4     4      0
                            ___lwdiv
                             ___wmul
                               _init
                            _lcd_com
                           _lcd_data
                         _lcd_output
 ---------------------------------------------------------------------------------
 (1) _lcd_output                                          11     9      2    1225
                                              0 BANK0     11     9      2
                            ___lwdiv
                            ___lwmod
                           _lcd_data
 ---------------------------------------------------------------------------------
 (2) _lcd_data                                             3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     311
                                              0 COMMON     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     466
                                              6 COMMON     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _init                                                 2     2      0      22
                                              3 COMMON     2     2      0
                            _lcd_com
 ---------------------------------------------------------------------------------
 (1) _lcd_com                                              3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___lwdiv
     ___wmul (ARG)
   ___wmul
   _init
     _lcd_com
   _lcd_com
   _lcd_data
   _lcd_output
     ___lwdiv
     ___lwmod
     _lcd_data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      F      2A       5       52.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      D       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      37      12        0.0%
ABS                  0      0      37       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Tue Sep 03 01:39:05 2024

                      pc 0002                       l50 0770                       l70 0596  
                     l73 056B                       l67 070F                       l59 069E  
                     fsr 0004      ___wmul@multiplicand 0072                      l161 05BB  
                    l159 05A3                      l439 0639                      l801 0587  
                    l449 05F5                      l803 0589                      l811 055E  
                    l805 058A                      l821 05FE                      l813 055F  
                    l901 064E                      l831 0621                      l823 0601  
                    l815 0563                      l807 0559                      l911 0683  
                    l903 065F                      l921 0597                      l833 0627  
                    l825 0608                      l817 05F6                      l809 055C  
                    l905 0666                      l931 05B7                      l923 0599  
                    l835 0628                      l827 060C                      l819 05F8  
                    l851 05D0                      l843 05BC                      l915 068B  
                    l907 066A                      l925 059D                      l837 062F  
                    l829 0610                      l853 05D4                      l845 05C2  
                    l861 05F1                      l917 0695                      l909 067D  
                    l927 05AA                      l871 06AD                      l839 0635  
                    l855 05DE                      l847 05C5                      l919 0699  
                    l951 0746                      l943 071F                      l935 0710  
                    l929 05B1                      l881 06DD                      l873 06B3  
                    l865 069F                      l857 05E4                      l849 05CC  
                    l961 075E                      l945 072B                      l937 071B  
                    l883 06EB                      l875 06C1                      l867 06A3  
                    l859 05EB                      l891 063A                      l971 07AD  
                    l963 076B                      l947 0733                      l885 06F3  
                    l877 06C9                      l869 06A4                      l893 063D  
                    l973 07B3                      l965 076F                      l957 074A  
                    l949 0740                      l799 0581                      l887 0701  
                    l879 06D7                      l895 0641                      l975 07BE  
                    l967 0774                      l959 0756                      l889 0707  
                    l897 0647                      l977 07C4                      l969 078F  
                    l979 07D2                      u310 0635                      u311 0634  
                    u320 05C2                      u400 068A                      u305 0629  
                    u321 05C1                      u401 0689                      u250 05FE  
                    u410 069E                      u251 05FD                      u411 069D  
                    u420 059D                      u340 05D4                      u421 059C  
                    u341 05D3                      u270 0610                      u350 05DE  
                    u271 060F                      u351 05DD                      u335 05C6  
                    u265 0602                      u450 05B7                      u290 0621  
                    u370 05F1                      u451 05B6                      u435 05A4  
                    u291 0620                      u371 05F0                      u355 05DA  
                    u507 0567                      u380 0647                      u460 0740  
                    u445 05AB                      u517 06B7                      u285 0611  
                    u365 05E5                      u381 0646                      u461 073F  
                    u390 0683                      u470 076B                      u527 06C5  
                    u295 061D                      u391 0682                      u471 076A  
                    u480 0774                      u537 06D3                      u481 0773  
                    u465 073C                      u547 06E1                      u475 0767  
                    u557 06EF                      u567 06FD                      u577 070B  
                    u497 07DE                      u587 0592                      fsr0 0004  
                    indf 0000                     _main 0710                     _init 069F  
                   btemp 007E                     _volt 0049              lcd_output@i 0034  
            lcd_output@j 003E              lcd_output@k 0036              lcd_output@m 003C  
            lcd_output@s 003B                     start 0000                    ?_main 0070  
                  ?_init 0070          __end_of___lwdiv 063A          __end_of___lwmod 05F6  
                  _PORTC 0007                    _PORTD 0008                    _TRISA 0085  
                  _TRISC 0087                    _TRISD 0088          __end_of_lcd_com 0597  
                  _msg_1 002A                    _msg_2 0020                    main@i 0041  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 07E7             __end_of_main 07E7             __end_of_init 0710  
                 ??_main 003F                   ??_init 0073                   _ADCON0 001F  
                 _ADCON1 009F                   _ADRESH 001E                   _ADRESL 009E  
       __end_of_lcd_data 056C                   ___wmul 0597                ??___lwdiv 007A  
              ??___lwmod 0074                   _result 0043                ??_lcd_com 0070  
__end_of__initialization 07FC           __pcstackCOMMON 0070             __pidataBANK0 056C  
             __pbssBANK0 0043               __pmaintext 0710                  ?___wmul 0070  
             _lcd_output 063A                ?_lcd_data 0070                  _adc_low 0047  
                ___lwdiv 05F6                  ___lwmod 05BC                  __ptext1 063A  
                __ptext2 0558                  __ptext3 05BC                  __ptext4 05F6  
                __ptext5 069F                  __ptext6 0580                  __ptext7 0597  
                _lcd_com 0580               ??_lcd_data 0070     end_of_initialization 07FC  
            ?_lcd_output 0034           __end_of___wmul 05BC      start_initialization 07E7  
               ??___wmul 0074               init_fetch0 0545              __pdataBANK0 0020  
              ___latbits 0002            __pcstackBANK0 0034         ___lwdiv@dividend 0078  
               ?___lwdiv 0076                 ?___lwmod 0070                 ?_lcd_com 0070  
       ___lwdiv@quotient 007A           ___wmul@product 0074                lcd_data@i 0072  
      ___wmul@multiplier 0070             ??_lcd_output 007D       __end_of_lcd_output 069F  
               _adc_high 0045          ___lwdiv@divisor 0076          ___lwdiv@counter 007C  
               _lcd_data 0558                 lcd_com@i 0072                 init_ram0 0549  
       ___lwmod@dividend 0072          ___lwmod@divisor 0070          ___lwmod@counter 0074  
