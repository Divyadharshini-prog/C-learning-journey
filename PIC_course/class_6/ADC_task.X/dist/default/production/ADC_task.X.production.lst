

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Tue Sep 03 23:13:50 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    21                           	dabs	1,0x7E,2
    22     0000                     
    23                           ; Generated 12/10/2023 GMT
    24                           ; 
    25                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution. Publication is not required when
    39                           ;        this file is used in an embedded application.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F877A Definitions
    55                           ; 
    56                           ; SFR Addresses
    57     0000                     	;# 
    58     0001                     	;# 
    59     0002                     	;# 
    60     0003                     	;# 
    61     0004                     	;# 
    62     0005                     	;# 
    63     0006                     	;# 
    64     0007                     	;# 
    65     0008                     	;# 
    66     0009                     	;# 
    67     000A                     	;# 
    68     000B                     	;# 
    69     000C                     	;# 
    70     000D                     	;# 
    71     000E                     	;# 
    72     000E                     	;# 
    73     000F                     	;# 
    74     0010                     	;# 
    75     0011                     	;# 
    76     0012                     	;# 
    77     0013                     	;# 
    78     0014                     	;# 
    79     0015                     	;# 
    80     0015                     	;# 
    81     0016                     	;# 
    82     0017                     	;# 
    83     0018                     	;# 
    84     0019                     	;# 
    85     001A                     	;# 
    86     001B                     	;# 
    87     001B                     	;# 
    88     001C                     	;# 
    89     001D                     	;# 
    90     001E                     	;# 
    91     001F                     	;# 
    92     0081                     	;# 
    93     0085                     	;# 
    94     0086                     	;# 
    95     0087                     	;# 
    96     0088                     	;# 
    97     0089                     	;# 
    98     008C                     	;# 
    99     008D                     	;# 
   100     008E                     	;# 
   101     0091                     	;# 
   102     0092                     	;# 
   103     0093                     	;# 
   104     0094                     	;# 
   105     0098                     	;# 
   106     0099                     	;# 
   107     009C                     	;# 
   108     009D                     	;# 
   109     009E                     	;# 
   110     009F                     	;# 
   111     010C                     	;# 
   112     010D                     	;# 
   113     010E                     	;# 
   114     010F                     	;# 
   115     018C                     	;# 
   116     018D                     	;# 
   117     0000                     	;# 
   118     0001                     	;# 
   119     0002                     	;# 
   120     0003                     	;# 
   121     0004                     	;# 
   122     0005                     	;# 
   123     0006                     	;# 
   124     0007                     	;# 
   125     0008                     	;# 
   126     0009                     	;# 
   127     000A                     	;# 
   128     000B                     	;# 
   129     000C                     	;# 
   130     000D                     	;# 
   131     000E                     	;# 
   132     000E                     	;# 
   133     000F                     	;# 
   134     0010                     	;# 
   135     0011                     	;# 
   136     0012                     	;# 
   137     0013                     	;# 
   138     0014                     	;# 
   139     0015                     	;# 
   140     0015                     	;# 
   141     0016                     	;# 
   142     0017                     	;# 
   143     0018                     	;# 
   144     0019                     	;# 
   145     001A                     	;# 
   146     001B                     	;# 
   147     001B                     	;# 
   148     001C                     	;# 
   149     001D                     	;# 
   150     001E                     	;# 
   151     001F                     	;# 
   152     0081                     	;# 
   153     0085                     	;# 
   154     0086                     	;# 
   155     0087                     	;# 
   156     0088                     	;# 
   157     0089                     	;# 
   158     008C                     	;# 
   159     008D                     	;# 
   160     008E                     	;# 
   161     0091                     	;# 
   162     0092                     	;# 
   163     0093                     	;# 
   164     0094                     	;# 
   165     0098                     	;# 
   166     0099                     	;# 
   167     009C                     	;# 
   168     009D                     	;# 
   169     009E                     	;# 
   170     009F                     	;# 
   171     010C                     	;# 
   172     010D                     	;# 
   173     010E                     	;# 
   174     010F                     	;# 
   175     018C                     	;# 
   176     018D                     	;# 
   177                           
   178                           	psect	idataBANK0
   179     04E3                     __pidataBANK0:
   180                           
   181                           ;initializer for _msg_2
   182     04E3  3441               	retlw	65
   183     04E4  3444               	retlw	68
   184     04E5  3443               	retlw	67
   185     04E6  3420               	retlw	32
   186     04E7  3463               	retlw	99
   187     04E8  3461               	retlw	97
   188     04E9  346C               	retlw	108
   189     04EA  343A               	retlw	58
   190     04EB  3420               	retlw	32
   191     04EC  3400               	retlw	0
   192                           
   193                           ;initializer for _msg_1
   194     04ED  3441               	retlw	65
   195     04EE  3444               	retlw	68
   196     04EF  3443               	retlw	67
   197     04F0  3420               	retlw	32
   198     04F1  3472               	retlw	114
   199     04F2  3461               	retlw	97
   200     04F3  3477               	retlw	119
   201     04F4  343A               	retlw	58
   202     04F5  3420               	retlw	32
   203     04F6  3400               	retlw	0
   204     0008                     _PORTD	set	8
   205     0007                     _PORTC	set	7
   206     001E                     _ADRESH	set	30
   207     001F                     _ADCON0	set	31
   208     009F                     _ADCON1	set	159
   209     0088                     _TRISD	set	136
   210     0087                     _TRISC	set	135
   211     0085                     _TRISA	set	133
   212     009E                     _ADRESL	set	158
   213                           
   214                           	psect	cinit
   215     07E7                     start_initialization:	
   216                           ; #config settings
   217                           
   218     07E7                     __initialization:
   219                           
   220                           ; Initialize objects allocated to BANK0
   221     07E7  1383               	bcf	3,7	;select IRP bank0
   222     07E8  3034               	movlw	low (__pdataBANK0+20)
   223     07E9  00FD               	movwf	btemp+-1
   224     07EA  3004               	movlw	high __pidataBANK0
   225     07EB  00FE               	movwf	btemp
   226     07EC  30E3               	movlw	low __pidataBANK0
   227     07ED  00FF               	movwf	btemp+1
   228     07EE  3020               	movlw	low __pdataBANK0
   229     07EF  0084               	movwf	4
   230     07F0  120A  118A  24C0  120A  118A  	fcall	init_ram0
   231                           
   232                           ; Clear objects allocated to BANK0
   233     07F5  01C5               	clrf	__pbssBANK0& (0+127)
   234     07F6  01C6               	clrf	(__pbssBANK0+1)& (0+127)
   235     07F7  01C7               	clrf	(__pbssBANK0+2)& (0+127)
   236     07F8  01C8               	clrf	(__pbssBANK0+3)& (0+127)
   237     07F9  01C9               	clrf	(__pbssBANK0+4)& (0+127)
   238     07FA  01CA               	clrf	(__pbssBANK0+5)& (0+127)
   239     07FB  01CB               	clrf	(__pbssBANK0+6)& (0+127)
   240     07FC                     end_of_initialization:	
   241                           ;End of C runtime variable initialization code
   242                           
   243     07FC                     __end_of__initialization:
   244     07FC  0183               	clrf	3
   245     07FD  120A  118A  2F00   	ljmp	_main	;jump to C main() function
   246                           
   247                           	psect	bssBANK0
   248     0045                     __pbssBANK0:
   249     0045                     _result:
   250     0045                     	ds	2
   251     0047                     _adc_high:
   252     0047                     	ds	2
   253     0049                     _adc_low:
   254     0049                     	ds	2
   255     004B                     _volt:
   256     004B                     	ds	1
   257                           
   258                           	psect	dataBANK0
   259     0020                     __pdataBANK0:
   260     0020                     _msg_2:
   261     0020                     	ds	10
   262     002A                     _msg_1:
   263     002A                     	ds	10
   264                           
   265                           	psect	inittext
   266     04BC                     init_fetch0:	
   267                           ;	Called with low address in FSR and high address in W
   268                           
   269     04BC  087E               	movf	btemp,w
   270     04BD  008A               	movwf	10
   271     04BE  087F               	movf	btemp+1,w
   272     04BF  0082               	movwf	2
   273     04C0                     init_ram0:	
   274                           ;Called with:
   275                           ;	high address of idata address in btemp 
   276                           ;	low address of idata address in btemp+1 
   277                           ;	low address of data in FSR
   278                           ;	high address + 1 of data in btemp-1
   279                           
   280     04C0  120A  118A  24BC  120A  118A  	fcall	init_fetch0
   281     04C5  0080               	movwf	0
   282     04C6  0A84               	incf	4,f
   283     04C7  0804               	movf	4,w
   284     04C8  067D               	xorwf	btemp+-1,w
   285     04C9  1903               	btfsc	3,2
   286     04CA  3400               	retlw	0
   287     04CB  0AFF               	incf	btemp+1,f
   288     04CC  1903               	btfsc	3,2
   289     04CD  0AFE               	incf	btemp,f
   290     04CE  2CC0               	goto	init_ram0
   291                           
   292                           	psect	cstackCOMMON
   293     0070                     __pcstackCOMMON:
   294     0070                     ?_init:
   295     0070                     ?_lcd_com:	
   296                           ; 1 bytes @ 0x0
   297                           
   298     0070                     ??_lcd_com:	
   299                           ; 1 bytes @ 0x0
   300                           
   301     0070                     ?_lcd_data:	
   302                           ; 1 bytes @ 0x0
   303                           
   304     0070                     ??_lcd_data:	
   305                           ; 1 bytes @ 0x0
   306                           
   307     0070                     ?_main:	
   308                           ; 1 bytes @ 0x0
   309                           
   310     0070                     ?___lwdiv:	
   311                           ; 1 bytes @ 0x0
   312                           
   313     0070                     ?___lwmod:	
   314                           ; 2 bytes @ 0x0
   315                           
   316     0070                     ?___lmul:	
   317                           ; 2 bytes @ 0x0
   318                           
   319     0070                     ___lwdiv@divisor:	
   320                           ; 4 bytes @ 0x0
   321                           
   322     0070                     ___lwmod@divisor:	
   323                           ; 2 bytes @ 0x0
   324                           
   325     0070                     ___lmul@multiplier:	
   326                           ; 2 bytes @ 0x0
   327                           
   328                           
   329                           ; 4 bytes @ 0x0
   330     0070                     	ds	2
   331     0072                     lcd_com@i:
   332     0072                     lcd_data@i:	
   333                           ; 1 bytes @ 0x2
   334                           
   335     0072                     ___lwdiv@dividend:	
   336                           ; 1 bytes @ 0x2
   337                           
   338     0072                     ___lwmod@dividend:	
   339                           ; 2 bytes @ 0x2
   340                           
   341                           
   342                           ; 2 bytes @ 0x2
   343     0072                     	ds	1
   344     0073                     ??_init:
   345                           
   346                           ; 1 bytes @ 0x3
   347     0073                     	ds	1
   348     0074                     ??___lwdiv:
   349     0074                     ??___lwmod:	
   350                           ; 1 bytes @ 0x4
   351                           
   352     0074                     ___lwmod@counter:	
   353                           ; 1 bytes @ 0x4
   354                           
   355     0074                     ___lwdiv@quotient:	
   356                           ; 1 bytes @ 0x4
   357                           
   358     0074                     ___lmul@multiplicand:	
   359                           ; 2 bytes @ 0x4
   360                           
   361                           
   362                           ; 4 bytes @ 0x4
   363     0074                     	ds	2
   364     0076                     ___lwdiv@counter:
   365                           
   366                           ; 1 bytes @ 0x6
   367     0076                     	ds	1
   368     0077                     ?_lcd_output:
   369     0077                     lcd_output@i:	
   370                           ; 1 bytes @ 0x7
   371                           
   372                           
   373                           ; 2 bytes @ 0x7
   374     0077                     	ds	1
   375     0078                     ??___lmul:
   376                           
   377                           ; 1 bytes @ 0x8
   378     0078                     	ds	1
   379     0079                     ??_lcd_output:
   380     0079                     ___lmul@product:	
   381                           ; 1 bytes @ 0x9
   382                           
   383                           
   384                           ; 4 bytes @ 0x9
   385     0079                     	ds	4
   386     007D                     ??___lldiv:
   387                           
   388                           ; 1 bytes @ 0xD
   389     007D                     	ds	1
   390                           
   391                           	psect	cstackBANK0
   392     0034                     __pcstackBANK0:
   393     0034                     ?___lldiv:
   394     0034                     ___lldiv@divisor:	
   395                           ; 4 bytes @ 0x0
   396                           
   397     0034                     lcd_output@k:	
   398                           ; 4 bytes @ 0x0
   399                           
   400                           
   401                           ; 5 bytes @ 0x0
   402     0034                     	ds	4
   403     0038                     ___lldiv@dividend:
   404                           
   405                           ; 4 bytes @ 0x4
   406     0038                     	ds	1
   407     0039                     lcd_output@j:
   408                           
   409                           ; 1 bytes @ 0x5
   410     0039                     	ds	3
   411     003C                     ___lldiv@quotient:
   412                           
   413                           ; 4 bytes @ 0x8
   414     003C                     	ds	4
   415     0040                     ___lldiv@counter:
   416                           
   417                           ; 1 bytes @ 0xC
   418     0040                     	ds	1
   419     0041                     ??_main:
   420                           
   421                           ; 1 bytes @ 0xD
   422     0041                     	ds	2
   423     0043                     main@i:
   424                           
   425                           ; 2 bytes @ 0xF
   426     0043                     	ds	2
   427                           
   428                           	psect	maintext
   429     0700                     __pmaintext:	
   430 ;;
   431 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   432 ;;
   433 ;; *************** function _main *****************
   434 ;; Defined at:
   435 ;;		line 36 in file "ADCtask.c"
   436 ;; Parameters:    Size  Location     Type
   437 ;;		None
   438 ;; Auto vars:     Size  Location     Type
   439 ;;  i               2   15[BANK0 ] int 
   440 ;; Return value:  Size  Location     Type
   441 ;;                  1    wreg      void 
   442 ;; Registers used:
   443 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   444 ;; Tracked objects:
   445 ;;		On entry : B00/0
   446 ;;		On exit  : 0/0
   447 ;;		Unchanged: 0/0
   448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   449 ;;      Params:         0       0       0       0       0
   450 ;;      Locals:         0       2       0       0       0
   451 ;;      Temps:          0       2       0       0       0
   452 ;;      Totals:         0       4       0       0       0
   453 ;;Total ram usage:        4 bytes
   454 ;; Hardware stack levels required when called: 2
   455 ;; This function calls:
   456 ;;		___lldiv
   457 ;;		___lmul
   458 ;;		_init
   459 ;;		_lcd_com
   460 ;;		_lcd_data
   461 ;;		_lcd_output
   462 ;; This function is called by:
   463 ;;		Startup code after reset
   464 ;; This function uses a non-reentrant model
   465 ;;
   466                           
   467     0700                     _main:	
   468                           ;psect for function _main
   469                           
   470     0700                     l966:	
   471                           ;incstack = 0
   472                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   473                           
   474                           
   475                           ;ADCtask.c: 37:     int i;;ADCtask.c: 38:     init();
   476     0700  120A  118A  268F  120A  118A  	fcall	_init
   477                           
   478                           ;ADCtask.c: 39:     lcd_com(0x80);
   479     0705  3080               	movlw	128
   480     0706  120A  118A  24F7  120A  118A  	fcall	_lcd_com
   481     070B                     l968:
   482                           
   483                           ;ADCtask.c: 40:     for(i = 0; i < 9; i++) {
   484     070B  1283               	bcf	3,5	;RP0=0, select bank0
   485     070C  1303               	bcf	3,6	;RP1=0, select bank0
   486     070D  01C3               	clrf	main@i
   487     070E  01C4               	clrf	main@i+1
   488     070F                     l974:
   489                           
   490                           ;ADCtask.c: 41:         lcd_data(msg_1[i]);
   491     070F  1283               	bcf	3,5	;RP0=0, select bank0
   492     0710  1303               	bcf	3,6	;RP1=0, select bank0
   493     0711  0843               	movf	main@i,w
   494     0712  3E2A               	addlw	(low (_msg_1| 0))& (0+255)
   495     0713  0084               	movwf	4
   496     0714  1383               	bcf	3,7	;select IRP bank0
   497     0715  0800               	movf	0,w
   498     0716  120A  118A  24CF  120A  118A  	fcall	_lcd_data
   499     071B                     l976:
   500                           
   501                           ;ADCtask.c: 42:     }
   502     071B  3001               	movlw	1
   503     071C  1283               	bcf	3,5	;RP0=0, select bank0
   504     071D  1303               	bcf	3,6	;RP1=0, select bank0
   505     071E  07C3               	addwf	main@i,f
   506     071F  1803               	skipnc
   507     0720  0AC4               	incf	main@i+1,f
   508     0721  3000               	movlw	0
   509     0722  07C4               	addwf	main@i+1,f
   510     0723                     l978:
   511     0723  0844               	movf	main@i+1,w
   512     0724  3A80               	xorlw	128
   513     0725  00FF               	movwf	btemp+1
   514     0726  3080               	movlw	128
   515     0727  027F               	subwf	btemp+1,w
   516     0728  1D03               	skipz
   517     0729  2F2C               	goto	u605
   518     072A  3009               	movlw	9
   519     072B  0243               	subwf	main@i,w
   520     072C                     u605:
   521     072C  1C03               	skipc
   522     072D  2F2F               	goto	u601
   523     072E  2F30               	goto	u600
   524     072F                     u601:
   525     072F  2F0F               	goto	l974
   526     0730                     u600:
   527     0730                     l980:
   528                           
   529                           ;ADCtask.c: 43:     lcd_com(0xc0);
   530     0730  30C0               	movlw	192
   531     0731  120A  118A  24F7  120A  118A  	fcall	_lcd_com
   532     0736                     l982:
   533                           
   534                           ;ADCtask.c: 44:     for(i = 0; i < 9; i++) {
   535     0736  1283               	bcf	3,5	;RP0=0, select bank0
   536     0737  1303               	bcf	3,6	;RP1=0, select bank0
   537     0738  01C3               	clrf	main@i
   538     0739  01C4               	clrf	main@i+1
   539     073A                     l988:
   540                           
   541                           ;ADCtask.c: 45:         lcd_data(msg_2[i]);
   542     073A  1283               	bcf	3,5	;RP0=0, select bank0
   543     073B  1303               	bcf	3,6	;RP1=0, select bank0
   544     073C  0843               	movf	main@i,w
   545     073D  3E20               	addlw	(low (_msg_2| 0))& (0+255)
   546     073E  0084               	movwf	4
   547     073F  1383               	bcf	3,7	;select IRP bank0
   548     0740  0800               	movf	0,w
   549     0741  120A  118A  24CF  120A  118A  	fcall	_lcd_data
   550     0746                     l990:
   551                           
   552                           ;ADCtask.c: 46:     }
   553     0746  3001               	movlw	1
   554     0747  1283               	bcf	3,5	;RP0=0, select bank0
   555     0748  1303               	bcf	3,6	;RP1=0, select bank0
   556     0749  07C3               	addwf	main@i,f
   557     074A  1803               	skipnc
   558     074B  0AC4               	incf	main@i+1,f
   559     074C  3000               	movlw	0
   560     074D  07C4               	addwf	main@i+1,f
   561     074E                     l992:
   562     074E  0844               	movf	main@i+1,w
   563     074F  3A80               	xorlw	128
   564     0750  00FF               	movwf	btemp+1
   565     0751  3080               	movlw	128
   566     0752  027F               	subwf	btemp+1,w
   567     0753  1D03               	skipz
   568     0754  2F57               	goto	u615
   569     0755  3009               	movlw	9
   570     0756  0243               	subwf	main@i,w
   571     0757                     u615:
   572     0757  1C03               	skipc
   573     0758  2F5A               	goto	u611
   574     0759  2F5B               	goto	u610
   575     075A                     u611:
   576     075A  2F3A               	goto	l988
   577     075B                     u610:
   578     075B                     l994:
   579                           
   580                           ;ADCtask.c: 48:         ADCON0 = 0x91;
   581     075B  3091               	movlw	145
   582     075C  1283               	bcf	3,5	;RP0=0, select bank0
   583     075D  1303               	bcf	3,6	;RP1=0, select bank0
   584     075E  009F               	movwf	31	;volatile
   585     075F                     l996:
   586                           
   587                           ;ADCtask.c: 49:         ADCON0 |= 0x04;
   588     075F  151F               	bsf	31,2	;volatile
   589     0760                     l50:	
   590                           ;ADCtask.c: 50:         while (ADCON0 & 0x04);
   591                           
   592     0760  191F               	btfsc	31,2	;volatile
   593     0761  2F63               	goto	u621
   594     0762  2F64               	goto	u620
   595     0763                     u621:
   596     0763  2F60               	goto	l50
   597     0764                     u620:
   598     0764                     l998:
   599                           
   600                           ;ADCtask.c: 51:         adc_high = ADRESH;
   601     0764  081E               	movf	30,w	;volatile
   602     0765  00C1               	movwf	??_main
   603     0766  01C2               	clrf	??_main+1
   604     0767  0841               	movf	??_main,w
   605     0768  00C7               	movwf	_adc_high
   606     0769  0842               	movf	??_main+1,w
   607     076A  00C8               	movwf	_adc_high+1
   608                           
   609                           ;ADCtask.c: 52:         adc_low = ADRESL;
   610     076B  1683               	bsf	3,5	;RP0=1, select bank1
   611     076C  1303               	bcf	3,6	;RP1=0, select bank1
   612     076D  081E               	movf	30,w	;volatile
   613     076E  1283               	bcf	3,5	;RP0=0, select bank0
   614     076F  1303               	bcf	3,6	;RP1=0, select bank0
   615     0770  00C1               	movwf	??_main
   616     0771  01C2               	clrf	??_main+1
   617     0772  0841               	movf	??_main,w
   618     0773  00C9               	movwf	_adc_low
   619     0774  0842               	movf	??_main+1,w
   620     0775  00CA               	movwf	_adc_low+1
   621                           
   622                           ;ADCtask.c: 53:         result = (adc_high << 8) | adc_low;
   623     0776  0847               	movf	_adc_high,w
   624     0777  00C2               	movwf	??_main+1
   625     0778  01C1               	clrf	??_main
   626     0779  0849               	movf	_adc_low,w
   627     077A  0441               	iorwf	??_main,w
   628     077B  00C5               	movwf	_result
   629     077C  084A               	movf	_adc_low+1,w
   630     077D  0442               	iorwf	??_main+1,w
   631     077E  00C6               	movwf	_result+1
   632     077F                     l1000:
   633                           
   634                           ;ADCtask.c: 56:         volt = (unsigned char)(((unsigned long)result * 100) / 1023);
   635     077F  3000               	movlw	0
   636     0780  00B7               	movwf	___lldiv@divisor+3
   637     0781  3000               	movlw	0
   638     0782  00B6               	movwf	___lldiv@divisor+2
   639     0783  3003               	movlw	3
   640     0784  00B5               	movwf	___lldiv@divisor+1
   641     0785  30FF               	movlw	255
   642     0786  00B4               	movwf	___lldiv@divisor
   643     0787  0845               	movf	_result,w
   644     0788  00F0               	movwf	___lmul@multiplier
   645     0789  0846               	movf	_result+1,w
   646     078A  00F1               	movwf	___lmul@multiplier+1
   647     078B  01F2               	clrf	___lmul@multiplier+2
   648     078C  01F3               	clrf	___lmul@multiplier+3
   649     078D  3000               	movlw	0
   650     078E  00F7               	movwf	___lmul@multiplicand+3
   651     078F  3000               	movlw	0
   652     0790  00F6               	movwf	___lmul@multiplicand+2
   653     0791  3000               	movlw	0
   654     0792  00F5               	movwf	___lmul@multiplicand+1
   655     0793  3064               	movlw	100
   656     0794  00F4               	movwf	___lmul@multiplicand
   657     0795  120A  118A  258C  120A  118A  	fcall	___lmul
   658     079A  0873               	movf	?___lmul+3,w
   659     079B  1283               	bcf	3,5	;RP0=0, select bank0
   660     079C  1303               	bcf	3,6	;RP1=0, select bank0
   661     079D  00BB               	movwf	___lldiv@dividend+3
   662     079E  0872               	movf	?___lmul+2,w
   663     079F  00BA               	movwf	___lldiv@dividend+2
   664     07A0  0871               	movf	?___lmul+1,w
   665     07A1  00B9               	movwf	___lldiv@dividend+1
   666     07A2  0870               	movf	?___lmul,w
   667     07A3  00B8               	movwf	___lldiv@dividend
   668     07A4  120A  118A  2627  120A  118A  	fcall	___lldiv
   669     07A9  1283               	bcf	3,5	;RP0=0, select bank0
   670     07AA  1303               	bcf	3,6	;RP1=0, select bank0
   671     07AB  0834               	movf	?___lldiv,w
   672     07AC  00CB               	movwf	_volt
   673     07AD                     l1002:
   674                           
   675                           ;ADCtask.c: 58:         lcd_com(0x89);
   676     07AD  3089               	movlw	137
   677     07AE  120A  118A  24F7  120A  118A  	fcall	_lcd_com
   678     07B3                     l1004:
   679                           
   680                           ;ADCtask.c: 59:         lcd_output(result);
   681     07B3  1283               	bcf	3,5	;RP0=0, select bank0
   682     07B4  1303               	bcf	3,6	;RP1=0, select bank0
   683     07B5  0846               	movf	_result+1,w
   684     07B6  00F8               	movwf	lcd_output@i+1
   685     07B7  0845               	movf	_result,w
   686     07B8  00F7               	movwf	lcd_output@i
   687     07B9  120A  118A  25D2  120A  118A  	fcall	_lcd_output
   688     07BE                     l1006:
   689                           
   690                           ;ADCtask.c: 61:         lcd_com(0xc9);
   691     07BE  30C9               	movlw	201
   692     07BF  120A  118A  24F7  120A  118A  	fcall	_lcd_com
   693     07C4                     l1008:
   694                           
   695                           ;ADCtask.c: 62:         lcd_output(volt);
   696     07C4  1283               	bcf	3,5	;RP0=0, select bank0
   697     07C5  1303               	bcf	3,6	;RP1=0, select bank0
   698     07C6  084B               	movf	_volt,w
   699     07C7  00C1               	movwf	??_main
   700     07C8  01C2               	clrf	??_main+1
   701     07C9  0841               	movf	??_main,w
   702     07CA  00F7               	movwf	lcd_output@i
   703     07CB  0842               	movf	??_main+1,w
   704     07CC  00F8               	movwf	lcd_output@i+1
   705     07CD  120A  118A  25D2  120A  118A  	fcall	_lcd_output
   706     07D2                     l1010:
   707                           
   708                           ;ADCtask.c: 64:         lcd_data('V');
   709     07D2  3056               	movlw	86
   710     07D3  120A  118A  24CF  120A  118A  	fcall	_lcd_data
   711                           
   712                           ;ADCtask.c: 66:         _delay((unsigned long)((100)*(6000000/4000.0)));
   713     07D8  30C3               	movlw	195
   714     07D9  1283               	bcf	3,5	;RP0=0, select bank0
   715     07DA  1303               	bcf	3,6	;RP1=0, select bank0
   716     07DB  00C2               	movwf	??_main+1
   717     07DC  30CC               	movlw	204
   718     07DD  00C1               	movwf	??_main
   719     07DE                     u637:
   720     07DE  0BC1               	decfsz	??_main,f
   721     07DF  2FDE               	goto	u637
   722     07E0  0BC2               	decfsz	??_main+1,f
   723     07E1  2FDE               	goto	u637
   724     07E2  0000               	nop
   725     07E3  2F5B               	goto	l994
   726     07E4  120A  118A  2800   	ljmp	start
   727     07E7                     __end_of_main:
   728                           
   729                           	psect	text1
   730     05D2                     __ptext1:	
   731 ;; *************** function _lcd_output *****************
   732 ;; Defined at:
   733 ;;		line 70 in file "ADCtask.c"
   734 ;; Parameters:    Size  Location     Type
   735 ;;  i               2    7[COMMON] unsigned int 
   736 ;; Auto vars:     Size  Location     Type
   737 ;;  k               5    0[BANK0 ] unsigned char [5]
   738 ;;  j               1    5[BANK0 ] unsigned char 
   739 ;;  s               1    0        unsigned char 
   740 ;; Return value:  Size  Location     Type
   741 ;;                  1    wreg      void 
   742 ;; Registers used:
   743 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   744 ;; Tracked objects:
   745 ;;		On entry : 0/0
   746 ;;		On exit  : 0/0
   747 ;;		Unchanged: 0/0
   748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   749 ;;      Params:         2       0       0       0       0
   750 ;;      Locals:         0       6       0       0       0
   751 ;;      Temps:          0       0       0       0       0
   752 ;;      Totals:         2       6       0       0       0
   753 ;;Total ram usage:        8 bytes
   754 ;; Hardware stack levels used: 1
   755 ;; Hardware stack levels required when called: 1
   756 ;; This function calls:
   757 ;;		___lwdiv
   758 ;;		___lwmod
   759 ;;		_lcd_data
   760 ;; This function is called by:
   761 ;;		_main
   762 ;; This function uses a non-reentrant model
   763 ;;
   764                           
   765     05D2                     _lcd_output:	
   766                           ;psect for function _lcd_output
   767                           
   768     05D2                     l906:	
   769                           ;incstack = 0
   770                           ; Regs used in _lcd_output: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   771                           
   772                           
   773                           ;ADCtask.c: 71:     unsigned char s, j = 0;
   774     05D2  1283               	bcf	3,5	;RP0=0, select bank0
   775     05D3  1303               	bcf	3,6	;RP1=0, select bank0
   776     05D4  01B9               	clrf	lcd_output@j
   777                           
   778                           ;ADCtask.c: 72:     unsigned char k[5];;ADCtask.c: 75:     while (i != 0) {
   779     05D5  2E03               	goto	l914
   780     05D6                     l908:
   781                           
   782                           ;ADCtask.c: 76:         k[j++] = (i % 10) + '0';
   783     05D6  1283               	bcf	3,5	;RP0=0, select bank0
   784     05D7  1303               	bcf	3,6	;RP1=0, select bank0
   785     05D8  0839               	movf	lcd_output@j,w
   786     05D9  3E34               	addlw	(low (lcd_output@k| 0))& (0+255)
   787     05DA  0084               	movwf	4
   788     05DB  300A               	movlw	10
   789     05DC  00F0               	movwf	___lwmod@divisor
   790     05DD  3000               	movlw	0
   791     05DE  00F1               	movwf	___lwmod@divisor+1
   792     05DF  0878               	movf	lcd_output@i+1,w
   793     05E0  00F3               	movwf	___lwmod@dividend+1
   794     05E1  0877               	movf	lcd_output@i,w
   795     05E2  00F2               	movwf	___lwmod@dividend
   796     05E3  120A  118A  250E  120A  118A  	fcall	___lwmod
   797     05E8  0870               	movf	?___lwmod,w
   798     05E9  3E30               	addlw	48
   799     05EA  1383               	bcf	3,7	;select IRP bank0
   800     05EB  0080               	movwf	0
   801     05EC                     l910:
   802     05EC  3001               	movlw	1
   803     05ED  00FF               	movwf	btemp+1
   804     05EE  087F               	movf	btemp+1,w
   805     05EF  1283               	bcf	3,5	;RP0=0, select bank0
   806     05F0  1303               	bcf	3,6	;RP1=0, select bank0
   807     05F1  07B9               	addwf	lcd_output@j,f
   808     05F2                     l912:
   809                           
   810                           ;ADCtask.c: 77:         i /= 10;
   811     05F2  300A               	movlw	10
   812     05F3  00F0               	movwf	___lwdiv@divisor
   813     05F4  3000               	movlw	0
   814     05F5  00F1               	movwf	___lwdiv@divisor+1
   815     05F6  0878               	movf	lcd_output@i+1,w
   816     05F7  00F3               	movwf	___lwdiv@dividend+1
   817     05F8  0877               	movf	lcd_output@i,w
   818     05F9  00F2               	movwf	___lwdiv@dividend
   819     05FA  120A  118A  2548  120A  118A  	fcall	___lwdiv
   820     05FF  0871               	movf	?___lwdiv+1,w
   821     0600  00F8               	movwf	lcd_output@i+1
   822     0601  0870               	movf	?___lwdiv,w
   823     0602  00F7               	movwf	lcd_output@i
   824     0603                     l914:
   825                           
   826                           ;ADCtask.c: 75:     while (i != 0) {
   827     0603  0877               	movf	lcd_output@i,w
   828     0604  0478               	iorwf	lcd_output@i+1,w
   829     0605  1D03               	btfss	3,2
   830     0606  2E08               	goto	u451
   831     0607  2E09               	goto	u450
   832     0608                     u451:
   833     0608  2DD6               	goto	l908
   834     0609                     u450:
   835     0609                     l916:
   836                           
   837                           ;ADCtask.c: 81:     for (j--; j < 255; j--) {
   838     0609  3001               	movlw	1
   839     060A  1283               	bcf	3,5	;RP0=0, select bank0
   840     060B  1303               	bcf	3,6	;RP1=0, select bank0
   841     060C  02B9               	subwf	lcd_output@j,f
   842     060D  0A39               	incf	lcd_output@j,w
   843     060E  1D03               	btfss	3,2
   844     060F  2E11               	goto	u461
   845     0610  2E12               	goto	u460
   846     0611                     u461:
   847     0611  2E13               	goto	l920
   848     0612                     u460:
   849     0612  2E26               	goto	l63
   850     0613                     l920:
   851                           
   852                           ;ADCtask.c: 82:         lcd_data(k[j]);
   853     0613  0839               	movf	lcd_output@j,w
   854     0614  3E34               	addlw	(low (lcd_output@k| 0))& (0+255)
   855     0615  0084               	movwf	4
   856     0616  1383               	bcf	3,7	;select IRP bank0
   857     0617  0800               	movf	0,w
   858     0618  120A  118A  24CF  120A  118A  	fcall	_lcd_data
   859     061D                     l922:
   860                           
   861                           ;ADCtask.c: 83:     }
   862     061D  3001               	movlw	1
   863     061E  1283               	bcf	3,5	;RP0=0, select bank0
   864     061F  1303               	bcf	3,6	;RP1=0, select bank0
   865     0620  02B9               	subwf	lcd_output@j,f
   866     0621                     l924:
   867     0621  0A39               	incf	lcd_output@j,w
   868     0622  1D03               	btfss	3,2
   869     0623  2E25               	goto	u471
   870     0624  2E26               	goto	u470
   871     0625                     u471:
   872     0625  2E13               	goto	l920
   873     0626                     u470:
   874     0626                     l63:
   875     0626  0008               	return
   876     0627                     __end_of_lcd_output:
   877                           
   878                           	psect	text2
   879     04CF                     __ptext2:	
   880 ;; *************** function _lcd_data *****************
   881 ;; Defined at:
   882 ;;		line 116 in file "ADCtask.c"
   883 ;; Parameters:    Size  Location     Type
   884 ;;  i               1    wreg     unsigned char 
   885 ;; Auto vars:     Size  Location     Type
   886 ;;  i               1    2[COMMON] unsigned char 
   887 ;; Return value:  Size  Location     Type
   888 ;;                  1    wreg      void 
   889 ;; Registers used:
   890 ;;		wreg, status,2, status,0, btemp+1
   891 ;; Tracked objects:
   892 ;;		On entry : 0/0
   893 ;;		On exit  : 0/0
   894 ;;		Unchanged: 0/0
   895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   896 ;;      Params:         0       0       0       0       0
   897 ;;      Locals:         1       0       0       0       0
   898 ;;      Temps:          2       0       0       0       0
   899 ;;      Totals:         3       0       0       0       0
   900 ;;Total ram usage:        3 bytes
   901 ;; Hardware stack levels used: 1
   902 ;; This function calls:
   903 ;;		Nothing
   904 ;; This function is called by:
   905 ;;		_main
   906 ;;		_lcd_output
   907 ;; This function uses a non-reentrant model
   908 ;;
   909                           
   910     04CF                     _lcd_data:	
   911                           ;psect for function _lcd_data
   912                           
   913                           
   914                           ;incstack = 0
   915                           ; Regs used in _lcd_data: [wreg+status,2+status,0+btemp+1]
   916                           ;lcd_data@i stored from wreg
   917     04CF  00F2               	movwf	lcd_data@i
   918     04D0                     l822:
   919                           
   920                           ;ADCtask.c: 117:     PORTC |= 0x08;
   921     04D0  1283               	bcf	3,5	;RP0=0, select bank0
   922     04D1  1303               	bcf	3,6	;RP1=0, select bank0
   923     04D2  1587               	bsf	7,3	;volatile
   924     04D3                     l824:
   925                           
   926                           ;ADCtask.c: 118:     PORTD = i;
   927     04D3  0872               	movf	lcd_data@i,w
   928     04D4  0088               	movwf	8	;volatile
   929     04D5                     l826:
   930                           
   931                           ;ADCtask.c: 119:     PORTC |= 0x01;
   932     04D5  1407               	bsf	7,0	;volatile
   933     04D6                     l828:
   934                           
   935                           ;ADCtask.c: 120:     PORTC &= ~0x01;
   936     04D6  30FE               	movlw	254
   937     04D7  00FF               	movwf	btemp+1
   938     04D8  087F               	movf	btemp+1,w
   939     04D9  0587               	andwf	7,f	;volatile
   940     04DA                     l830:
   941                           
   942                           ;ADCtask.c: 121:     _delay((unsigned long)((100)*(6000000/4000.0)));
   943     04DA  30C3               	movlw	195
   944     04DB  00F1               	movwf	??_lcd_data+1
   945     04DC  30CD               	movlw	205
   946     04DD  00F0               	movwf	??_lcd_data
   947     04DE                     u647:
   948     04DE  0BF0               	decfsz	??_lcd_data,f
   949     04DF  2CDE               	goto	u647
   950     04E0  0BF1               	decfsz	??_lcd_data+1,f
   951     04E1  2CDE               	goto	u647
   952     04E2                     l72:
   953     04E2  0008               	return
   954     04E3                     __end_of_lcd_data:
   955                           
   956                           	psect	text3
   957     050E                     __ptext3:	
   958 ;; *************** function ___lwmod *****************
   959 ;; Defined at:
   960 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwmod.c"
   961 ;; Parameters:    Size  Location     Type
   962 ;;  divisor         2    0[COMMON] unsigned int 
   963 ;;  dividend        2    2[COMMON] unsigned int 
   964 ;; Auto vars:     Size  Location     Type
   965 ;;  counter         1    4[COMMON] unsigned char 
   966 ;; Return value:  Size  Location     Type
   967 ;;                  2    0[COMMON] unsigned int 
   968 ;; Registers used:
   969 ;;		wreg, status,2, status,0, btemp+1
   970 ;; Tracked objects:
   971 ;;		On entry : 0/0
   972 ;;		On exit  : 0/0
   973 ;;		Unchanged: 0/0
   974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   975 ;;      Params:         4       0       0       0       0
   976 ;;      Locals:         1       0       0       0       0
   977 ;;      Temps:          0       0       0       0       0
   978 ;;      Totals:         5       0       0       0       0
   979 ;;Total ram usage:        5 bytes
   980 ;; Hardware stack levels used: 1
   981 ;; This function calls:
   982 ;;		Nothing
   983 ;; This function is called by:
   984 ;;		_lcd_output
   985 ;; This function uses a non-reentrant model
   986 ;;
   987                           
   988     050E                     ___lwmod:	
   989                           ;psect for function ___lwmod
   990                           
   991     050E                     l858:	
   992                           ;incstack = 0
   993                           ; Regs used in ___lwmod: [wreg+status,2+status,0+btemp+1]
   994                           
   995     050E  0870               	movf	___lwmod@divisor,w
   996     050F  0471               	iorwf	___lwmod@divisor+1,w
   997     0510  1903               	btfsc	3,2
   998     0511  2D13               	goto	u391
   999     0512  2D14               	goto	u390
  1000     0513                     u391:
  1001     0513  2D43               	goto	l876
  1002     0514                     u390:
  1003     0514                     l860:
  1004     0514  01F4               	clrf	___lwmod@counter
  1005     0515  0AF4               	incf	___lwmod@counter,f
  1006     0516  2D22               	goto	l866
  1007     0517                     l862:
  1008     0517  3001               	movlw	1
  1009     0518                     u405:
  1010     0518  1003               	clrc
  1011     0519  0DF0               	rlf	___lwmod@divisor,f
  1012     051A  0DF1               	rlf	___lwmod@divisor+1,f
  1013     051B  3EFF               	addlw	-1
  1014     051C  1D03               	skipz
  1015     051D  2D18               	goto	u405
  1016     051E                     l864:
  1017     051E  3001               	movlw	1
  1018     051F  00FF               	movwf	btemp+1
  1019     0520  087F               	movf	btemp+1,w
  1020     0521  07F4               	addwf	___lwmod@counter,f
  1021     0522                     l866:
  1022     0522  1FF1               	btfss	___lwmod@divisor+1,7
  1023     0523  2D25               	goto	u411
  1024     0524  2D26               	goto	u410
  1025     0525                     u411:
  1026     0525  2D17               	goto	l862
  1027     0526                     u410:
  1028     0526                     l868:
  1029     0526  0871               	movf	___lwmod@divisor+1,w
  1030     0527  0273               	subwf	___lwmod@dividend+1,w
  1031     0528  1D03               	skipz
  1032     0529  2D2C               	goto	u425
  1033     052A  0870               	movf	___lwmod@divisor,w
  1034     052B  0272               	subwf	___lwmod@dividend,w
  1035     052C                     u425:
  1036     052C  1C03               	skipc
  1037     052D  2D2F               	goto	u421
  1038     052E  2D30               	goto	u420
  1039     052F                     u421:
  1040     052F  2D36               	goto	l872
  1041     0530                     u420:
  1042     0530                     l870:
  1043     0530  0870               	movf	___lwmod@divisor,w
  1044     0531  02F2               	subwf	___lwmod@dividend,f
  1045     0532  0871               	movf	___lwmod@divisor+1,w
  1046     0533  1C03               	skipc
  1047     0534  03F3               	decf	___lwmod@dividend+1,f
  1048     0535  02F3               	subwf	___lwmod@dividend+1,f
  1049     0536                     l872:
  1050     0536  3001               	movlw	1
  1051     0537                     u435:
  1052     0537  1003               	clrc
  1053     0538  0CF1               	rrf	___lwmod@divisor+1,f
  1054     0539  0CF0               	rrf	___lwmod@divisor,f
  1055     053A  3EFF               	addlw	-1
  1056     053B  1D03               	skipz
  1057     053C  2D37               	goto	u435
  1058     053D                     l874:
  1059     053D  3001               	movlw	1
  1060     053E  02F4               	subwf	___lwmod@counter,f
  1061     053F  1D03               	btfss	3,2
  1062     0540  2D42               	goto	u441
  1063     0541  2D43               	goto	u440
  1064     0542                     u441:
  1065     0542  2D26               	goto	l868
  1066     0543                     u440:
  1067     0543                     l876:
  1068     0543  0873               	movf	___lwmod@dividend+1,w
  1069     0544  00F1               	movwf	?___lwmod+1
  1070     0545  0872               	movf	___lwmod@dividend,w
  1071     0546  00F0               	movwf	?___lwmod
  1072     0547                     l448:
  1073     0547  0008               	return
  1074     0548                     __end_of___lwmod:
  1075                           
  1076                           	psect	text4
  1077     0548                     __ptext4:	
  1078 ;; *************** function ___lwdiv *****************
  1079 ;; Defined at:
  1080 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwdiv.c"
  1081 ;; Parameters:    Size  Location     Type
  1082 ;;  divisor         2    0[COMMON] unsigned int 
  1083 ;;  dividend        2    2[COMMON] unsigned int 
  1084 ;; Auto vars:     Size  Location     Type
  1085 ;;  quotient        2    4[COMMON] unsigned int 
  1086 ;;  counter         1    6[COMMON] unsigned char 
  1087 ;; Return value:  Size  Location     Type
  1088 ;;                  2    0[COMMON] unsigned int 
  1089 ;; Registers used:
  1090 ;;		wreg, status,2, status,0, btemp+1
  1091 ;; Tracked objects:
  1092 ;;		On entry : 0/0
  1093 ;;		On exit  : 0/0
  1094 ;;		Unchanged: 0/0
  1095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1096 ;;      Params:         4       0       0       0       0
  1097 ;;      Locals:         3       0       0       0       0
  1098 ;;      Temps:          0       0       0       0       0
  1099 ;;      Totals:         7       0       0       0       0
  1100 ;;Total ram usage:        7 bytes
  1101 ;; Hardware stack levels used: 1
  1102 ;; This function calls:
  1103 ;;		Nothing
  1104 ;; This function is called by:
  1105 ;;		_lcd_output
  1106 ;; This function uses a non-reentrant model
  1107 ;;
  1108                           
  1109     0548                     ___lwdiv:	
  1110                           ;psect for function ___lwdiv
  1111                           
  1112     0548                     l832:	
  1113                           ;incstack = 0
  1114                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  1115                           
  1116     0548  01F4               	clrf	___lwdiv@quotient
  1117     0549  01F5               	clrf	___lwdiv@quotient+1
  1118     054A                     l834:
  1119     054A  0870               	movf	___lwdiv@divisor,w
  1120     054B  0471               	iorwf	___lwdiv@divisor+1,w
  1121     054C  1903               	btfsc	3,2
  1122     054D  2D4F               	goto	u321
  1123     054E  2D50               	goto	u320
  1124     054F                     u321:
  1125     054F  2D87               	goto	l854
  1126     0550                     u320:
  1127     0550                     l836:
  1128     0550  01F6               	clrf	___lwdiv@counter
  1129     0551  0AF6               	incf	___lwdiv@counter,f
  1130     0552  2D5E               	goto	l842
  1131     0553                     l838:
  1132     0553  3001               	movlw	1
  1133     0554                     u335:
  1134     0554  1003               	clrc
  1135     0555  0DF0               	rlf	___lwdiv@divisor,f
  1136     0556  0DF1               	rlf	___lwdiv@divisor+1,f
  1137     0557  3EFF               	addlw	-1
  1138     0558  1D03               	skipz
  1139     0559  2D54               	goto	u335
  1140     055A                     l840:
  1141     055A  3001               	movlw	1
  1142     055B  00FF               	movwf	btemp+1
  1143     055C  087F               	movf	btemp+1,w
  1144     055D  07F6               	addwf	___lwdiv@counter,f
  1145     055E                     l842:
  1146     055E  1FF1               	btfss	___lwdiv@divisor+1,7
  1147     055F  2D61               	goto	u341
  1148     0560  2D62               	goto	u340
  1149     0561                     u341:
  1150     0561  2D53               	goto	l838
  1151     0562                     u340:
  1152     0562                     l844:
  1153     0562  3001               	movlw	1
  1154     0563                     u355:
  1155     0563  1003               	clrc
  1156     0564  0DF4               	rlf	___lwdiv@quotient,f
  1157     0565  0DF5               	rlf	___lwdiv@quotient+1,f
  1158     0566  3EFF               	addlw	-1
  1159     0567  1D03               	skipz
  1160     0568  2D63               	goto	u355
  1161     0569  0871               	movf	___lwdiv@divisor+1,w
  1162     056A  0273               	subwf	___lwdiv@dividend+1,w
  1163     056B  1D03               	skipz
  1164     056C  2D6F               	goto	u365
  1165     056D  0870               	movf	___lwdiv@divisor,w
  1166     056E  0272               	subwf	___lwdiv@dividend,w
  1167     056F                     u365:
  1168     056F  1C03               	skipc
  1169     0570  2D72               	goto	u361
  1170     0571  2D73               	goto	u360
  1171     0572                     u361:
  1172     0572  2D7A               	goto	l850
  1173     0573                     u360:
  1174     0573                     l846:
  1175     0573  0870               	movf	___lwdiv@divisor,w
  1176     0574  02F2               	subwf	___lwdiv@dividend,f
  1177     0575  0871               	movf	___lwdiv@divisor+1,w
  1178     0576  1C03               	skipc
  1179     0577  03F3               	decf	___lwdiv@dividend+1,f
  1180     0578  02F3               	subwf	___lwdiv@dividend+1,f
  1181     0579                     l848:
  1182     0579  1474               	bsf	___lwdiv@quotient,0
  1183     057A                     l850:
  1184     057A  3001               	movlw	1
  1185     057B                     u375:
  1186     057B  1003               	clrc
  1187     057C  0CF1               	rrf	___lwdiv@divisor+1,f
  1188     057D  0CF0               	rrf	___lwdiv@divisor,f
  1189     057E  3EFF               	addlw	-1
  1190     057F  1D03               	skipz
  1191     0580  2D7B               	goto	u375
  1192     0581                     l852:
  1193     0581  3001               	movlw	1
  1194     0582  02F6               	subwf	___lwdiv@counter,f
  1195     0583  1D03               	btfss	3,2
  1196     0584  2D86               	goto	u381
  1197     0585  2D87               	goto	u380
  1198     0586                     u381:
  1199     0586  2D62               	goto	l844
  1200     0587                     u380:
  1201     0587                     l854:
  1202     0587  0875               	movf	___lwdiv@quotient+1,w
  1203     0588  00F1               	movwf	?___lwdiv+1
  1204     0589  0874               	movf	___lwdiv@quotient,w
  1205     058A  00F0               	movwf	?___lwdiv
  1206     058B                     l438:
  1207     058B  0008               	return
  1208     058C                     __end_of___lwdiv:
  1209                           
  1210                           	psect	text5
  1211     068F                     __ptext5:	
  1212 ;; *************** function _init *****************
  1213 ;; Defined at:
  1214 ;;		line 86 in file "ADCtask.c"
  1215 ;; Parameters:    Size  Location     Type
  1216 ;;		None
  1217 ;; Auto vars:     Size  Location     Type
  1218 ;;		None
  1219 ;; Return value:  Size  Location     Type
  1220 ;;                  1    wreg      void 
  1221 ;; Registers used:
  1222 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1223 ;; Tracked objects:
  1224 ;;		On entry : 0/0
  1225 ;;		On exit  : 0/0
  1226 ;;		Unchanged: 0/0
  1227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1228 ;;      Params:         0       0       0       0       0
  1229 ;;      Locals:         0       0       0       0       0
  1230 ;;      Temps:          2       0       0       0       0
  1231 ;;      Totals:         2       0       0       0       0
  1232 ;;Total ram usage:        2 bytes
  1233 ;; Hardware stack levels used: 1
  1234 ;; Hardware stack levels required when called: 1
  1235 ;; This function calls:
  1236 ;;		_lcd_com
  1237 ;; This function is called by:
  1238 ;;		_main
  1239 ;; This function uses a non-reentrant model
  1240 ;;
  1241                           
  1242     068F                     _init:	
  1243                           ;psect for function _init
  1244                           
  1245     068F                     l880:	
  1246                           ;incstack = 0
  1247                           ; Regs used in _init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1248                           
  1249                           
  1250                           ;ADCtask.c: 87:     TRISA = 0x04;
  1251     068F  3004               	movlw	4
  1252     0690  1683               	bsf	3,5	;RP0=1, select bank1
  1253     0691  1303               	bcf	3,6	;RP1=0, select bank1
  1254     0692  0085               	movwf	5	;volatile
  1255     0693                     l882:
  1256                           
  1257                           ;ADCtask.c: 88:     TRISC = 0x00;
  1258     0693  0187               	clrf	7	;volatile
  1259     0694                     l884:
  1260                           
  1261                           ;ADCtask.c: 89:     TRISD = 0x00;
  1262     0694  0188               	clrf	8	;volatile
  1263                           
  1264                           ;ADCtask.c: 90:     ADCON0 = 0x91;
  1265     0695  3091               	movlw	145
  1266     0696  1283               	bcf	3,5	;RP0=0, select bank0
  1267     0697  1303               	bcf	3,6	;RP1=0, select bank0
  1268     0698  009F               	movwf	31	;volatile
  1269                           
  1270                           ;ADCtask.c: 91:     ADCON1 = 0x8E;
  1271     0699  308E               	movlw	142
  1272     069A  1683               	bsf	3,5	;RP0=1, select bank1
  1273     069B  1303               	bcf	3,6	;RP1=0, select bank1
  1274     069C  009F               	movwf	31	;volatile
  1275     069D                     l886:
  1276                           
  1277                           ;ADCtask.c: 92:     lcd_com(0x30);
  1278     069D  3030               	movlw	48
  1279     069E  120A  118A  24F7  120A  118A  	fcall	_lcd_com
  1280     06A3                     l888:
  1281                           
  1282                           ;ADCtask.c: 93:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1283     06A3  30C3               	movlw	195
  1284     06A4  00F4               	movwf	??_init+1
  1285     06A5  30CD               	movlw	205
  1286     06A6  00F3               	movwf	??_init
  1287     06A7                     u657:
  1288     06A7  0BF3               	decfsz	??_init,f
  1289     06A8  2EA7               	goto	u657
  1290     06A9  0BF4               	decfsz	??_init+1,f
  1291     06AA  2EA7               	goto	u657
  1292                           
  1293                           ;ADCtask.c: 94:     lcd_com(0x30);
  1294     06AB  3030               	movlw	48
  1295     06AC  120A  118A  24F7  120A  118A  	fcall	_lcd_com
  1296     06B1                     l890:
  1297                           
  1298                           ;ADCtask.c: 95:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1299     06B1  30C3               	movlw	195
  1300     06B2  00F4               	movwf	??_init+1
  1301     06B3  30CD               	movlw	205
  1302     06B4  00F3               	movwf	??_init
  1303     06B5                     u667:
  1304     06B5  0BF3               	decfsz	??_init,f
  1305     06B6  2EB5               	goto	u667
  1306     06B7  0BF4               	decfsz	??_init+1,f
  1307     06B8  2EB5               	goto	u667
  1308     06B9                     l892:
  1309                           
  1310                           ;ADCtask.c: 96:     lcd_com(0x30);
  1311     06B9  3030               	movlw	48
  1312     06BA  120A  118A  24F7  120A  118A  	fcall	_lcd_com
  1313                           
  1314                           ;ADCtask.c: 97:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1315     06BF  30C3               	movlw	195
  1316     06C0  00F4               	movwf	??_init+1
  1317     06C1  30CD               	movlw	205
  1318     06C2  00F3               	movwf	??_init
  1319     06C3                     u677:
  1320     06C3  0BF3               	decfsz	??_init,f
  1321     06C4  2EC3               	goto	u677
  1322     06C5  0BF4               	decfsz	??_init+1,f
  1323     06C6  2EC3               	goto	u677
  1324     06C7                     l894:
  1325                           
  1326                           ;ADCtask.c: 98:     lcd_com(0x38);
  1327     06C7  3038               	movlw	56
  1328     06C8  120A  118A  24F7  120A  118A  	fcall	_lcd_com
  1329     06CD                     l896:
  1330                           
  1331                           ;ADCtask.c: 99:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1332     06CD  30C3               	movlw	195
  1333     06CE  00F4               	movwf	??_init+1
  1334     06CF  30CD               	movlw	205
  1335     06D0  00F3               	movwf	??_init
  1336     06D1                     u687:
  1337     06D1  0BF3               	decfsz	??_init,f
  1338     06D2  2ED1               	goto	u687
  1339     06D3  0BF4               	decfsz	??_init+1,f
  1340     06D4  2ED1               	goto	u687
  1341                           
  1342                           ;ADCtask.c: 100:     lcd_com(0x06);
  1343     06D5  3006               	movlw	6
  1344     06D6  120A  118A  24F7  120A  118A  	fcall	_lcd_com
  1345     06DB                     l898:
  1346                           
  1347                           ;ADCtask.c: 101:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1348     06DB  30C3               	movlw	195
  1349     06DC  00F4               	movwf	??_init+1
  1350     06DD  30CD               	movlw	205
  1351     06DE  00F3               	movwf	??_init
  1352     06DF                     u697:
  1353     06DF  0BF3               	decfsz	??_init,f
  1354     06E0  2EDF               	goto	u697
  1355     06E1  0BF4               	decfsz	??_init+1,f
  1356     06E2  2EDF               	goto	u697
  1357     06E3                     l900:
  1358                           
  1359                           ;ADCtask.c: 102:     lcd_com(0x0C);
  1360     06E3  300C               	movlw	12
  1361     06E4  120A  118A  24F7  120A  118A  	fcall	_lcd_com
  1362                           
  1363                           ;ADCtask.c: 103:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1364     06E9  30C3               	movlw	195
  1365     06EA  00F4               	movwf	??_init+1
  1366     06EB  30CD               	movlw	205
  1367     06EC  00F3               	movwf	??_init
  1368     06ED                     u707:
  1369     06ED  0BF3               	decfsz	??_init,f
  1370     06EE  2EED               	goto	u707
  1371     06EF  0BF4               	decfsz	??_init+1,f
  1372     06F0  2EED               	goto	u707
  1373     06F1                     l902:
  1374                           
  1375                           ;ADCtask.c: 104:     lcd_com(0x01);
  1376     06F1  3001               	movlw	1
  1377     06F2  120A  118A  24F7  120A  118A  	fcall	_lcd_com
  1378     06F7                     l904:
  1379                           
  1380                           ;ADCtask.c: 105:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1381     06F7  30C3               	movlw	195
  1382     06F8  00F4               	movwf	??_init+1
  1383     06F9  30CD               	movlw	205
  1384     06FA  00F3               	movwf	??_init
  1385     06FB                     u717:
  1386     06FB  0BF3               	decfsz	??_init,f
  1387     06FC  2EFB               	goto	u717
  1388     06FD  0BF4               	decfsz	??_init+1,f
  1389     06FE  2EFB               	goto	u717
  1390     06FF                     l66:
  1391     06FF  0008               	return
  1392     0700                     __end_of_init:
  1393                           
  1394                           	psect	text6
  1395     04F7                     __ptext6:	
  1396 ;; *************** function _lcd_com *****************
  1397 ;; Defined at:
  1398 ;;		line 108 in file "ADCtask.c"
  1399 ;; Parameters:    Size  Location     Type
  1400 ;;  i               1    wreg     unsigned char 
  1401 ;; Auto vars:     Size  Location     Type
  1402 ;;  i               1    2[COMMON] unsigned char 
  1403 ;; Return value:  Size  Location     Type
  1404 ;;                  1    wreg      void 
  1405 ;; Registers used:
  1406 ;;		wreg, status,2, status,0, btemp+1
  1407 ;; Tracked objects:
  1408 ;;		On entry : 0/0
  1409 ;;		On exit  : 0/0
  1410 ;;		Unchanged: 0/0
  1411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1412 ;;      Params:         0       0       0       0       0
  1413 ;;      Locals:         1       0       0       0       0
  1414 ;;      Temps:          2       0       0       0       0
  1415 ;;      Totals:         3       0       0       0       0
  1416 ;;Total ram usage:        3 bytes
  1417 ;; Hardware stack levels used: 1
  1418 ;; This function calls:
  1419 ;;		Nothing
  1420 ;; This function is called by:
  1421 ;;		_main
  1422 ;;		_init
  1423 ;; This function uses a non-reentrant model
  1424 ;;
  1425                           
  1426     04F7                     _lcd_com:	
  1427                           ;psect for function _lcd_com
  1428                           
  1429                           
  1430                           ;incstack = 0
  1431                           ; Regs used in _lcd_com: [wreg+status,2+status,0+btemp+1]
  1432                           ;lcd_com@i stored from wreg
  1433     04F7  00F2               	movwf	lcd_com@i
  1434     04F8                     l814:
  1435                           
  1436                           ;ADCtask.c: 109:     PORTC &= ~0x08;
  1437     04F8  30F7               	movlw	247
  1438     04F9  00FF               	movwf	btemp+1
  1439     04FA  087F               	movf	btemp+1,w
  1440     04FB  1283               	bcf	3,5	;RP0=0, select bank0
  1441     04FC  1303               	bcf	3,6	;RP1=0, select bank0
  1442     04FD  0587               	andwf	7,f	;volatile
  1443     04FE                     l816:
  1444                           
  1445                           ;ADCtask.c: 110:     PORTD = i;
  1446     04FE  0872               	movf	lcd_com@i,w
  1447     04FF  0088               	movwf	8	;volatile
  1448     0500                     l818:
  1449                           
  1450                           ;ADCtask.c: 111:     PORTC |= 0x01;
  1451     0500  1407               	bsf	7,0	;volatile
  1452     0501                     l820:
  1453                           
  1454                           ;ADCtask.c: 112:     PORTC &= ~0x01;
  1455     0501  30FE               	movlw	254
  1456     0502  00FF               	movwf	btemp+1
  1457     0503  087F               	movf	btemp+1,w
  1458     0504  0587               	andwf	7,f	;volatile
  1459                           
  1460                           ;ADCtask.c: 113:     _delay((unsigned long)((100)*(6000000/4000.0)));
  1461     0505  30C3               	movlw	195
  1462     0506  00F1               	movwf	??_lcd_com+1
  1463     0507  30CD               	movlw	205
  1464     0508  00F0               	movwf	??_lcd_com
  1465     0509                     u727:
  1466     0509  0BF0               	decfsz	??_lcd_com,f
  1467     050A  2D09               	goto	u727
  1468     050B  0BF1               	decfsz	??_lcd_com+1,f
  1469     050C  2D09               	goto	u727
  1470     050D                     l69:
  1471     050D  0008               	return
  1472     050E                     __end_of_lcd_com:
  1473                           
  1474                           	psect	text7
  1475     058C                     __ptext7:	
  1476 ;; *************** function ___lmul *****************
  1477 ;; Defined at:
  1478 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul32.c"
  1479 ;; Parameters:    Size  Location     Type
  1480 ;;  multiplier      4    0[COMMON] unsigned long 
  1481 ;;  multiplicand    4    4[COMMON] unsigned long 
  1482 ;; Auto vars:     Size  Location     Type
  1483 ;;  product         4    9[COMMON] unsigned long 
  1484 ;; Return value:  Size  Location     Type
  1485 ;;                  4    0[COMMON] unsigned long 
  1486 ;; Registers used:
  1487 ;;		wreg, status,2, status,0
  1488 ;; Tracked objects:
  1489 ;;		On entry : 0/0
  1490 ;;		On exit  : 0/0
  1491 ;;		Unchanged: 0/0
  1492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1493 ;;      Params:         8       0       0       0       0
  1494 ;;      Locals:         4       0       0       0       0
  1495 ;;      Temps:          1       0       0       0       0
  1496 ;;      Totals:        13       0       0       0       0
  1497 ;;Total ram usage:       13 bytes
  1498 ;; Hardware stack levels used: 1
  1499 ;; This function calls:
  1500 ;;		Nothing
  1501 ;; This function is called by:
  1502 ;;		_main
  1503 ;; This function uses a non-reentrant model
  1504 ;;
  1505                           
  1506     058C                     ___lmul:	
  1507                           ;psect for function ___lmul
  1508                           
  1509     058C                     l926:	
  1510                           ;incstack = 0
  1511                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  1512                           
  1513     058C  3000               	movlw	0
  1514     058D  00FC               	movwf	___lmul@product+3
  1515     058E  3000               	movlw	0
  1516     058F  00FB               	movwf	___lmul@product+2
  1517     0590  3000               	movlw	0
  1518     0591  00FA               	movwf	___lmul@product+1
  1519     0592  3000               	movlw	0
  1520     0593  00F9               	movwf	___lmul@product
  1521     0594                     l928:
  1522     0594  1C70               	btfss	___lmul@multiplier,0
  1523     0595  2D97               	goto	u481
  1524     0596  2D98               	goto	u480
  1525     0597                     u481:
  1526     0597  2DAF               	goto	l932
  1527     0598                     u480:
  1528     0598                     l930:
  1529     0598  0874               	movf	___lmul@multiplicand,w
  1530     0599  07F9               	addwf	___lmul@product,f
  1531     059A  0875               	movf	___lmul@multiplicand+1,w
  1532     059B  1103               	clrz
  1533     059C  1803               	skipnc
  1534     059D  3E01               	addlw	1
  1535     059E  1903               	skipnz
  1536     059F  2DA1               	goto	u491
  1537     05A0  07FA               	addwf	___lmul@product+1,f
  1538     05A1                     u491:
  1539     05A1  0876               	movf	___lmul@multiplicand+2,w
  1540     05A2  1103               	clrz
  1541     05A3  1803               	skipnc
  1542     05A4  3E01               	addlw	1
  1543     05A5  1903               	skipnz
  1544     05A6  2DA8               	goto	u492
  1545     05A7  07FB               	addwf	___lmul@product+2,f
  1546     05A8                     u492:
  1547     05A8  0877               	movf	___lmul@multiplicand+3,w
  1548     05A9  1103               	clrz
  1549     05AA  1803               	skipnc
  1550     05AB  3E01               	addlw	1
  1551     05AC  1903               	skipnz
  1552     05AD  2DAF               	goto	u493
  1553     05AE  07FC               	addwf	___lmul@product+3,f
  1554     05AF                     u493:
  1555     05AF                     l932:
  1556     05AF  3001               	movlw	1
  1557     05B0  00F8               	movwf	??___lmul
  1558     05B1                     u505:
  1559     05B1  1003               	clrc
  1560     05B2  0DF4               	rlf	___lmul@multiplicand,f
  1561     05B3  0DF5               	rlf	___lmul@multiplicand+1,f
  1562     05B4  0DF6               	rlf	___lmul@multiplicand+2,f
  1563     05B5  0DF7               	rlf	___lmul@multiplicand+3,f
  1564     05B6  0BF8               	decfsz	??___lmul,f
  1565     05B7  2DB1               	goto	u505
  1566     05B8                     l934:
  1567     05B8  3001               	movlw	1
  1568     05B9                     u515:
  1569     05B9  1003               	clrc
  1570     05BA  0CF3               	rrf	___lmul@multiplier+3,f
  1571     05BB  0CF2               	rrf	___lmul@multiplier+2,f
  1572     05BC  0CF1               	rrf	___lmul@multiplier+1,f
  1573     05BD  0CF0               	rrf	___lmul@multiplier,f
  1574     05BE  3EFF               	addlw	-1
  1575     05BF  1D03               	skipz
  1576     05C0  2DB9               	goto	u515
  1577     05C1  0873               	movf	___lmul@multiplier+3,w
  1578     05C2  0472               	iorwf	___lmul@multiplier+2,w
  1579     05C3  0471               	iorwf	___lmul@multiplier+1,w
  1580     05C4  0470               	iorwf	___lmul@multiplier,w
  1581     05C5  1D03               	skipz
  1582     05C6  2DC8               	goto	u521
  1583     05C7  2DC9               	goto	u520
  1584     05C8                     u521:
  1585     05C8  2D94               	goto	l928
  1586     05C9                     u520:
  1587     05C9                     l936:
  1588     05C9  087C               	movf	___lmul@product+3,w
  1589     05CA  00F3               	movwf	?___lmul+3
  1590     05CB  087B               	movf	___lmul@product+2,w
  1591     05CC  00F2               	movwf	?___lmul+2
  1592     05CD  087A               	movf	___lmul@product+1,w
  1593     05CE  00F1               	movwf	?___lmul+1
  1594     05CF  0879               	movf	___lmul@product,w
  1595     05D0  00F0               	movwf	?___lmul
  1596     05D1                     l172:
  1597     05D1  0008               	return
  1598     05D2                     __end_of___lmul:
  1599                           
  1600                           	psect	text8
  1601     0627                     __ptext8:	
  1602 ;; *************** function ___lldiv *****************
  1603 ;; Defined at:
  1604 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\__lldiv.c"
  1605 ;; Parameters:    Size  Location     Type
  1606 ;;  divisor         4    0[BANK0 ] unsigned long 
  1607 ;;  dividend        4    4[BANK0 ] unsigned long 
  1608 ;; Auto vars:     Size  Location     Type
  1609 ;;  quotient        4    8[BANK0 ] unsigned long 
  1610 ;;  counter         1   12[BANK0 ] unsigned char 
  1611 ;; Return value:  Size  Location     Type
  1612 ;;                  4    0[BANK0 ] unsigned long 
  1613 ;; Registers used:
  1614 ;;		wreg, status,2, status,0, btemp+1
  1615 ;; Tracked objects:
  1616 ;;		On entry : 0/0
  1617 ;;		On exit  : 0/0
  1618 ;;		Unchanged: 0/0
  1619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1620 ;;      Params:         0       8       0       0       0
  1621 ;;      Locals:         0       5       0       0       0
  1622 ;;      Temps:          1       0       0       0       0
  1623 ;;      Totals:         1      13       0       0       0
  1624 ;;Total ram usage:       14 bytes
  1625 ;; Hardware stack levels used: 1
  1626 ;; This function calls:
  1627 ;;		Nothing
  1628 ;; This function is called by:
  1629 ;;		_main
  1630 ;; This function uses a non-reentrant model
  1631 ;;
  1632                           
  1633     0627                     ___lldiv:	
  1634                           ;psect for function ___lldiv
  1635                           
  1636     0627                     l940:	
  1637                           ;incstack = 0
  1638                           ; Regs used in ___lldiv: [wreg+status,2+status,0+btemp+1]
  1639                           
  1640     0627  3000               	movlw	0
  1641     0628  1283               	bcf	3,5	;RP0=0, select bank0
  1642     0629  1303               	bcf	3,6	;RP1=0, select bank0
  1643     062A  00BF               	movwf	___lldiv@quotient+3
  1644     062B  3000               	movlw	0
  1645     062C  00BE               	movwf	___lldiv@quotient+2
  1646     062D  3000               	movlw	0
  1647     062E  00BD               	movwf	___lldiv@quotient+1
  1648     062F  3000               	movlw	0
  1649     0630  00BC               	movwf	___lldiv@quotient
  1650     0631  0837               	movf	___lldiv@divisor+3,w
  1651     0632  0436               	iorwf	___lldiv@divisor+2,w
  1652     0633  0435               	iorwf	___lldiv@divisor+1,w
  1653     0634  0434               	iorwf	___lldiv@divisor,w
  1654     0635  1903               	skipnz
  1655     0636  2E38               	goto	u531
  1656     0637  2E39               	goto	u530
  1657     0638                     u531:
  1658     0638  2E86               	goto	l962
  1659     0639                     u530:
  1660     0639                     l942:
  1661     0639  01C0               	clrf	___lldiv@counter
  1662     063A  0AC0               	incf	___lldiv@counter,f
  1663     063B  2E49               	goto	l948
  1664     063C                     l944:
  1665     063C  3001               	movlw	1
  1666     063D  00FD               	movwf	??___lldiv
  1667     063E                     u545:
  1668     063E  1003               	clrc
  1669     063F  0DB4               	rlf	___lldiv@divisor,f
  1670     0640  0DB5               	rlf	___lldiv@divisor+1,f
  1671     0641  0DB6               	rlf	___lldiv@divisor+2,f
  1672     0642  0DB7               	rlf	___lldiv@divisor+3,f
  1673     0643  0BFD               	decfsz	??___lldiv,f
  1674     0644  2E3E               	goto	u545
  1675     0645                     l946:
  1676     0645  3001               	movlw	1
  1677     0646  00FF               	movwf	btemp+1
  1678     0647  087F               	movf	btemp+1,w
  1679     0648  07C0               	addwf	___lldiv@counter,f
  1680     0649                     l948:
  1681     0649  1FB7               	btfss	___lldiv@divisor+3,7
  1682     064A  2E4C               	goto	u551
  1683     064B  2E4D               	goto	u550
  1684     064C                     u551:
  1685     064C  2E3C               	goto	l944
  1686     064D                     u550:
  1687     064D                     l950:
  1688     064D  3001               	movlw	1
  1689     064E  00FD               	movwf	??___lldiv
  1690     064F                     u565:
  1691     064F  1003               	clrc
  1692     0650  0DBC               	rlf	___lldiv@quotient,f
  1693     0651  0DBD               	rlf	___lldiv@quotient+1,f
  1694     0652  0DBE               	rlf	___lldiv@quotient+2,f
  1695     0653  0DBF               	rlf	___lldiv@quotient+3,f
  1696     0654  0BFD               	decfsz	??___lldiv,f
  1697     0655  2E4F               	goto	u565
  1698     0656                     l952:
  1699     0656  0837               	movf	___lldiv@divisor+3,w
  1700     0657  023B               	subwf	___lldiv@dividend+3,w
  1701     0658  1D03               	skipz
  1702     0659  2E64               	goto	u575
  1703     065A  0836               	movf	___lldiv@divisor+2,w
  1704     065B  023A               	subwf	___lldiv@dividend+2,w
  1705     065C  1D03               	skipz
  1706     065D  2E64               	goto	u575
  1707     065E  0835               	movf	___lldiv@divisor+1,w
  1708     065F  0239               	subwf	___lldiv@dividend+1,w
  1709     0660  1D03               	skipz
  1710     0661  2E64               	goto	u575
  1711     0662  0834               	movf	___lldiv@divisor,w
  1712     0663  0238               	subwf	___lldiv@dividend,w
  1713     0664                     u575:
  1714     0664  1C03               	skipc
  1715     0665  2E67               	goto	u571
  1716     0666  2E68               	goto	u570
  1717     0667                     u571:
  1718     0667  2E77               	goto	l958
  1719     0668                     u570:
  1720     0668                     l954:
  1721     0668  0834               	movf	___lldiv@divisor,w
  1722     0669  02B8               	subwf	___lldiv@dividend,f
  1723     066A  0835               	movf	___lldiv@divisor+1,w
  1724     066B  1C03               	skipc
  1725     066C  0F35               	incfsz	___lldiv@divisor+1,w
  1726     066D  02B9               	subwf	___lldiv@dividend+1,f
  1727     066E  0836               	movf	___lldiv@divisor+2,w
  1728     066F  1C03               	skipc
  1729     0670  0F36               	incfsz	___lldiv@divisor+2,w
  1730     0671  02BA               	subwf	___lldiv@dividend+2,f
  1731     0672  0837               	movf	___lldiv@divisor+3,w
  1732     0673  1C03               	skipc
  1733     0674  0F37               	incfsz	___lldiv@divisor+3,w
  1734     0675  02BB               	subwf	___lldiv@dividend+3,f
  1735     0676                     l956:
  1736     0676  143C               	bsf	___lldiv@quotient,0
  1737     0677                     l958:
  1738     0677  3001               	movlw	1
  1739     0678                     u585:
  1740     0678  1003               	clrc
  1741     0679  0CB7               	rrf	___lldiv@divisor+3,f
  1742     067A  0CB6               	rrf	___lldiv@divisor+2,f
  1743     067B  0CB5               	rrf	___lldiv@divisor+1,f
  1744     067C  0CB4               	rrf	___lldiv@divisor,f
  1745     067D  3EFF               	addlw	-1
  1746     067E  1D03               	skipz
  1747     067F  2E78               	goto	u585
  1748     0680                     l960:
  1749     0680  3001               	movlw	1
  1750     0681  02C0               	subwf	___lldiv@counter,f
  1751     0682  1D03               	btfss	3,2
  1752     0683  2E85               	goto	u591
  1753     0684  2E86               	goto	u590
  1754     0685                     u591:
  1755     0685  2E4D               	goto	l950
  1756     0686                     u590:
  1757     0686                     l962:
  1758     0686  083F               	movf	___lldiv@quotient+3,w
  1759     0687  00B7               	movwf	?___lldiv+3
  1760     0688  083E               	movf	___lldiv@quotient+2,w
  1761     0689  00B6               	movwf	?___lldiv+2
  1762     068A  083D               	movf	___lldiv@quotient+1,w
  1763     068B  00B5               	movwf	?___lldiv+1
  1764     068C  083C               	movf	___lldiv@quotient,w
  1765     068D  00B4               	movwf	?___lldiv
  1766     068E                     l194:
  1767     068E  0008               	return
  1768     068F                     __end_of___lldiv:
  1769     007E                     btemp	set	126	;btemp
  1770     007E                     wtemp0	set	126
  1771                           
  1772                           	psect	config
  1773                           
  1774                           ;Config register CONFIG @ 0x2007
  1775                           ;	Oscillator Selection bits
  1776                           ;	FOSC = EXTRC, RC oscillator
  1777                           ;	Watchdog Timer Enable bit
  1778                           ;	WDTE = OFF, WDT disabled
  1779                           ;	Power-up Timer Enable bit
  1780                           ;	PWRTE = OFF, PWRT disabled
  1781                           ;	Brown-out Reset Enable bit
  1782                           ;	BOREN = OFF, BOR disabled
  1783                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1784                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1785                           ;	Data EEPROM Memory Code Protection bit
  1786                           ;	CPD = OFF, Data EEPROM code protection off
  1787                           ;	Flash Program Memory Write Enable bits
  1788                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1789                           ;	In-Circuit Debugger Mode bit
  1790                           ;	DEBUG = 0x1, unprogrammed default
  1791                           ;	Flash Program Memory Code Protection bit
  1792                           ;	CP = OFF, Code protection off
  1793     2007                     	org	8199
  1794     2007  3F3B               	dw	16187

Data Sizes:
    Strings     0
    Constant    0
    Data        20
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     17      44
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___lldiv
    _lcd_output->___lwdiv
    _init->_lcd_com
    ___lldiv->___lmul

Critical Paths under _main in BANK0

    _main->___lldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    1765
                                             13 BANK0      4     4      0
                            ___lldiv
                             ___lmul
                               _init
                            _lcd_com
                           _lcd_data
                         _lcd_output
 ---------------------------------------------------------------------------------
 (1) _lcd_output                                           9     7      2    1005
                                              7 COMMON     2     0      2
                                              0 BANK0      6     6      0
                            ___lwdiv
                            ___lwmod
                           _lcd_data
 ---------------------------------------------------------------------------------
 (2) _lcd_data                                             3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     311
                                              0 COMMON     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     314
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (1) _init                                                 2     2      0      22
                                              3 COMMON     2     2      0
                            _lcd_com
 ---------------------------------------------------------------------------------
 (1) _lcd_com                                              3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              13     5      8     244
                                              0 COMMON    13     5      8
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             14     6      8     314
                                             13 COMMON     1     1      0
                                              0 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___lldiv
     ___lmul (ARG)
   ___lmul
   _init
     _lcd_com
   _lcd_com
   _lcd_data
   _lcd_output
     ___lwdiv
     ___lwmod
     _lcd_data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     11      2C       5       55.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      3A      12        0.0%
ABS                  0      0      3A       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Tue Sep 03 23:13:50 2024

                      pc 0002                       l50 0760                       l63 0626  
                     l72 04E2                       l66 06FF                       l69 050D  
                     fsr 0004                      l172 05D1                      l194 068E  
                    l438 058B                      l448 0547                      l820 0501  
                    l900 06E3                      l814 04F8                      l902 06F1  
                    l830 04DA                      l822 04D0                      l910 05EC  
                    l816 04FE                      l904 06F7                      l840 055A  
                    l832 0548                      l824 04D3                      l920 0613  
                    l912 05F2                      l930 0598                      l818 0500  
                    l850 057A                      l842 055E                      l834 054A  
                    l826 04D5                      l922 061D                      l914 0603  
                    l906 05D2                      l940 0627                      l932 05AF  
                    l852 0581                      l844 0562                      l836 0550  
                    l860 0514                      l828 04D6                      l924 0621  
                    l916 0609                      l908 05D6                      l950 064D  
                    l942 0639                      l934 05B8                      l926 058C  
                    l846 0573                      l838 0553                      l854 0587  
                    l870 0530                      l862 0517                      l960 0680  
                    l952 0656                      l944 063C                      l936 05C9  
                    l928 0594                      l880 068F                      l848 0579  
                    l872 0536                      l864 051E                      l954 0668  
                    l946 0645                      l962 0686                      l890 06B1  
                    l882 0693                      l874 053D                      l866 0522  
                    l858 050E                      l956 0676                      l948 0649  
                    l892 06B9                      l884 0694                      l868 0526  
                    l876 0543                      l980 0730                      l958 0677  
                    l894 06C7                      l886 069D                      l990 0746  
                    l982 0736                      l974 070F                      l966 0700  
                    l896 06CD                      l888 06A3                      l992 074E  
                    l976 071B                      l968 070B                      l898 06DB  
                    l994 075B                      l978 0723                      l996 075F  
                    l988 073A                      l998 0764                      u320 0550  
                    u321 054F                      u410 0526                      u411 0525  
                    u340 0562                      u420 0530                      u341 0561  
                    u421 052F                      u405 0518                      u335 0554  
                    u520 05C9                      u360 0573                      u440 0543  
                    u600 0730                      u521 05C8                      u505 05B1  
                    u361 0572                      u441 0542                      u425 052C  
                    u601 072F                      u530 0639                      u450 0609  
                    u610 075B                      u531 0638                      u515 05B9  
                    u355 0563                      u435 0537                      u451 0608  
                    u611 075A                      u380 0587                      u460 0612  
                    u620 0764                      u381 0586                      u365 056F  
                    u461 0611                      u621 0763                      u605 072C  
                    u550 064D                      u390 0514                      u470 0626  
                    u551 064C                      u375 057B                      u391 0513  
                    u471 0625                      u615 0757                      u480 0598  
                    u545 063E                      u481 0597                      u570 0668  
                    u571 0667                      u491 05A1                      u707 06ED  
                    u492 05A8                      u565 064F                      u493 05AF  
                    u717 06FB                      u637 07DE                      u590 0686  
                    u591 0685                      u575 0664                      u727 0509  
                    u647 04DE                      u585 0678                      u657 06A7  
                    u667 06B5                      u677 06C3                      u687 06D1  
                    u697 06DF                      fsr0 0004                      indf 0000  
                   l1000 077F                     l1010 07D2                     l1002 07AD  
                   l1004 07B3                     l1006 07BE                     l1008 07C4  
                   _main 0700                     _init 068F                     btemp 007E  
                   _volt 004B              lcd_output@i 0077              lcd_output@j 0039  
            lcd_output@k 0034                     start 0000                    ?_main 0070  
                  ?_init 0070          __end_of___lldiv 068F          __end_of___lwdiv 058C  
        __end_of___lwmod 0548                    _PORTC 0007                    _PORTD 0008  
                  _TRISA 0085                    _TRISC 0087                    _TRISD 0088  
    ___lmul@multiplicand 0074          __end_of_lcd_com 050E                    _msg_1 002A  
                  _msg_2 0020                    main@i 0043                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 07E7  
           __end_of_main 07E7             __end_of_init 0700                   ??_main 0041  
                 ??_init 0073                   _ADCON0 001F                   _ADCON1 009F  
                 _ADRESH 001E                   _ADRESL 009E         __end_of_lcd_data 04E3  
                 ___lmul 058C                ??___lldiv 007D                ??___lwdiv 0074  
              ??___lwmod 0074                   _result 0045                ??_lcd_com 0070  
__end_of__initialization 07FC           __pcstackCOMMON 0070             __pidataBANK0 04E3  
             __pbssBANK0 0045               __pmaintext 0700                  ?___lmul 0070  
         ___lmul@product 0079               _lcd_output 05D2                ?_lcd_data 0070  
                ___lldiv 0627                  _adc_low 0049                  ___lwdiv 0548  
                ___lwmod 050E                  __ptext1 05D2                  __ptext2 04CF  
                __ptext3 050E                  __ptext4 0548                  __ptext5 068F  
                __ptext6 04F7                  __ptext7 058C                  __ptext8 0627  
                _lcd_com 04F7               ??_lcd_data 0070     end_of_initialization 07FC  
        ___lldiv@divisor 0034          ___lldiv@counter 0040              ?_lcd_output 0077  
         __end_of___lmul 05D2      start_initialization 07E7                 ??___lmul 0078  
             init_fetch0 04BC              __pdataBANK0 0020                ___latbits 0002  
          __pcstackBANK0 0034         ___lwdiv@dividend 0072                 ?___lldiv 0034  
               ?___lwdiv 0070                 ?___lwmod 0070                 ?_lcd_com 0070  
       ___lwdiv@quotient 0074                lcd_data@i 0072             ??_lcd_output 0079  
      ___lmul@multiplier 0070       __end_of_lcd_output 0627                 _adc_high 0047  
        ___lwdiv@divisor 0070          ___lwdiv@counter 0076                 _lcd_data 04CF  
               lcd_com@i 0072                 init_ram0 04C0         ___lwmod@dividend 0072  
       ___lldiv@dividend 0038         ___lldiv@quotient 003C          ___lwmod@divisor 0070  
        ___lwmod@counter 0074  
