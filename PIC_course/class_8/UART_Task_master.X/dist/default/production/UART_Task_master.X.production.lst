

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Wed Oct 09 02:01:03 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	dabs	1,0x7E,2
    11     0000                     
    12                           ; Generated 12/10/2023 GMT
    13                           ; 
    14                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    15                           ; All rights reserved.
    16                           ; 
    17                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    18                           ; 
    19                           ; Redistribution and use in source and binary forms, with or without modification, are
    20                           ; permitted provided that the following conditions are met:
    21                           ; 
    22                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    23                           ;        conditions and the following disclaimer.
    24                           ; 
    25                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    26                           ;        of conditions and the following disclaimer in the documentation and/or other
    27                           ;        materials provided with the distribution. Publication is not required when
    28                           ;        this file is used in an embedded application.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F877A Definitions
    44                           ; 
    45                           ; SFR Addresses
    46     0000                     	;# 
    47     0001                     	;# 
    48     0002                     	;# 
    49     0003                     	;# 
    50     0004                     	;# 
    51     0005                     	;# 
    52     0006                     	;# 
    53     0007                     	;# 
    54     0008                     	;# 
    55     0009                     	;# 
    56     000A                     	;# 
    57     000B                     	;# 
    58     000C                     	;# 
    59     000D                     	;# 
    60     000E                     	;# 
    61     000E                     	;# 
    62     000F                     	;# 
    63     0010                     	;# 
    64     0011                     	;# 
    65     0012                     	;# 
    66     0013                     	;# 
    67     0014                     	;# 
    68     0015                     	;# 
    69     0015                     	;# 
    70     0016                     	;# 
    71     0017                     	;# 
    72     0018                     	;# 
    73     0019                     	;# 
    74     001A                     	;# 
    75     001B                     	;# 
    76     001B                     	;# 
    77     001C                     	;# 
    78     001D                     	;# 
    79     001E                     	;# 
    80     001F                     	;# 
    81     0081                     	;# 
    82     0085                     	;# 
    83     0086                     	;# 
    84     0087                     	;# 
    85     0088                     	;# 
    86     0089                     	;# 
    87     008C                     	;# 
    88     008D                     	;# 
    89     008E                     	;# 
    90     0091                     	;# 
    91     0092                     	;# 
    92     0093                     	;# 
    93     0094                     	;# 
    94     0098                     	;# 
    95     0099                     	;# 
    96     009C                     	;# 
    97     009D                     	;# 
    98     009E                     	;# 
    99     009F                     	;# 
   100     010C                     	;# 
   101     010D                     	;# 
   102     010E                     	;# 
   103     010F                     	;# 
   104     018C                     	;# 
   105     018D                     	;# 
   106     0000                     	;# 
   107     0001                     	;# 
   108     0002                     	;# 
   109     0003                     	;# 
   110     0004                     	;# 
   111     0005                     	;# 
   112     0006                     	;# 
   113     0007                     	;# 
   114     0008                     	;# 
   115     0009                     	;# 
   116     000A                     	;# 
   117     000B                     	;# 
   118     000C                     	;# 
   119     000D                     	;# 
   120     000E                     	;# 
   121     000E                     	;# 
   122     000F                     	;# 
   123     0010                     	;# 
   124     0011                     	;# 
   125     0012                     	;# 
   126     0013                     	;# 
   127     0014                     	;# 
   128     0015                     	;# 
   129     0015                     	;# 
   130     0016                     	;# 
   131     0017                     	;# 
   132     0018                     	;# 
   133     0019                     	;# 
   134     001A                     	;# 
   135     001B                     	;# 
   136     001B                     	;# 
   137     001C                     	;# 
   138     001D                     	;# 
   139     001E                     	;# 
   140     001F                     	;# 
   141     0081                     	;# 
   142     0085                     	;# 
   143     0086                     	;# 
   144     0087                     	;# 
   145     0088                     	;# 
   146     0089                     	;# 
   147     008C                     	;# 
   148     008D                     	;# 
   149     008E                     	;# 
   150     0091                     	;# 
   151     0092                     	;# 
   152     0093                     	;# 
   153     0094                     	;# 
   154     0098                     	;# 
   155     0099                     	;# 
   156     009C                     	;# 
   157     009D                     	;# 
   158     009E                     	;# 
   159     009F                     	;# 
   160     010C                     	;# 
   161     010D                     	;# 
   162     010E                     	;# 
   163     010F                     	;# 
   164     018C                     	;# 
   165     018D                     	;# 
   166                           
   167                           	psect	nvCOMMON
   168     0072                     __pnvCOMMON:
   169     0072                     _Button_state:
   170     0072                     	ds	1
   171     0018                     _RCSTA	set	24
   172     0008                     _PORTD	set	8
   173     001A                     _RCREG	set	26
   174     000C                     _PIR1	set	12
   175     0019                     _TXREG	set	25
   176     0006                     _PORTB	set	6
   177     0099                     _SPBRG	set	153
   178     0098                     _TXSTA	set	152
   179     0087                     _TRISC	set	135
   180     0081                     _OPTION_REG	set	129
   181     0088                     _TRISD	set	136
   182     0086                     _TRISB	set	134
   183                           
   184                           	psect	cinit
   185     07FB                     start_initialization:	
   186                           ; #config settings
   187                           
   188     07FB                     __initialization:
   189                           
   190                           ; Clear objects allocated to COMMON
   191     07FB  01F3               	clrf	__pbssCOMMON& (0+127)
   192     07FC                     end_of_initialization:	
   193                           ;End of C runtime variable initialization code
   194                           
   195     07FC                     __end_of__initialization:
   196     07FC  0183               	clrf	3
   197     07FD  120A  118A  2F84   	ljmp	_main	;jump to C main() function
   198                           
   199                           	psect	bssCOMMON
   200     0073                     __pbssCOMMON:
   201     0073                     _Rx_data:
   202     0073                     	ds	1
   203                           
   204                           	psect	cstackCOMMON
   205     0070                     __pcstackCOMMON:
   206     0070                     ?_init:
   207     0070                     ??_init:	
   208                           ; 1 bytes @ 0x0
   209                           
   210     0070                     ?_main:	
   211                           ; 1 bytes @ 0x0
   212                           
   213     0070                     ??_main:	
   214                           ; 1 bytes @ 0x0
   215                           
   216                           
   217                           ; 1 bytes @ 0x0
   218     0070                     	ds	2
   219                           
   220                           	psect	maintext
   221     0784                     __pmaintext:	
   222 ;;
   223 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   224 ;;
   225 ;; *************** function _main *****************
   226 ;; Defined at:
   227 ;;		line 8 in file "UART_Task_master.c"
   228 ;; Parameters:    Size  Location     Type
   229 ;;		None
   230 ;; Auto vars:     Size  Location     Type
   231 ;;		None
   232 ;; Return value:  Size  Location     Type
   233 ;;                  1    wreg      void 
   234 ;; Registers used:
   235 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   236 ;; Tracked objects:
   237 ;;		On entry : B00/0
   238 ;;		On exit  : 0/0
   239 ;;		Unchanged: 0/0
   240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   241 ;;      Params:         0       0       0       0       0
   242 ;;      Locals:         0       0       0       0       0
   243 ;;      Temps:          2       0       0       0       0
   244 ;;      Totals:         2       0       0       0       0
   245 ;;Total ram usage:        2 bytes
   246 ;; Hardware stack levels required when called: 1
   247 ;; This function calls:
   248 ;;		_init
   249 ;; This function is called by:
   250 ;;		Startup code after reset
   251 ;; This function uses a non-reentrant model
   252 ;;
   253                           
   254     0784                     _main:	
   255                           ;psect for function _main
   256                           
   257     0784                     l619:	
   258                           ;incstack = 0
   259                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   260                           
   261                           
   262                           ;UART_Task_master.c: 9:     init();
   263     0784  120A  118A  2768  120A  118A  	fcall	_init
   264     0789                     l621:
   265                           
   266                           ;UART_Task_master.c: 12:         Button_state = PORTB & 0xF0;
   267     0789  1283               	bcf	3,5	;RP0=0, select bank0
   268     078A  1303               	bcf	3,6	;RP1=0, select bank0
   269     078B  0806               	movf	6,w	;volatile
   270     078C  39F0               	andlw	240
   271     078D  00F2               	movwf	_Button_state
   272                           
   273                           ;UART_Task_master.c: 15:         switch (Button_state) {
   274     078E  2FBF               	goto	l633
   275     078F                     l623:
   276                           
   277                           ;UART_Task_master.c: 17:                 TXREG = 'A';
   278     078F  3041               	movlw	65
   279     0790  0099               	movwf	25	;volatile
   280                           
   281                           ;UART_Task_master.c: 18:                 _delay((unsigned long)((50)*(6000000/4000.0)));
   282     0791  3062               	movlw	98
   283     0792  00F1               	movwf	??_main+1
   284     0793  3065               	movlw	101
   285     0794  00F0               	movwf	??_main
   286     0795                     u27:
   287     0795  0BF0               	decfsz	??_main,f
   288     0796  2F95               	goto	u27
   289     0797  0BF1               	decfsz	??_main+1,f
   290     0798  2F95               	goto	u27
   291     0799  2F9A               	nop2
   292                           
   293                           ;UART_Task_master.c: 19:                 break;
   294     079A  2FCD               	goto	l40
   295     079B                     l625:
   296                           
   297                           ;UART_Task_master.c: 21:                 TXREG = 'B';
   298     079B  3042               	movlw	66
   299     079C  0099               	movwf	25	;volatile
   300                           
   301                           ;UART_Task_master.c: 22:                 _delay((unsigned long)((50)*(6000000/4000.0)));
   302     079D  3062               	movlw	98
   303     079E  00F1               	movwf	??_main+1
   304     079F  3065               	movlw	101
   305     07A0  00F0               	movwf	??_main
   306     07A1                     u37:
   307     07A1  0BF0               	decfsz	??_main,f
   308     07A2  2FA1               	goto	u37
   309     07A3  0BF1               	decfsz	??_main+1,f
   310     07A4  2FA1               	goto	u37
   311     07A5  2FA6               	nop2
   312                           
   313                           ;UART_Task_master.c: 23:                 break;
   314     07A6  2FCD               	goto	l40
   315     07A7                     l627:
   316                           
   317                           ;UART_Task_master.c: 25:                 TXREG = 'C';
   318     07A7  3043               	movlw	67
   319     07A8  0099               	movwf	25	;volatile
   320                           
   321                           ;UART_Task_master.c: 26:                 _delay((unsigned long)((50)*(6000000/4000.0)));
   322     07A9  3062               	movlw	98
   323     07AA  00F1               	movwf	??_main+1
   324     07AB  3065               	movlw	101
   325     07AC  00F0               	movwf	??_main
   326     07AD                     u47:
   327     07AD  0BF0               	decfsz	??_main,f
   328     07AE  2FAD               	goto	u47
   329     07AF  0BF1               	decfsz	??_main+1,f
   330     07B0  2FAD               	goto	u47
   331     07B1  2FB2               	nop2
   332                           
   333                           ;UART_Task_master.c: 27:                 break;
   334     07B2  2FCD               	goto	l40
   335     07B3                     l629:
   336                           
   337                           ;UART_Task_master.c: 29:                 TXREG = 'D';
   338     07B3  3044               	movlw	68
   339     07B4  0099               	movwf	25	;volatile
   340                           
   341                           ;UART_Task_master.c: 30:                 _delay((unsigned long)((50)*(6000000/4000.0)));
   342     07B5  3062               	movlw	98
   343     07B6  00F1               	movwf	??_main+1
   344     07B7  3065               	movlw	101
   345     07B8  00F0               	movwf	??_main
   346     07B9                     u57:
   347     07B9  0BF0               	decfsz	??_main,f
   348     07BA  2FB9               	goto	u57
   349     07BB  0BF1               	decfsz	??_main+1,f
   350     07BC  2FB9               	goto	u57
   351     07BD  2FBE               	nop2
   352                           
   353                           ;UART_Task_master.c: 31:                 break;
   354     07BE  2FCD               	goto	l40
   355     07BF                     l633:
   356     07BF  0872               	movf	_Button_state,w
   357                           
   358                           ; Switch size 1, requested type "simple"
   359                           ; Number of cases is 4, Range of values is 112 to 224
   360                           ; switch strategies available:
   361                           ; Name         Instructions Cycles
   362                           ; simple_byte           13     7 (average)
   363                           ; jumptable            263     9 (fixed)
   364                           ;	Chosen strategy is simple_byte
   365     07C0  3A70               	xorlw	112	; case 112
   366     07C1  1903               	skipnz
   367     07C2  2FB3               	goto	l629
   368     07C3  3AC0               	xorlw	192	; case 176
   369     07C4  1903               	skipnz
   370     07C5  2FA7               	goto	l627
   371     07C6  3A60               	xorlw	96	; case 208
   372     07C7  1903               	skipnz
   373     07C8  2F9B               	goto	l625
   374     07C9  3A30               	xorlw	48	; case 224
   375     07CA  1903               	skipnz
   376     07CB  2F8F               	goto	l623
   377     07CC  2FCD               	goto	l40
   378     07CD                     l40:
   379                           
   380                           ;UART_Task_master.c: 35:         if (PIR1 & 0x20) {
   381     07CD  1283               	bcf	3,5	;RP0=0, select bank0
   382     07CE  1303               	bcf	3,6	;RP1=0, select bank0
   383     07CF  1E8C               	btfss	12,5	;volatile
   384     07D0  2FD2               	goto	u11
   385     07D1  2FD3               	goto	u10
   386     07D2                     u11:
   387     07D2  2F89               	goto	l621
   388     07D3                     u10:
   389     07D3                     l635:
   390                           
   391                           ;UART_Task_master.c: 36:             Rx_data = RCREG;
   392     07D3  081A               	movf	26,w	;volatile
   393     07D4  00F3               	movwf	_Rx_data
   394                           
   395                           ;UART_Task_master.c: 40:             switch (Rx_data) {
   396     07D5  2FE1               	goto	l649
   397     07D6                     l637:
   398                           
   399                           ;UART_Task_master.c: 42:                     PORTD = 0x01;
   400     07D6  3001               	movlw	1
   401     07D7  0088               	movwf	8	;volatile
   402                           
   403                           ;UART_Task_master.c: 43:                     break;
   404     07D8  2FEF               	goto	l651
   405     07D9                     l639:
   406                           
   407                           ;UART_Task_master.c: 45:                     PORTD = 0x40;
   408     07D9  3040               	movlw	64
   409     07DA  0088               	movwf	8	;volatile
   410                           
   411                           ;UART_Task_master.c: 46:                     break;
   412     07DB  2FEF               	goto	l651
   413     07DC                     l641:
   414                           
   415                           ;UART_Task_master.c: 48:                     PORTD = 0x00;
   416     07DC  0188               	clrf	8	;volatile
   417                           
   418                           ;UART_Task_master.c: 49:                     break;
   419     07DD  2FEF               	goto	l651
   420     07DE                     l643:
   421                           
   422                           ;UART_Task_master.c: 51:                     PORTD = 0x41;
   423     07DE  3041               	movlw	65
   424     07DF  0088               	movwf	8	;volatile
   425                           
   426                           ;UART_Task_master.c: 52:                     break;
   427     07E0  2FEF               	goto	l651
   428     07E1                     l649:
   429     07E1  0873               	movf	_Rx_data,w
   430                           
   431                           ; Switch size 1, requested type "simple"
   432                           ; Number of cases is 4, Range of values is 97 to 100
   433                           ; switch strategies available:
   434                           ; Name         Instructions Cycles
   435                           ; simple_byte           13     7 (average)
   436                           ; direct_byte           23    11 (fixed)
   437                           ; jumptable            263     9 (fixed)
   438                           ;	Chosen strategy is simple_byte
   439     07E2  3A61               	xorlw	97	; case 97
   440     07E3  1903               	skipnz
   441     07E4  2FD6               	goto	l637
   442     07E5  3A03               	xorlw	3	; case 98
   443     07E6  1903               	skipnz
   444     07E7  2FD9               	goto	l639
   445     07E8  3A01               	xorlw	1	; case 99
   446     07E9  1903               	skipnz
   447     07EA  2FDC               	goto	l641
   448     07EB  3A07               	xorlw	7	; case 100
   449     07EC  1903               	skipnz
   450     07ED  2FDE               	goto	l643
   451     07EE  2FDC               	goto	l641
   452     07EF                     l651:
   453                           
   454                           ;UART_Task_master.c: 57:             _delay((unsigned long)((100)*(6000000/4000.0)));
   455     07EF  30C3               	movlw	195
   456     07F0  00F1               	movwf	??_main+1
   457     07F1  30CD               	movlw	205
   458     07F2  00F0               	movwf	??_main
   459     07F3                     u67:
   460     07F3  0BF0               	decfsz	??_main,f
   461     07F4  2FF3               	goto	u67
   462     07F5  0BF1               	decfsz	??_main+1,f
   463     07F6  2FF3               	goto	u67
   464     07F7  2F89               	goto	l621
   465     07F8  120A  118A  2800   	ljmp	start
   466     07FB                     __end_of_main:
   467                           
   468                           	psect	text1
   469     0768                     __ptext1:	
   470 ;; *************** function _init *****************
   471 ;; Defined at:
   472 ;;		line 62 in file "UART_Task_master.c"
   473 ;; Parameters:    Size  Location     Type
   474 ;;		None
   475 ;; Auto vars:     Size  Location     Type
   476 ;;		None
   477 ;; Return value:  Size  Location     Type
   478 ;;                  1    wreg      void 
   479 ;; Registers used:
   480 ;;		wreg, status,2, status,0, btemp+1
   481 ;; Tracked objects:
   482 ;;		On entry : 0/0
   483 ;;		On exit  : 0/0
   484 ;;		Unchanged: 0/0
   485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   486 ;;      Params:         0       0       0       0       0
   487 ;;      Locals:         0       0       0       0       0
   488 ;;      Temps:          0       0       0       0       0
   489 ;;      Totals:         0       0       0       0       0
   490 ;;Total ram usage:        0 bytes
   491 ;; Hardware stack levels used: 1
   492 ;; This function calls:
   493 ;;		Nothing
   494 ;; This function is called by:
   495 ;;		_main
   496 ;; This function uses a non-reentrant model
   497 ;;
   498                           
   499     0768                     _init:	
   500                           ;psect for function _init
   501                           
   502     0768                     l601:	
   503                           ;incstack = 0
   504                           ; Regs used in _init: [wreg+status,2+status,0+btemp+1]
   505                           
   506                           
   507                           ;UART_Task_master.c: 64:     TRISB = 0xF0;
   508     0768  30F0               	movlw	240
   509     0769  1683               	bsf	3,5	;RP0=1, select bank1
   510     076A  1303               	bcf	3,6	;RP1=0, select bank1
   511     076B  0086               	movwf	6	;volatile
   512     076C                     l603:
   513                           
   514                           ;UART_Task_master.c: 67:     TRISD = 0x00;
   515     076C  0188               	clrf	8	;volatile
   516     076D                     l605:
   517                           
   518                           ;UART_Task_master.c: 70:     PORTB = 0x00;
   519     076D  1283               	bcf	3,5	;RP0=0, select bank0
   520     076E  1303               	bcf	3,6	;RP1=0, select bank0
   521     076F  0186               	clrf	6	;volatile
   522     0770                     l607:
   523                           
   524                           ;UART_Task_master.c: 71:     PORTD = 0x00;
   525     0770  0188               	clrf	8	;volatile
   526     0771                     l609:
   527                           
   528                           ;UART_Task_master.c: 74:     OPTION_REG &= 0x7F;
   529     0771  307F               	movlw	127
   530     0772  00FF               	movwf	btemp+1
   531     0773  087F               	movf	btemp+1,w
   532     0774  1683               	bsf	3,5	;RP0=1, select bank1
   533     0775  1303               	bcf	3,6	;RP1=0, select bank1
   534     0776  0581               	andwf	1,f	;volatile
   535     0777                     l611:
   536                           
   537                           ;UART_Task_master.c: 75:     TRISC = 0xC0;
   538     0777  30C0               	movlw	192
   539     0778  0087               	movwf	7	;volatile
   540     0779                     l613:
   541                           
   542                           ;UART_Task_master.c: 76:     TXSTA = 0x20;
   543     0779  3020               	movlw	32
   544     077A  0098               	movwf	24	;volatile
   545     077B                     l615:
   546                           
   547                           ;UART_Task_master.c: 77:     RCSTA = 0x90;
   548     077B  3090               	movlw	144
   549     077C  1283               	bcf	3,5	;RP0=0, select bank0
   550     077D  1303               	bcf	3,6	;RP1=0, select bank0
   551     077E  0098               	movwf	24	;volatile
   552     077F                     l617:
   553                           
   554                           ;UART_Task_master.c: 78:     SPBRG = 0x09;
   555     077F  3009               	movlw	9
   556     0780  1683               	bsf	3,5	;RP0=1, select bank1
   557     0781  1303               	bcf	3,6	;RP1=0, select bank1
   558     0782  0099               	movwf	25	;volatile
   559     0783                     l57:
   560     0783  0008               	return
   561     0784                     __end_of_init:
   562     007E                     btemp	set	126	;btemp
   563     007E                     wtemp0	set	126

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2       4
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              0 COMMON     2     2      0
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      2       4       1       28.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       4       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       4      12        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Wed Oct 09 02:01:03 2024

                     l40 07CD                       l57 0783                       u10 07D3  
                     u11 07D2                       u27 0795                       u37 07A1  
                     u47 07AD                       u57 07B9                       u67 07F3  
                    l601 0768                      l611 0777                      l603 076C  
                    l613 0779                      l605 076D                      l621 0789  
                    l615 077B                      l607 0770                      l623 078F  
                    l617 077F                      l609 0771                      l641 07DC  
                    l625 079B                      l633 07BF                      l643 07DE  
                    l651 07EF                      l635 07D3                      l627 07A7  
                    l619 0784                      l637 07D6                      l629 07B3  
                    l639 07D9                      l649 07E1                     _PIR1 000C  
                   _main 0784                     _init 0768                     btemp 007E  
                   start 0000                    ?_main 0070                    ?_init 0070  
                  _RCREG 001A                    _RCSTA 0018                    _SPBRG 0099  
                  _PORTB 0006                    _PORTD 0008                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _TXREG 0019  
                  _TXSTA 0098                    status 0003                    wtemp0 007E  
        __initialization 07FB             __end_of_main 07FB             __end_of_init 0784  
                 ??_main 0070                   ??_init 0070  __end_of__initialization 07FC  
         __pcstackCOMMON 0070               __pnvCOMMON 0072               __pmaintext 0784  
                _Rx_data 0073                  __ptext1 0768     end_of_initialization 07FC  
    start_initialization 07FB             _Button_state 0072              __pbssCOMMON 0073  
              ___latbits 0002               _OPTION_REG 0081  
