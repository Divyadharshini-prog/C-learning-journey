

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Tue Oct 01 00:47:22 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    10                           	dabs	1,0x7E,2
    11     0000                     
    12                           ; Generated 12/10/2023 GMT
    13                           ; 
    14                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    15                           ; All rights reserved.
    16                           ; 
    17                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    18                           ; 
    19                           ; Redistribution and use in source and binary forms, with or without modification, are
    20                           ; permitted provided that the following conditions are met:
    21                           ; 
    22                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    23                           ;        conditions and the following disclaimer.
    24                           ; 
    25                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    26                           ;        of conditions and the following disclaimer in the documentation and/or other
    27                           ;        materials provided with the distribution. Publication is not required when
    28                           ;        this file is used in an embedded application.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F877A Definitions
    44                           ; 
    45                           ; SFR Addresses
    46     0000                     	;# 
    47     0001                     	;# 
    48     0002                     	;# 
    49     0003                     	;# 
    50     0004                     	;# 
    51     0005                     	;# 
    52     0006                     	;# 
    53     0007                     	;# 
    54     0008                     	;# 
    55     0009                     	;# 
    56     000A                     	;# 
    57     000B                     	;# 
    58     000C                     	;# 
    59     000D                     	;# 
    60     000E                     	;# 
    61     000E                     	;# 
    62     000F                     	;# 
    63     0010                     	;# 
    64     0011                     	;# 
    65     0012                     	;# 
    66     0013                     	;# 
    67     0014                     	;# 
    68     0015                     	;# 
    69     0015                     	;# 
    70     0016                     	;# 
    71     0017                     	;# 
    72     0018                     	;# 
    73     0019                     	;# 
    74     001A                     	;# 
    75     001B                     	;# 
    76     001B                     	;# 
    77     001C                     	;# 
    78     001D                     	;# 
    79     001E                     	;# 
    80     001F                     	;# 
    81     0081                     	;# 
    82     0085                     	;# 
    83     0086                     	;# 
    84     0087                     	;# 
    85     0088                     	;# 
    86     0089                     	;# 
    87     008C                     	;# 
    88     008D                     	;# 
    89     008E                     	;# 
    90     0091                     	;# 
    91     0092                     	;# 
    92     0093                     	;# 
    93     0094                     	;# 
    94     0098                     	;# 
    95     0099                     	;# 
    96     009C                     	;# 
    97     009D                     	;# 
    98     009E                     	;# 
    99     009F                     	;# 
   100     010C                     	;# 
   101     010D                     	;# 
   102     010E                     	;# 
   103     010F                     	;# 
   104     018C                     	;# 
   105     018D                     	;# 
   106     0000                     	;# 
   107     0001                     	;# 
   108     0002                     	;# 
   109     0003                     	;# 
   110     0004                     	;# 
   111     0005                     	;# 
   112     0006                     	;# 
   113     0007                     	;# 
   114     0008                     	;# 
   115     0009                     	;# 
   116     000A                     	;# 
   117     000B                     	;# 
   118     000C                     	;# 
   119     000D                     	;# 
   120     000E                     	;# 
   121     000E                     	;# 
   122     000F                     	;# 
   123     0010                     	;# 
   124     0011                     	;# 
   125     0012                     	;# 
   126     0013                     	;# 
   127     0014                     	;# 
   128     0015                     	;# 
   129     0015                     	;# 
   130     0016                     	;# 
   131     0017                     	;# 
   132     0018                     	;# 
   133     0019                     	;# 
   134     001A                     	;# 
   135     001B                     	;# 
   136     001B                     	;# 
   137     001C                     	;# 
   138     001D                     	;# 
   139     001E                     	;# 
   140     001F                     	;# 
   141     0081                     	;# 
   142     0085                     	;# 
   143     0086                     	;# 
   144     0087                     	;# 
   145     0088                     	;# 
   146     0089                     	;# 
   147     008C                     	;# 
   148     008D                     	;# 
   149     008E                     	;# 
   150     0091                     	;# 
   151     0092                     	;# 
   152     0093                     	;# 
   153     0094                     	;# 
   154     0098                     	;# 
   155     0099                     	;# 
   156     009C                     	;# 
   157     009D                     	;# 
   158     009E                     	;# 
   159     009F                     	;# 
   160     010C                     	;# 
   161     010D                     	;# 
   162     010E                     	;# 
   163     010F                     	;# 
   164     018C                     	;# 
   165     018D                     	;# 
   166                           
   167                           	psect	nvCOMMON
   168     0072                     __pnvCOMMON:
   169     0072                     _Button_state:
   170     0072                     	ds	1
   171     0018                     _RCSTA	set	24
   172     0019                     _TXREG	set	25
   173     0006                     _PORTB	set	6
   174     0099                     _SPBRG	set	153
   175     0098                     _TXSTA	set	152
   176     0087                     _TRISC	set	135
   177     0081                     _OPTION_REG	set	129
   178     0086                     _TRISB	set	134
   179                           
   180                           	psect	cinit
   181     07FC                     start_initialization:	
   182                           ; #config settings
   183                           
   184     07FC                     __initialization:
   185     07FC                     end_of_initialization:	
   186                           ;End of C runtime variable initialization code
   187                           
   188     07FC                     __end_of__initialization:
   189     07FC  0183               	clrf	3
   190     07FD  120A  118A  2FB5   	ljmp	_main	;jump to C main() function
   191                           
   192                           	psect	cstackCOMMON
   193     0070                     __pcstackCOMMON:
   194     0070                     ?_init:
   195     0070                     ??_init:	
   196                           ; 1 bytes @ 0x0
   197                           
   198     0070                     ?_main:	
   199                           ; 1 bytes @ 0x0
   200                           
   201     0070                     ??_main:	
   202                           ; 1 bytes @ 0x0
   203                           
   204                           
   205                           ; 1 bytes @ 0x0
   206     0070                     	ds	2
   207                           
   208                           	psect	maintext
   209     07B5                     __pmaintext:	
   210 ;;
   211 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   212 ;;
   213 ;; *************** function _main *****************
   214 ;; Defined at:
   215 ;;		line 16 in file "UART_class.c"
   216 ;; Parameters:    Size  Location     Type
   217 ;;		None
   218 ;; Auto vars:     Size  Location     Type
   219 ;;		None
   220 ;; Return value:  Size  Location     Type
   221 ;;                  1    wreg      void 
   222 ;; Registers used:
   223 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   224 ;; Tracked objects:
   225 ;;		On entry : B00/0
   226 ;;		On exit  : 0/0
   227 ;;		Unchanged: 0/0
   228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   229 ;;      Params:         0       0       0       0       0
   230 ;;      Locals:         0       0       0       0       0
   231 ;;      Temps:          2       0       0       0       0
   232 ;;      Totals:         2       0       0       0       0
   233 ;;Total ram usage:        2 bytes
   234 ;; Hardware stack levels required when called: 1
   235 ;; This function calls:
   236 ;;		_init
   237 ;; This function is called by:
   238 ;;		Startup code after reset
   239 ;; This function uses a non-reentrant model
   240 ;;
   241                           
   242     07B5                     _main:	
   243                           ;psect for function _main
   244                           
   245     07B5                     l597:	
   246                           ;incstack = 0
   247                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   248                           
   249                           
   250                           ;UART_class.c: 18:   init();
   251     07B5  120A  118A  279B  120A  118A  	fcall	_init
   252     07BA                     l599:
   253                           
   254                           ;UART_class.c: 21:   {;UART_class.c: 22:       Button_state = PORTB;
   255     07BA  1283               	bcf	3,5	;RP0=0, select bank0
   256     07BB  1303               	bcf	3,6	;RP1=0, select bank0
   257     07BC  0806               	movf	6,w	;volatile
   258     07BD  00F2               	movwf	_Button_state
   259                           
   260                           ;UART_class.c: 24:       switch(Button_state)
   261     07BE  2FEB               	goto	l611
   262     07BF                     l601:
   263                           
   264                           ;UART_class.c: 27:               TXREG = 'A';
   265     07BF  3041               	movlw	65
   266     07C0  0099               	movwf	25	;volatile
   267                           
   268                           ;UART_class.c: 28:               _delay((unsigned long)((100)*(6000000/4000.0)));
   269     07C1  30C3               	movlw	195
   270     07C2  00F1               	movwf	??_main+1
   271     07C3  30CD               	movlw	205
   272     07C4  00F0               	movwf	??_main
   273     07C5                     u17:
   274     07C5  0BF0               	decfsz	??_main,f
   275     07C6  2FC5               	goto	u17
   276     07C7  0BF1               	decfsz	??_main+1,f
   277     07C8  2FC5               	goto	u17
   278                           
   279                           ;UART_class.c: 29:               break;
   280     07C9  2FBA               	goto	l599
   281     07CA                     l603:
   282                           
   283                           ;UART_class.c: 32:               TXREG = 'B';
   284     07CA  3042               	movlw	66
   285     07CB  0099               	movwf	25	;volatile
   286                           
   287                           ;UART_class.c: 33:               _delay((unsigned long)((100)*(6000000/4000.0)));
   288     07CC  30C3               	movlw	195
   289     07CD  00F1               	movwf	??_main+1
   290     07CE  30CD               	movlw	205
   291     07CF  00F0               	movwf	??_main
   292     07D0                     u27:
   293     07D0  0BF0               	decfsz	??_main,f
   294     07D1  2FD0               	goto	u27
   295     07D2  0BF1               	decfsz	??_main+1,f
   296     07D3  2FD0               	goto	u27
   297                           
   298                           ;UART_class.c: 34:               break;
   299     07D4  2FBA               	goto	l599
   300     07D5                     l605:
   301                           
   302                           ;UART_class.c: 37:               TXREG = 'C';
   303     07D5  3043               	movlw	67
   304     07D6  0099               	movwf	25	;volatile
   305                           
   306                           ;UART_class.c: 38:               _delay((unsigned long)((100)*(6000000/4000.0)));
   307     07D7  30C3               	movlw	195
   308     07D8  00F1               	movwf	??_main+1
   309     07D9  30CD               	movlw	205
   310     07DA  00F0               	movwf	??_main
   311     07DB                     u37:
   312     07DB  0BF0               	decfsz	??_main,f
   313     07DC  2FDB               	goto	u37
   314     07DD  0BF1               	decfsz	??_main+1,f
   315     07DE  2FDB               	goto	u37
   316                           
   317                           ;UART_class.c: 39:               break;
   318     07DF  2FBA               	goto	l599
   319     07E0                     l607:
   320                           
   321                           ;UART_class.c: 42:               TXREG = 'D';
   322     07E0  3044               	movlw	68
   323     07E1  0099               	movwf	25	;volatile
   324                           
   325                           ;UART_class.c: 43:               _delay((unsigned long)((100)*(6000000/4000.0)));
   326     07E2  30C3               	movlw	195
   327     07E3  00F1               	movwf	??_main+1
   328     07E4  30CD               	movlw	205
   329     07E5  00F0               	movwf	??_main
   330     07E6                     u47:
   331     07E6  0BF0               	decfsz	??_main,f
   332     07E7  2FE6               	goto	u47
   333     07E8  0BF1               	decfsz	??_main+1,f
   334     07E9  2FE6               	goto	u47
   335                           
   336                           ;UART_class.c: 44:               break;
   337     07EA  2FBA               	goto	l599
   338     07EB                     l611:
   339     07EB  0872               	movf	_Button_state,w
   340                           
   341                           ; Switch size 1, requested type "simple"
   342                           ; Number of cases is 4, Range of values is 112 to 224
   343                           ; switch strategies available:
   344                           ; Name         Instructions Cycles
   345                           ; simple_byte           13     7 (average)
   346                           ; jumptable            263     9 (fixed)
   347                           ;	Chosen strategy is simple_byte
   348     07EC  3A70               	xorlw	112	; case 112
   349     07ED  1903               	skipnz
   350     07EE  2FE0               	goto	l607
   351     07EF  3AC0               	xorlw	192	; case 176
   352     07F0  1903               	skipnz
   353     07F1  2FD5               	goto	l605
   354     07F2  3A60               	xorlw	96	; case 208
   355     07F3  1903               	skipnz
   356     07F4  2FCA               	goto	l603
   357     07F5  3A30               	xorlw	48	; case 224
   358     07F6  1903               	skipnz
   359     07F7  2FBF               	goto	l601
   360     07F8  2FBA               	goto	l599
   361     07F9  120A  118A  2800   	ljmp	start
   362     07FC                     __end_of_main:
   363                           
   364                           	psect	text1
   365     079B                     __ptext1:	
   366 ;; *************** function _init *****************
   367 ;; Defined at:
   368 ;;		line 49 in file "UART_class.c"
   369 ;; Parameters:    Size  Location     Type
   370 ;;		None
   371 ;; Auto vars:     Size  Location     Type
   372 ;;		None
   373 ;; Return value:  Size  Location     Type
   374 ;;                  1    wreg      void 
   375 ;; Registers used:
   376 ;;		wreg, status,2, status,0, btemp+1
   377 ;; Tracked objects:
   378 ;;		On entry : 0/0
   379 ;;		On exit  : 0/0
   380 ;;		Unchanged: 0/0
   381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   382 ;;      Params:         0       0       0       0       0
   383 ;;      Locals:         0       0       0       0       0
   384 ;;      Temps:          0       0       0       0       0
   385 ;;      Totals:         0       0       0       0       0
   386 ;;Total ram usage:        0 bytes
   387 ;; Hardware stack levels used: 1
   388 ;; This function calls:
   389 ;;		Nothing
   390 ;; This function is called by:
   391 ;;		_main
   392 ;; This function uses a non-reentrant model
   393 ;;
   394                           
   395     079B                     _init:	
   396                           ;psect for function _init
   397                           
   398     079B                     l583:	
   399                           ;incstack = 0
   400                           ; Regs used in _init: [wreg+status,2+status,0+btemp+1]
   401                           
   402                           
   403                           ;UART_class.c: 51:     TRISB = 0xF0;
   404     079B  30F0               	movlw	240
   405     079C  1683               	bsf	3,5	;RP0=1, select bank1
   406     079D  1303               	bcf	3,6	;RP1=0, select bank1
   407     079E  0086               	movwf	6	;volatile
   408     079F                     l585:
   409                           
   410                           ;UART_class.c: 52:     PORTB = 0x00;
   411     079F  1283               	bcf	3,5	;RP0=0, select bank0
   412     07A0  1303               	bcf	3,6	;RP1=0, select bank0
   413     07A1  0186               	clrf	6	;volatile
   414     07A2                     l587:
   415                           
   416                           ;UART_class.c: 54:     OPTION_REG &= 0x7F;
   417     07A2  307F               	movlw	127
   418     07A3  00FF               	movwf	btemp+1
   419     07A4  087F               	movf	btemp+1,w
   420     07A5  1683               	bsf	3,5	;RP0=1, select bank1
   421     07A6  1303               	bcf	3,6	;RP1=0, select bank1
   422     07A7  0581               	andwf	1,f	;volatile
   423     07A8                     l589:
   424                           
   425                           ;UART_class.c: 56:     TRISC = 0xC0;
   426     07A8  30C0               	movlw	192
   427     07A9  0087               	movwf	7	;volatile
   428     07AA                     l591:
   429                           
   430                           ;UART_class.c: 57:     TXSTA = 0x20;
   431     07AA  3020               	movlw	32
   432     07AB  0098               	movwf	24	;volatile
   433     07AC                     l593:
   434                           
   435                           ;UART_class.c: 58:     RCSTA = 0x90;
   436     07AC  3090               	movlw	144
   437     07AD  1283               	bcf	3,5	;RP0=0, select bank0
   438     07AE  1303               	bcf	3,6	;RP1=0, select bank0
   439     07AF  0098               	movwf	24	;volatile
   440     07B0                     l595:
   441                           
   442                           ;UART_class.c: 59:     SPBRG = 0x09;
   443     07B0  3009               	movlw	9
   444     07B1  1683               	bsf	3,5	;RP0=1, select bank1
   445     07B2  1303               	bcf	3,6	;RP1=0, select bank1
   446     07B3  0099               	movwf	25	;volatile
   447     07B4                     l39:
   448     07B4  0008               	return
   449     07B5                     __end_of_init:
   450     007E                     btemp	set	126	;btemp
   451     007E                     wtemp0	set	126
   452                           
   453                           	psect	config
   454                           
   455                           ;Config register CONFIG @ 0x2007
   456                           ;	Oscillator Selection bits
   457                           ;	FOSC = EXTRC, RC oscillator
   458                           ;	Watchdog Timer Enable bit
   459                           ;	WDTE = OFF, WDT disabled
   460                           ;	Power-up Timer Enable bit
   461                           ;	PWRTE = OFF, PWRT disabled
   462                           ;	Brown-out Reset Enable bit
   463                           ;	BOREN = OFF, BOR disabled
   464                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   465                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   466                           ;	Data EEPROM Memory Code Protection bit
   467                           ;	CPD = OFF, Data EEPROM code protection off
   468                           ;	Flash Program Memory Write Enable bits
   469                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   470                           ;	In-Circuit Debugger Mode bit
   471                           ;	DEBUG = 0x1, unprogrammed default
   472                           ;	Flash Program Memory Code Protection bit
   473                           ;	CP = OFF, Code protection off
   474     2007                     	org	8199
   475     2007  3F3B               	dw	16187

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2       3
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              0 COMMON     2     2      0
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      2       3       1       21.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       3       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       3      12        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Tue Oct 01 00:47:22 2024

                     l39 07B4                       u17 07C5                       u27 07D0  
                     u37 07DB                       u47 07E6                      l601 07BF  
                    l603 07CA                      l611 07EB                      l605 07D5  
                    l607 07E0                      l591 07AA                      l583 079B  
                    l593 07AC                      l585 079F                      l595 07B0  
                    l587 07A2                      l589 07A8                      l597 07B5  
                    l599 07BA                     _main 07B5                     _init 079B  
                   btemp 007E                     start 0000                    ?_main 0070  
                  ?_init 0070                    _RCSTA 0018                    _SPBRG 0099  
                  _PORTB 0006                    _TRISB 0086                    _TRISC 0087  
                  _TXREG 0019                    _TXSTA 0098                    status 0003  
                  wtemp0 007E          __initialization 07FC             __end_of_main 07FC  
           __end_of_init 07B5                   ??_main 0070                   ??_init 0070  
__end_of__initialization 07FC           __pcstackCOMMON 0070               __pnvCOMMON 0072  
             __pmaintext 07B5                  __ptext1 079B     end_of_initialization 07FC  
    start_initialization 07FC             _Button_state 0072                ___latbits 0002  
             _OPTION_REG 0081  
