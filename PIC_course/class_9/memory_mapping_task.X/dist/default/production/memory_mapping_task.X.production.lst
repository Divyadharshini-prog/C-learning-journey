

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Mon Oct 21 21:39:25 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13     0000                     
    14                           ; Generated 12/10/2023 GMT
    15                           ; 
    16                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48     0000                     	;# 
    49     0001                     	;# 
    50     0002                     	;# 
    51     0003                     	;# 
    52     0004                     	;# 
    53     0005                     	;# 
    54     0006                     	;# 
    55     0007                     	;# 
    56     0008                     	;# 
    57     0009                     	;# 
    58     000A                     	;# 
    59     000B                     	;# 
    60     000C                     	;# 
    61     000D                     	;# 
    62     000E                     	;# 
    63     000E                     	;# 
    64     000F                     	;# 
    65     0010                     	;# 
    66     0011                     	;# 
    67     0012                     	;# 
    68     0013                     	;# 
    69     0014                     	;# 
    70     0015                     	;# 
    71     0015                     	;# 
    72     0016                     	;# 
    73     0017                     	;# 
    74     0018                     	;# 
    75     0019                     	;# 
    76     001A                     	;# 
    77     001B                     	;# 
    78     001B                     	;# 
    79     001C                     	;# 
    80     001D                     	;# 
    81     001E                     	;# 
    82     001F                     	;# 
    83     0081                     	;# 
    84     0085                     	;# 
    85     0086                     	;# 
    86     0087                     	;# 
    87     0088                     	;# 
    88     0089                     	;# 
    89     008C                     	;# 
    90     008D                     	;# 
    91     008E                     	;# 
    92     0091                     	;# 
    93     0092                     	;# 
    94     0093                     	;# 
    95     0094                     	;# 
    96     0098                     	;# 
    97     0099                     	;# 
    98     009C                     	;# 
    99     009D                     	;# 
   100     009E                     	;# 
   101     009F                     	;# 
   102     010C                     	;# 
   103     010D                     	;# 
   104     010E                     	;# 
   105     010F                     	;# 
   106     018C                     	;# 
   107     018D                     	;# 
   108     0000                     	;# 
   109     0001                     	;# 
   110     0002                     	;# 
   111     0003                     	;# 
   112     0004                     	;# 
   113     0005                     	;# 
   114     0006                     	;# 
   115     0007                     	;# 
   116     0008                     	;# 
   117     0009                     	;# 
   118     000A                     	;# 
   119     000B                     	;# 
   120     000C                     	;# 
   121     000D                     	;# 
   122     000E                     	;# 
   123     000E                     	;# 
   124     000F                     	;# 
   125     0010                     	;# 
   126     0011                     	;# 
   127     0012                     	;# 
   128     0013                     	;# 
   129     0014                     	;# 
   130     0015                     	;# 
   131     0015                     	;# 
   132     0016                     	;# 
   133     0017                     	;# 
   134     0018                     	;# 
   135     0019                     	;# 
   136     001A                     	;# 
   137     001B                     	;# 
   138     001B                     	;# 
   139     001C                     	;# 
   140     001D                     	;# 
   141     001E                     	;# 
   142     001F                     	;# 
   143     0081                     	;# 
   144     0085                     	;# 
   145     0086                     	;# 
   146     0087                     	;# 
   147     0088                     	;# 
   148     0089                     	;# 
   149     008C                     	;# 
   150     008D                     	;# 
   151     008E                     	;# 
   152     0091                     	;# 
   153     0092                     	;# 
   154     0093                     	;# 
   155     0094                     	;# 
   156     0098                     	;# 
   157     0099                     	;# 
   158     009C                     	;# 
   159     009D                     	;# 
   160     009E                     	;# 
   161     009F                     	;# 
   162     010C                     	;# 
   163     010D                     	;# 
   164     010E                     	;# 
   165     010F                     	;# 
   166     018C                     	;# 
   167     018D                     	;# 
   168                           
   169                           	psect	nvCOMMON
   170     0070                     __pnvCOMMON:
   171     0070                     _value:
   172     0070                     	ds	1
   173     0006                     _PORTB	set	6
   174     0086                     _TRISB	set	134
   175                           
   176                           	psect	cinit
   177     07FC                     start_initialization:	
   178                           ; #config settings
   179                           
   180     07FC                     __initialization:
   181     07FC                     end_of_initialization:	
   182                           ;End of C runtime variable initialization code
   183                           
   184     07FC                     __end_of__initialization:
   185     07FC  0183               	clrf	3
   186     07FD  120A  118A  2FA0   	ljmp	_main	;jump to C main() function
   187                           
   188                           	psect	cstackCOMMON
   189     0071                     __pcstackCOMMON:
   190     0071                     ?_enable_internal_pullup:
   191     0071                     ??_enable_internal_pullup:	
   192                           ; 1 bytes @ 0x0
   193                           
   194     0071                     ?_set_trisc:	
   195                           ; 1 bytes @ 0x0
   196                           
   197     0071                     ??_set_trisc:	
   198                           ; 1 bytes @ 0x0
   199                           
   200     0071                     ?_set_portc:	
   201                           ; 1 bytes @ 0x0
   202                           
   203     0071                     ??_set_portc:	
   204                           ; 1 bytes @ 0x0
   205                           
   206     0071                     ?_main:	
   207                           ; 1 bytes @ 0x0
   208                           
   209     0071                     set_trisc@value:	
   210                           ; 1 bytes @ 0x0
   211                           
   212     0071                     set_portc@value:	
   213                           ; 1 bytes @ 0x0
   214                           
   215                           
   216                           ; 1 bytes @ 0x0
   217     0071                     	ds	1
   218     0072                     ??_main:
   219                           
   220                           	psect	maintext
   221     07A0                     __pmaintext:	
   222                           ; 1 bytes @ 0x1
   223 ;;
   224 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   225 ;;
   226 ;; *************** function _main *****************
   227 ;; Defined at:
   228 ;;		line 48 in file "memory_mapping_task.c"
   229 ;; Parameters:    Size  Location     Type
   230 ;;		None
   231 ;; Auto vars:     Size  Location     Type
   232 ;;		None
   233 ;; Return value:  Size  Location     Type
   234 ;;                  1    wreg      void 
   235 ;; Registers used:
   236 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   237 ;; Tracked objects:
   238 ;;		On entry : B00/0
   239 ;;		On exit  : 0/0
   240 ;;		Unchanged: 0/0
   241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   242 ;;      Params:         0       0       0       0       0
   243 ;;      Locals:         0       0       0       0       0
   244 ;;      Temps:          0       0       0       0       0
   245 ;;      Totals:         0       0       0       0       0
   246 ;;Total ram usage:        0 bytes
   247 ;; Hardware stack levels required when called: 1
   248 ;; This function calls:
   249 ;;		_enable_internal_pullup
   250 ;;		_set_portc
   251 ;;		_set_trisc
   252 ;; This function is called by:
   253 ;;		Startup code after reset
   254 ;; This function uses a non-reentrant model
   255 ;;
   256                           
   257     07A0                     _main:	
   258                           ;psect for function _main
   259                           
   260     07A0                     l587:	
   261                           ;incstack = 0
   262                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   263                           
   264                           
   265                           ;memory_mapping_task.c: 50:     set_trisc(0x00);
   266     07A0  3000               	movlw	0
   267     07A1  120A  118A  2793  120A  118A  	fcall	_set_trisc
   268                           
   269                           ;memory_mapping_task.c: 51:     set_portc(0x00);
   270     07A6  3000               	movlw	0
   271     07A7  120A  118A  278D  120A  118A  	fcall	_set_portc
   272     07AC                     l589:
   273                           
   274                           ;memory_mapping_task.c: 53:     TRISB = 0xF0;
   275     07AC  30F0               	movlw	240
   276     07AD  1683               	bsf	3,5	;RP0=1, select bank1
   277     07AE  1303               	bcf	3,6	;RP1=0, select bank1
   278     07AF  0086               	movwf	6	;volatile
   279     07B0                     l591:
   280                           
   281                           ;memory_mapping_task.c: 54:     PORTB = 0x00;
   282     07B0  1283               	bcf	3,5	;RP0=0, select bank0
   283     07B1  1303               	bcf	3,6	;RP1=0, select bank0
   284     07B2  0186               	clrf	6	;volatile
   285     07B3                     l593:
   286                           
   287                           ;memory_mapping_task.c: 57:     enable_internal_pullup();
   288     07B3  120A  118A  2799  120A  118A  	fcall	_enable_internal_pullup
   289     07B8                     l595:
   290                           
   291                           ;memory_mapping_task.c: 60:         value = PORTB & 0xF0;
   292     07B8  1283               	bcf	3,5	;RP0=0, select bank0
   293     07B9  1303               	bcf	3,6	;RP1=0, select bank0
   294     07BA  0806               	movf	6,w	;volatile
   295     07BB  39F0               	andlw	240
   296     07BC  00F0               	movwf	_value
   297                           
   298                           ;memory_mapping_task.c: 63:         switch (value) {
   299     07BD  2FE8               	goto	l611
   300     07BE                     l597:
   301                           
   302                           ;memory_mapping_task.c: 65:                 set_portc(0x80);
   303     07BE  3080               	movlw	128
   304     07BF  120A  118A  278D  120A  118A  	fcall	_set_portc
   305                           
   306                           ;memory_mapping_task.c: 66:                 break;
   307     07C4  2FB8               	goto	l595
   308     07C5                     l599:
   309                           
   310                           ;memory_mapping_task.c: 68:                 set_portc(0x04);
   311     07C5  3004               	movlw	4
   312     07C6  120A  118A  278D  120A  118A  	fcall	_set_portc
   313                           
   314                           ;memory_mapping_task.c: 69:                 break;
   315     07CB  2FB8               	goto	l595
   316     07CC                     l601:
   317                           
   318                           ;memory_mapping_task.c: 71:                 set_portc(0x00);
   319     07CC  3000               	movlw	0
   320     07CD  120A  118A  278D  120A  118A  	fcall	_set_portc
   321                           
   322                           ;memory_mapping_task.c: 72:                 break;
   323     07D2  2FB8               	goto	l595
   324     07D3                     l603:
   325                           
   326                           ;memory_mapping_task.c: 74:                 set_portc(0x84);
   327     07D3  3084               	movlw	132
   328     07D4  120A  118A  278D  120A  118A  	fcall	_set_portc
   329                           
   330                           ;memory_mapping_task.c: 75:                 break;
   331     07D9  2FB8               	goto	l595
   332     07DA                     l605:
   333                           
   334                           ;memory_mapping_task.c: 77:                 set_portc(0x00);
   335     07DA  3000               	movlw	0
   336     07DB  120A  118A  278D  120A  118A  	fcall	_set_portc
   337                           
   338                           ;memory_mapping_task.c: 78:                 break;
   339     07E0  2FB8               	goto	l595
   340     07E1                     l607:
   341                           
   342                           ;memory_mapping_task.c: 80:                 set_portc(0x00);
   343     07E1  3000               	movlw	0
   344     07E2  120A  118A  278D  120A  118A  	fcall	_set_portc
   345                           
   346                           ;memory_mapping_task.c: 81:                 break;
   347     07E7  2FB8               	goto	l595
   348     07E8                     l611:
   349     07E8  0870               	movf	_value,w
   350                           
   351                           ; Switch size 1, requested type "simple"
   352                           ; Number of cases is 5, Range of values is 112 to 240
   353                           ; switch strategies available:
   354                           ; Name         Instructions Cycles
   355                           ; simple_byte           16     9 (average)
   356                           ; jumptable            263     9 (fixed)
   357                           ;	Chosen strategy is simple_byte
   358     07E9  3A70               	xorlw	112	; case 112
   359     07EA  1903               	skipnz
   360     07EB  2FD3               	goto	l603
   361     07EC  3AC0               	xorlw	192	; case 176
   362     07ED  1903               	skipnz
   363     07EE  2FCC               	goto	l601
   364     07EF  3A60               	xorlw	96	; case 208
   365     07F0  1903               	skipnz
   366     07F1  2FC5               	goto	l599
   367     07F2  3A30               	xorlw	48	; case 224
   368     07F3  1903               	skipnz
   369     07F4  2FBE               	goto	l597
   370     07F5  3A10               	xorlw	16	; case 240
   371     07F6  1903               	skipnz
   372     07F7  2FDA               	goto	l605
   373     07F8  2FE1               	goto	l607
   374     07F9  120A  118A  2800   	ljmp	start
   375     07FC                     __end_of_main:
   376                           
   377                           	psect	text1
   378     0793                     __ptext1:	
   379 ;; *************** function _set_trisc *****************
   380 ;; Defined at:
   381 ;;		line 35 in file "memory_mapping_task.c"
   382 ;; Parameters:    Size  Location     Type
   383 ;;  value           1    wreg     unsigned char 
   384 ;; Auto vars:     Size  Location     Type
   385 ;;  value           1    0[COMMON] unsigned char 
   386 ;;  trisc_reg       2    0        PTR unsigned char 
   387 ;;		 -> RAM(512), 
   388 ;; Return value:  Size  Location     Type
   389 ;;                  1    wreg      void 
   390 ;; Registers used:
   391 ;;		wreg, fsr0l, fsr0h
   392 ;; Tracked objects:
   393 ;;		On entry : 0/0
   394 ;;		On exit  : 0/0
   395 ;;		Unchanged: 0/0
   396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   397 ;;      Params:         0       0       0       0       0
   398 ;;      Locals:         1       0       0       0       0
   399 ;;      Temps:          0       0       0       0       0
   400 ;;      Totals:         1       0       0       0       0
   401 ;;Total ram usage:        1 bytes
   402 ;; Hardware stack levels used: 1
   403 ;; This function calls:
   404 ;;		Nothing
   405 ;; This function is called by:
   406 ;;		_main
   407 ;; This function uses a non-reentrant model
   408 ;;
   409                           
   410     0793                     _set_trisc:	
   411                           ;psect for function _set_trisc
   412                           
   413                           
   414                           ;incstack = 0
   415                           ; Regs used in _set_trisc: [wregfsr0]
   416                           ;set_trisc@value stored from wreg
   417     0793  00F1               	movwf	set_trisc@value
   418     0794                     l579:
   419     0794                     l581:
   420                           
   421                           ;memory_mapping_task.c: 37:     *trisc_reg = value;
   422     0794  0871               	movf	set_trisc@value,w
   423     0795  1683               	bsf	3,5	;RP0=1, select bank1
   424     0796  1303               	bcf	3,6	;RP1=0, select bank1
   425     0797  0087               	movwf	7
   426     0798                     l10:
   427     0798  0008               	return
   428     0799                     __end_of_set_trisc:
   429                           
   430                           	psect	text2
   431     078D                     __ptext2:	
   432 ;; *************** function _set_portc *****************
   433 ;; Defined at:
   434 ;;		line 41 in file "memory_mapping_task.c"
   435 ;; Parameters:    Size  Location     Type
   436 ;;  value           1    wreg     unsigned char 
   437 ;; Auto vars:     Size  Location     Type
   438 ;;  value           1    0[COMMON] unsigned char 
   439 ;;  portc_reg       2    0        PTR unsigned char 
   440 ;;		 -> RAM(512), 
   441 ;; Return value:  Size  Location     Type
   442 ;;                  1    wreg      void 
   443 ;; Registers used:
   444 ;;		wreg, fsr0l, fsr0h
   445 ;; Tracked objects:
   446 ;;		On entry : 0/0
   447 ;;		On exit  : 0/0
   448 ;;		Unchanged: 0/0
   449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   450 ;;      Params:         0       0       0       0       0
   451 ;;      Locals:         1       0       0       0       0
   452 ;;      Temps:          0       0       0       0       0
   453 ;;      Totals:         1       0       0       0       0
   454 ;;Total ram usage:        1 bytes
   455 ;; Hardware stack levels used: 1
   456 ;; This function calls:
   457 ;;		Nothing
   458 ;; This function is called by:
   459 ;;		_main
   460 ;; This function uses a non-reentrant model
   461 ;;
   462                           
   463     078D                     _set_portc:	
   464                           ;psect for function _set_portc
   465                           
   466                           
   467                           ;incstack = 0
   468                           ; Regs used in _set_portc: [wregfsr0]
   469                           ;set_portc@value stored from wreg
   470     078D  00F1               	movwf	set_portc@value
   471     078E                     l583:
   472     078E                     l585:
   473                           
   474                           ;memory_mapping_task.c: 43:     *portc_reg = value;
   475     078E  0871               	movf	set_portc@value,w
   476     078F  1283               	bcf	3,5	;RP0=0, select bank0
   477     0790  1303               	bcf	3,6	;RP1=0, select bank0
   478     0791  0087               	movwf	7
   479     0792                     l13:
   480     0792  0008               	return
   481     0793                     __end_of_set_portc:
   482                           
   483                           	psect	text3
   484     0799                     __ptext3:	
   485 ;; *************** function _enable_internal_pullup *****************
   486 ;; Defined at:
   487 ;;		line 29 in file "memory_mapping_task.c"
   488 ;; Parameters:    Size  Location     Type
   489 ;;		None
   490 ;; Auto vars:     Size  Location     Type
   491 ;;  option_reg      2    0        PTR unsigned char 
   492 ;;		 -> RAM(512), 
   493 ;; Return value:  Size  Location     Type
   494 ;;                  1    wreg      void 
   495 ;; Registers used:
   496 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
   497 ;; Tracked objects:
   498 ;;		On entry : 0/0
   499 ;;		On exit  : 0/0
   500 ;;		Unchanged: 0/0
   501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   502 ;;      Params:         0       0       0       0       0
   503 ;;      Locals:         0       0       0       0       0
   504 ;;      Temps:          0       0       0       0       0
   505 ;;      Totals:         0       0       0       0       0
   506 ;;Total ram usage:        0 bytes
   507 ;; Hardware stack levels used: 1
   508 ;; This function calls:
   509 ;;		Nothing
   510 ;; This function is called by:
   511 ;;		_main
   512 ;; This function uses a non-reentrant model
   513 ;;
   514                           
   515     0799                     _enable_internal_pullup:	
   516                           ;psect for function _enable_internal_pullup
   517                           
   518     0799                     l575:	
   519                           ;incstack = 0
   520                           ; Regs used in _enable_internal_pullup: [wreg-fsr0h+status,2+status,0+btemp+1]
   521                           
   522     0799                     l577:
   523                           
   524                           ;memory_mapping_task.c: 31:     *option_reg &= ~(1 << 7);
   525     0799  307F               	movlw	127
   526     079A  00FF               	movwf	btemp+1
   527     079B  087F               	movf	btemp+1,w
   528     079C  1683               	bsf	3,5	;RP0=1, select bank1
   529     079D  1303               	bcf	3,6	;RP1=0, select bank1
   530     079E  0581               	andwf	1,f
   531     079F                     l7:
   532     079F  0008               	return
   533     07A0                     __end_of_enable_internal_pullup:
   534     007E                     btemp	set	126	;btemp
   535     007E                     wtemp0	set	126
   536                           
   537                           	psect	config
   538                           
   539                           ;Config register CONFIG @ 0x2007
   540                           ;	Oscillator Selection bits
   541                           ;	FOSC = EXTRC, RC oscillator
   542                           ;	Watchdog Timer Enable bit
   543                           ;	WDTE = OFF, WDT disabled
   544                           ;	Power-up Timer Enable bit
   545                           ;	PWRTE = OFF, PWRT disabled
   546                           ;	Brown-out Reset Enable bit
   547                           ;	BOREN = OFF, BOR disabled
   548                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   549                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   550                           ;	Data EEPROM Memory Code Protection bit
   551                           ;	CPD = OFF, Data EEPROM code protection off
   552                           ;	Flash Program Memory Write Enable bits
   553                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   554                           ;	In-Circuit Debugger Mode bit
   555                           ;	DEBUG = 0x1, unprogrammed default
   556                           ;	Flash Program Memory Code Protection bit
   557                           ;	CP = OFF, Code protection off
   558     2007                     	org	8199
   559     2007  3F3B               	dw	16187

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      1       2
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    enable_internal_pullup@option_reg	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), 

    set_portc@portc_reg	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), 

    set_trisc@trisc_reg	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), 


Critical Paths under _main in COMMON

    _main->_set_portc
    _main->_set_trisc

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      75
             _enable_internal_pullup
                          _set_portc
                          _set_trisc
 ---------------------------------------------------------------------------------
 (1) _set_trisc                                            3     3      0      30
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _set_portc                                            3     3      0      30
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _enable_internal_pullup                               2     2      0      15
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _enable_internal_pullup
   _set_portc
   _set_trisc

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      1       2       1       14.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       2       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       2      12        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Mon Oct 21 21:39:25 2024

                             l7 079F                              l10 0798                              l13 0792  
                           l601 07CC                             l603 07D3                             l611 07E8  
                           l605 07DA                             l607 07E1                             l581 0794  
                           l575 0799                             l583 078E                             l591 07B0  
                           l577 0799                             l585 078E                             l593 07B3  
                           l579 0794                             l595 07B8                             l587 07A0  
                           l597 07BE                             l589 07AC                             l599 07C5  
                          _main 07A0                            btemp 007E                            start 0000  
                         ?_main 0071                           _PORTB 0006                           _TRISB 0086  
                         _value 0070                           status 0003                           wtemp0 007E  
               __initialization 07FC                    __end_of_main 07FC                          ??_main 0072  
       __end_of__initialization 07FC                  __pcstackCOMMON 0071                      __pnvCOMMON 0070  
                    __pmaintext 07A0        ??_enable_internal_pullup 0071                         __ptext1 0793  
                       __ptext2 078D                         __ptext3 0799            end_of_initialization 07FC  
             __end_of_set_portc 0793               __end_of_set_trisc 0799             start_initialization 07FC  
        _enable_internal_pullup 0799                       ___latbits 0002                  set_portc@value 0071  
                set_trisc@value 0071                       _set_portc 078D                       _set_trisc 0793  
                    ?_set_portc 0071                      ?_set_trisc 0071         ?_enable_internal_pullup 0071  
__end_of_enable_internal_pullup 07A0                     ??_set_portc 0071                     ??_set_trisc 0071  
